{"version":3,"file":"assets/lambda/js/chunks/Dataform-el.9397eb09cda19ffe.js","mappings":"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","sources":["webpack:////Users/munkh-altai/Workspace/LAMBDA/starter-apps/lambda-go/assets/dataform_custom|sync|/^\\.\\/.*\\.vue$/","webpack:///./node_modules/@lambda-platform/dataform/src/elements/index.js","webpack:///./node_modules/@lambda-platform/dataform/src/rule.js","webpack:///./node_modules/@lambda-platform/dataform/src/utils/formula_and_trigger.js","webpack:///./node_modules/@lambda-platform/dataform/src/utils/helpers.js","webpack:///./node_modules/@lambda-platform/dataform/src/utils/methods.js","webpack:///assets/dataform_custom/example.vue","webpack:///./assets/dataform_custom/example.vue?adb4","webpack:///./assets/dataform_custom/example.vue","webpack:///./assets/dataform_custom/example.vue?aada","webpack:///./node_modules/@lambda-platform/dataform/src/Dataform.vue?b248","webpack:///node_modules/@lambda-platform/dataform/src/Dataform.vue","webpack:///./node_modules/@lambda-platform/dataform/src/Dataform.vue?dd0b","webpack:///./node_modules/@lambda-platform/dataform/src/Dataform.vue","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"sourcesContent":["var map = {\n\t\"./example.vue\": 4743\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8883;","export const elementList = [\n    {\n        element: \"Text\",\n        component:()=> import(/* webpackChunkName: \"form-field-text\" */'./Text.vue'),\n    },\n    {\n        element: \"Select\",\n        component:()=> import(/* webpackChunkName: \"form-field-Select\" */'./Select.vue'),\n    },\n    {\n        element: \"TreeSelect\",\n        component:()=> import(/* webpackChunkName: \"form-field-TreeSelect\" */'./TreeSelect.vue'),\n    },\n    {\n        element: \"Number\",\n        component:()=> import(/* webpackChunkName: \"form-field-Number\" */'./Number.vue'),\n    },\n    {\n        element: \"Textarea\",\n        component:()=> import(/* webpackChunkName: \"form-field-Textarea\" */'./Textarea.vue'),\n    },\n    {\n        element: \"Date\",\n        component:()=> import(/* webpackChunkName: \"form-field-Date\" */'./Date.vue'),\n    },\n    {\n        element: \"DateTime\",\n        component:()=> import(/* webpackChunkName: \"form-field-DateTime\" */'./DateTime.vue'),\n    },\n    {\n        element: \"Divider\",\n        component:()=> import(/* webpackChunkName: \"form-field-Divider\" */'./Divider.vue'),\n    },\n    {\n        element: \"Image\",\n        component:()=> import(/* webpackChunkName: \"form-field-Image\" */'./Image.vue'),\n    },\n    {\n        element: \"HTML\",\n        component:()=> import(/* webpackChunkName: \"form-field-HTML\" */'./HTML.vue'),\n    },\n    {\n        element: \"ImageSubform\",\n        component:()=> import(/* webpackChunkName: \"form-field-ImageSubform\" */'./ImageSubform.vue'),\n    },\n    {\n        element: \"ImageDrag\",\n        component:()=> import(/* webpackChunkName: \"form-field-ImageDrag\" */'./ImageDrag.vue'),\n    },\n\n    {\n        element: \"Checkbox\",\n        component:()=> import(/* webpackChunkName: \"form-field-Checkbox\" */'./Checkbox.vue'),\n    },\n    {\n        element: \"CK\",\n        component:()=> import(/* webpackChunkName: \"form-field-CK\" */'./CK.vue'),\n    },\n    {\n        element: \"ColorPicker\",\n        component:()=> import(/* webpackChunkName: \"form-field-ColorPicker\" */'./ColorPicker.vue'),\n    },\n    // {\n    //     element: \"DateRange\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-DateRange\" */'./DateRange.vue'),\n    // },\n    {\n        element: \"Email\",\n        component:()=> import(/* webpackChunkName: \"form-field-Email\" */'./Email.vue'),\n    },\n    {\n        element: \"File\",\n        component:()=> import(/* webpackChunkName: \"form-field-File\" */'./File.vue'),\n    },\n    {\n        element: \"Download\",\n        component:()=> import(/* webpackChunkName: \"form-field-Download\" */'./Download.vue'),\n    },\n    {\n        element: \"Geographic\",\n        component:()=> import(/* webpackChunkName: \"form-field-Geographic\" */'./Geographic.vue'),\n    },\n    {\n        element: \"Hidden\",\n        component:()=> import(/* webpackChunkName: \"form-field-Hidden\" */'./Hidden.vue'),\n    },\n    {\n        element: \"Map\",\n        component:()=> import(/* webpackChunkName: \"form-field-Map\" */'./Map.vue'),\n    },\n    {\n        element: \"Money\",\n        component:()=> import(/* webpackChunkName: \"form-field-Money\" */'./Money.vue'),\n    },\n    {\n        element: \"NumberGenerate\",\n        component:()=> import(/* webpackChunkName: \"form-field-NumberGenerate\" */'./NumberGenerate.vue'),\n    },\n    {\n        element: \"Password\",\n        component:()=> import(/* webpackChunkName: \"form-field-Password\" */'./Password.vue'),\n    },\n    {\n        element: \"PasswordGenerate\",\n        component:()=> import(/* webpackChunkName: \"form-field-PasswordGenerate\" */'./PasswordGenerate.vue'),\n    },\n    {\n        element: \"Radio\",\n        component:()=> import(/* webpackChunkName: \"form-field-Radio\" */'./Radio.vue'),\n    },\n    {\n        element: \"RadioWithTextInput\",\n        component:()=> import(/* webpackChunkName: \"form-field-RadioWithTextInput\" */'./RadioWithTextInput.vue'),\n    },\n    {\n        element: \"Register\",\n        component:()=> import(/* webpackChunkName: \"form-field-Register\" */'./Register.vue'),\n    },\n    {\n        element: \"ISelect\",\n        component:()=> import(/* webpackChunkName: \"form-field-ISelect\" */'./ISelect.vue'),\n    },\n    {\n        element: \"Search\",\n        component:()=> import(/* webpackChunkName: \"form-field-Search\" */'./Search.vue'),\n    },\n    // {\n    //     element: \"Slider\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-Slider\" */'./Slider.vue'),\n    // },\n    {\n        element: \"Switch\",\n        component:()=> import(/* webpackChunkName: \"form-field-Switch\" */'./Switch.vue'),\n    },\n    {\n        element: \"Time\",\n        component:()=> import(/* webpackChunkName: \"form-field-Time\" */'./Time.vue'),\n    },\n    // {\n    //     element: \"UniqueGeneration\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-UniqueGeneration\" */'./UniqueGeneration.vue'),\n    // },\n    {\n        element: \"AdminMenu\",\n        component:()=> import(/* webpackChunkName: \"form-field-AdminMenu\" */'./AdminMenu.vue'),\n    },\n    {\n        element: \"subform/Grid\",\n        component:()=> import(/* webpackChunkName: \"form-field-sub-form-grid\" */'./subform/Grid.vue'),\n    },\n    {\n        element: \"subform/Form\",\n        component:()=> import(/* webpackChunkName: \"form-field-sub-form\" */'./subform/Form.vue'),\n    },\n];\n\nconst Notfount = ()=> import(/* webpackChunkName: \"form-field-not-fount\" */'./NotFound.vue');\nconst CustomElement = ()=> import(/* webpackChunkName: \"form-field-CustomElement\" */'./CustomElement.vue');\n\nconst requireCustomElement = (type)=>{\n    if(window.init.data_form_custom_elements){\n        let custom = window.init.data_form_custom_elements.find(custom_element=>custom_element.element == type);\n        if (custom) {\n\n            try {\n                return require(`dataform_custom/${type}.vue`).default;\n            }\n            catch (exception_var) {\n                return CustomElement;\n            }\n        }else {\n            // throw `${type} element not fount`\n            return Notfount;\n        }\n\n    } else {\n        return Notfount;\n    }\n}\n\nexport const element = (type) => {\n    if (type !== null && typeof type !== \"undefined\") {\n        const elIndex = elementList.findIndex(el=>el.element == type);\n        if(elIndex >= 0){\n            return elementList[elIndex].component;\n        }\n    }\n    return requireCustomElement(type);\n}\n","let ruleModel = null;\nlet identityColumn = null;\nlet identity = null;\n\nconst isValid = (val) => {\n    if (typeof val !== undefined && val != null && val != \"\") {\n        return true;\n    }\n    return false;\n}\n\nexport const setModel = (model) => {\n    ruleModel = model;\n}\n\nexport const setIdentity = (column, value) => {\n    identity = value;\n    identityColumn = column;\n}\n\nexport const rules = [{\n    type: 'required',\n    msg: 'Талбарыг бөглөнө үү!'\n},\n    {\n        type: 'email',\n        msg: 'Имэйл хаягаа зөв оруулна уу!'\n    },\n    {\n        type: 'number',\n        msg: 'Тоон утга оруулна уу!'\n    },\n    {\n        type: 'englishAlphabet',\n        msg: 'Зөвхөн латин үсэг оруулна уу!'\n    },\n    {\n        type: 'unique',\n        msg: 'Давхацсан утга оруулсан байна!'\n    },\n    {\n        type: 'lambda-account',\n        msg: 'Давхацсан утга оруулсан байна!'\n    }\n];\n\nconst unique = (rule, value, callback) => {\n    axios.post(`/lambda/krud/unique`, {\n        table: ruleModel,\n        identityColumn: identityColumn,\n        identity: identity,\n        field: rule.field,\n        val: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n            callback(new Error(o.data.msg));\n        }\n    })\n};\nconst checkLambdaaccount = (rule, value, callback) => {\n    axios.post(`/lambda/check`, {\n        value: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n            callback(new Error(`'${value} Давхацсан утга оруулсан байна!'`));\n        }\n    })\n};\nconst englishAlphabet = (rule, value, callback) => {\n    var letterNumber = /^[0-9a-zA-Z-]+$/;\n    if(value.match(letterNumber)){\n        callback();\n    } else {\n        callback(new Error(\"Зөвхөн латин үсэг оруулна уу!\"));\n    }\n};\nconst check_current_password = (rule, value, callback) => {\n    axios.post(`/lambda/krud/check_current_password`, {\n        password: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n\n            callback(new Error(o.data.msg));\n        }\n    })\n};\n\n\nexport const getRule = (rule) => {\n    switch (rule.type) {\n        case 'required':\n            return {\n                required: true,\n                message: rule.msg\n            }\n        case 'min':\n            return {\n                type: 'string',\n                min: parseInt(rule.val, 10),\n                message: rule.msg\n            }\n        case 'max':\n            return {\n                type: 'string',\n                min: parseInt(rule.val, 10),\n                message: rule.msg\n            }\n        case 'email':\n            return {\n                type: 'email',\n                message: rule.msg\n            }\n        case 'number':\n            return {\n                type: 'number',\n                message: rule.msg\n            }\n        case 'unique':\n            return {\n                validator: unique,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'lambda-account':\n            return {\n                validator: checkLambdaaccount,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'englishAlphabet':\n            return {\n                validator: englishAlphabet,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'check_current_password':\n            return {\n                validator: check_current_password,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        default:\n            return null;\n\n    }\n}\n","var templateRe = /\\{ *([\\w_-]+) *\\}/g;\nvar fieldTimeout = null;\n\nexport function dataFromTemplate(str, data) {\n    return str.replace(templateRe, function (str, key) {\n        let value = data[key];\n        if (value === undefined) {\n            return '';\n        } else if (typeof value === 'function') {\n            value = value(data);\n        }\n        return value;\n    });\n}\n\nexport function evil(fn) {\n    return new Function('return ' + fn)();\n}\n\nexport function doFormula(formulas, model, model_, schema_, rule_, subFormModelName) {\n\n    //formula\n    if (formulas.length >= 1) {\n        let formula_index = formulas.findIndex(formula => formula.model == model)\n        if (formula_index <= -1) {\n            formulas.map(formula => {\n                if(formula.template.includes(model)){\n                    doFormula2(formula, model, model_, schema_, rule_, subFormModelName)\n                }\n            });\n        } else {\n            doFormula2(formulas[formula_index], model, model_, schema_, rule_, subFormModelName)\n        }\n    }\n}\nfunction doFormula2(formula, model, model_, schema_, rule_, subFormModelName) {\n\n    let use_formula = false;\n    if (formula['form']) {\n        if (formula['form'] == 'main')\n            use_formula = true;\n        else if (subFormModelName) {\n            if (formula['form'] == subFormModelName)\n                use_formula = true\n\n        }\n    } else\n        use_formula = true;\n\n\n    if (use_formula) {\n\n        let pre_formula = dataFromTemplate(formula.template, model_);\n\n\n        if (pre_formula) {\n            let calculated = evil(pre_formula);\n\n            formula.targets.map(target => {\n                let schema_index = getSchemaIndex(schema_, target.field);\n                if (schema_index >= 0) {\n                    if (target.prop == 'value') {\n                        model_[target.field] = calculated;\n                    } else {\n                        if (target.prop == 'hidden') {\n                            if (rule_) {\n                                if (rule_[target.field]) {\n                                    if (rule_[target.field].length > 0 && rule_[target.field][0].hasOwnProperty(\"required\"))\n                                        rule_[target.field][0].required = calculated ? false : true;\n                                }\n                            }\n\n                        }\n                        // schema_[schema_index][target.prop] = calculated;\n                        Vue.set(schema_[schema_index], target.prop, calculated)\n                    }\n                }\n            })\n        }\n    }\n}\n\nexport function doTrigger(model, val, model_, schema_, refs, Message, editMode) {\n    if (val) {\n        let model_index = getSchemaIndex(schema_, model);\n        if (model_index >= 0) {\n            if (schema_[model_index]['trigger']) {\n\n                if (fieldTimeout) {\n                    clearTimeout(fieldTimeout);\n                }\n                 fieldTimeout = setTimeout(() => {\n                    callFieldTrigger(schema_[model_index]['trigger'], model_, schema_, refs, Message, editMode);\n                 }, schema_[model_index]['triggerTimeout'] != undefined && schema_[model_index]['triggerTimeout'] !== null && schema_[model_index]['triggerTimeout'] != ''  ? schema_[model_index]['triggerTimeout'] : 0);\n            }\n        }\n    }\n}\n\nfunction setValueProps(field, model_, schema_, refs, is_sub) {\n\n    if (is_sub) {\n        let schema_sub_index = getSchemaIndex(schema_, is_sub);\n        if (schema_sub_index >= 0) {\n            let schema_index = getSchemaIndex(schema_[schema_sub_index].schema, field.field);\n            if (schema_index >= 0) {\n                Object.keys(field.props).forEach(prop => {\n                    schema_[schema_sub_index].schema[schema_index][prop] = field.props[prop];\n                });\n            }\n        }\n    } else {\n\n        let schema_index = getSchemaIndex(schema_, field.field);\n        if (schema_index >= 0) {\n            if ('value' in field) {\n                model_[field.field] = field.value;\n\n                let current_schema = schema_[schema_index];\n                if (current_schema.formType == \"SubForm\") {\n                    refs[`sf${field.field}`][0].fillData();\n                }\n            }\n            if (field.props) {\n                Object.keys(field.props).forEach(prop => {\n                    schema_[schema_index][prop] = field.props[prop];\n                });\n            }\n        }\n    }\n\n\n}\n\nfunction callFieldTrigger(trigger_url, model_, schema_, refs, Message, editMode) {\n    // console.log('axios sent', trigger_url);\n\n    axios.post(trigger_url, {model: {...model_}, editMode: editMode})\n        .then(({data}) => {\n            if (data['schema']) {\n                data['schema'].forEach(field => {\n                    setValueProps(field, model_, schema_, refs)\n                })\n            }\n            if (data['schema_sub']) {\n\n                data['schema_sub'].forEach(schema_sub => {\n                    schema_sub.schema.forEach(field_sub => {\n                        setValueProps(field_sub, model_, schema_, refs, schema_sub.model)\n                    })\n\n                })\n            }\n            if (data['message']) {\n                if (data['message']['type'] == 'success') {\n                    Message.success({\n                        duration: 3,\n                        desc:data['message']['message']\n\n                    });\n                } else {\n                    Message.error({\n                        duration: 3,\n\n                        desc:data['message']['message']\n                    });\n                }\n            }\n            if (data['info']) {\n                data['info'].forEach(info => {\n                    document.getElementById(info.target).innerHTML = info.html;\n                })\n            }\n        })\n}\n\nfunction getSchemaIndex(schema_, model) {\n    return schema_.findIndex(item => item.model == model);\n}\n","export const applyDrag = (arr, dragResult) => {\n    const { removedIndex, addedIndex, payload } = dragResult\n    if (removedIndex === null && addedIndex === null) return arr\n\n    const result = [...arr]\n    let itemToAdd = payload\n\n    if (removedIndex !== null) {\n        itemToAdd = result.splice(removedIndex, 1)[0]\n    }\n\n    if (addedIndex !== null) {\n        result.splice(addedIndex, 0, itemToAdd)\n    }\n\n    return result\n}\nexport const generateItems = (count, creator) => {\n    const result = []\n    for (let i = 0; i < count; i++) {\n        result.push(creator(i))\n    }\n    return result\n}\nexport const getTableMeta = (table)=>{\n    if(table) {\n        if (window.init.dbSchema.tableMeta[table]) {\n            return window.init.dbSchema.tableMeta[table]\n        }\n    }\n    return []\n    // let res = await axios.get(`/lambda/puzzle/table-schema/${table}`);\n    // if(!window.init.dbSchema.tableMeta) {\n    //     window.init.dbSchema.tableMeta = {}\n    // }\n    // window.init.dbSchema.tableMeta[table] = res.data\n    //\n    // return res.data\n}\nexport const getRelationData = (item, relations) =>{\n    if (item.relation.filter == '' || typeof item.relation.filter === \"undefined\") {\n        if (relations[item.relation.table])\n            return relations[item.relation.table]['data']\n        else\n            return []\n    } else {\n        if (relations[item.model])\n            return relations[item.model]['data']\n        else\n            return []\n    }\n}\n","export const idGenerator = (type) => {\n    let randomId = Math.random()\n        .toString(36)\n        .substr(3, 9);\n    return `${type}-${randomId}`;\n}\n\n\nexport const evalstr = (str) => {\n    if (typeof str == \"undefined\" || str == null || str == \"\") {\n        return true;\n    }\n    return eval(str.toString());\n}\n\nexport const isValid = (val) => {\n    if (typeof val == \"undefined\" || val == null || val == '') {\n        return false;\n    }\n    return true;\n}\n","<template>\n\n</template>\n\n<script>\nexport default {\nname: \"example\"\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./example.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./example.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./example.vue?vue&type=template&id=41f3b5cc&scoped=true&\"\nimport script from \"./example.vue?vue&type=script&lang=js&\"\nexport * from \"./example.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"41f3b5cc\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\"div\")}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.viewMode ? 'dataform view-mode' : 'dataform'},[_c('Form',{ref:_vm.meta.model +'-'+ _vm.schemaID,attrs:{\"model\":_vm.model,\"rules\":_vm.rule,\"label-position\":_vm.meta.option.labelPosition,\"label-width\":_vm.meta.option.labelPosition == 'top' ? undefined : _vm.meta.option.labelWidth}},[_c('div',{staticClass:\"dataform-header\"},[_c('h3',[_vm._v(_vm._s(_vm.title)),(_vm.showID)?_c('b',[(_vm.model[_vm.identity])?_c('span',[_vm._v(\": \"+_vm._s(_vm.model[_vm.identity]))]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"dataform-body\"},[(_vm.loadConfig)?_c('Spin',{attrs:{\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.ui.schema),function(row){return (!_vm.loadConfig)?_c('Row',{key:row.index},[_vm._l((row.children),function(col){return (_vm.isVisibleSection(col) && !row.sectionRenderByTab)?_c('Col',{key:col.index,attrs:{\"xs\":col.span.xs,\"sm\":col.span.sm,\"md\":col.span.md,\"lg\":col.span.lg}},[_c('div',{class:col.name != '' ? 'fieldset' : ''},[(col.name != '')?_c('legend',[_vm._v(_vm._s(col.name))]):_vm._e(),_vm._v(\" \"),_vm._l((col.children),function(srow){return _c('Row',{key:srow.index},_vm._l((srow.children),function(scol){return _c('Col',{key:scol.index,attrs:{\"id\":scol.id,\"xs\":24,\"sm\":24,\"md\":scol.span.md,\"lg\":scol.span.lg}},[(scol.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(scol.name)+\"\\n                                \")]):_vm._e(),_vm._v(\" \"),_vm._l((scol.children),function(item){return _c('span',{key:item.index},[(_vm.isShow(item.model) && item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"formula\":_vm.formula,\"relations\":_vm.relations,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"editMode\":_vm.editMode,\"model\":{form: _vm.model, component: item.model},\"disabled\":item.disabled ? item.disabled : false,\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"getSchemaByModel\":_vm.getSchemaByModel,\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1)})],2)}),1)})],2)]):_vm._e()}),_vm._v(\" \"),(row.sectionRenderByTab)?_c('Tabs',{attrs:{\"value\":0}},_vm._l((row.children),function(col){return (_vm.isVisibleSection(col))?_c('TabPane',{key:col.index,attrs:{\"label\":col.name,\"name\":col.index}},_vm._l((col.children),function(srow){return _c('Row',{key:srow.index},_vm._l((srow.children),function(scol){return _c('Col',{key:scol.index,attrs:{\"id\":scol.id,\"xs\":24,\"sm\":24,\"md\":scol.span.md,\"lg\":scol.span.lg}},[(scol.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(scol.name)+\"\\n                                \")]):_vm._e(),_vm._v(\" \"),_vm._l((scol.children),function(item){return _c('span',{key:item.index},[(_vm.isShow(item.model) && item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"formula\":_vm.formula,\"relations\":_vm.relations,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"editMode\":_vm.editMode,\"model\":{form: _vm.model, component: item.model},\"disabled\":item.disabled ? item.disabled : false,\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"getSchemaByModel\":_vm.getSchemaByModel,\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1)})],2)}),1)}),1):_vm._e()}),1):_vm._e(),_vm._v(\" \"),_vm._l((row.children),function(col){return (col.type == 'col')?_c('Col',{key:col.index,attrs:{\"xs\":col.span.xs,\"sm\":col.span.sm,\"md\":col.span.md,\"lg\":col.span.lg}},[(col.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(col.name))]):_vm._e(),_vm._v(\" \"),_vm._l((col.children),function(item){return _c('span',{key:item.index},[(_vm.isShow(item.model) && item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"relations\":_vm.relations,\"formula\":_vm.formula,\"schemaID\":_vm.schemaID,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"editMode\":_vm.editMode,\"disabled\":item.disabled ? item.disabled : false,\"model\":{form: _vm.model, component: item.model},\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"getSchemaByModel\":_vm.getSchemaByModel,\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1)})],2):_vm._e()})],2):_vm._e()})],2),_vm._v(\" \"),(!_vm.viewMode)?_c('div',{staticClass:\"dataform-footer\"},[_c('Button',{attrs:{\"type\":\"info\",\"loading\":_vm.asyncMode},on:{\"click\":function($event){return _vm.handleSubmit(_vm.meta.model +'-'+ _vm.schemaID)}}},[(!_vm.asyncMode)?_c('span',[_vm._v(\"\\n                    \"+_vm._s(_vm.lang.save)+\"\\n                \")]):_c('span',[_vm._v(\"\\n                    \"+_vm._s(_vm.lang.pleaseWait)+\"\\n                \")])]),_vm._v(\" \"),(!_vm.editMode)?_c('Button',{staticStyle:{\"margin-left\":\"8px\"},on:{\"click\":function($event){return _vm.handleReset(_vm.meta.model +'-'+ _vm.schemaID)}}},[_vm._v(\"\\n                \"+_vm._s(_vm.lang.fillInTheNewOne)+\"\\n            \")]):_vm._e()],1):_vm._e()]),_vm._v(\" \"),_c('Drawer',{staticClass:\"info-modal\",attrs:{\"title\":_vm.infoTitle,\"width\":\"860px\"},model:{value:(_vm.showInfo),callback:function ($$v) {_vm.showInfo=$$v},expression:\"showInfo\"}},[_c('iframe',{attrs:{\"src\":_vm.infoUrl,\"frameborder\":\"0\"}}),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{attrs:{\"type\":\"primary\",\"size\":\"large\"},on:{\"click\":function($event){_vm.showInfo = false}}},[_vm._v(\"\\n                \"+_vm._s(_vm.lang.close)+\"\\n            \")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div :class=\"viewMode ? 'dataform view-mode' : 'dataform'\">\n        <Form :ref=\"meta.model +'-'+ schemaID\" :model=\"model\" :rules=\"rule\" :label-position=meta.option.labelPosition\n              :label-width=\"meta.option.labelPosition == 'top' ? undefined : meta.option.labelWidth\">\n            <div class=\"dataform-header\">\n                <h3>{{ title }}<b v-if=\"showID\"><span v-if=\"model[identity]\">: {{ model[identity] }}</span></b></h3>\n            </div>\n            <div class=\"dataform-body\">\n                <Spin v-if=\"loadConfig\" fix></Spin>\n                <!-- Tab Section -->\n\n                <Row v-if=\"!loadConfig\" v-for=\"row in ui.schema\" :key=\"row.index\">\n                    <!-- Section -->\n                    <Col v-for=\"col in row.children\" v-if=\"isVisibleSection(col) && !row.sectionRenderByTab\"\n                         :key=\"col.index\" :xs=\"col.span.xs\"\n                         :sm=\"col.span.sm\" :md=\"col.span.md\" :lg=\"col.span.lg\">\n                        <div :class=\"col.name != '' ? 'fieldset' : ''\">\n                            <legend v-if=\"col.name != ''\">{{ col.name }}</legend>\n                            <Row v-for=\"srow in col.children\" :key=\"srow.index\">\n                                <Col v-for=\"scol in srow.children\" :id=\"scol.id\" :key=\"scol.index\" :xs=\"24\"\n                                     :sm=\"24\" :md=\"scol.span.md\" :lg=\"scol.span.lg\">\n                                    <Divider v-if=\"scol.name\" orientation=\"left\" class=\"form-divider\">{{ scol.name }}\n                                    </Divider>\n                                    <span v-for=\"item in scol.children\" :key=\"item.index\">\n                                        <component\n                                            :ref=\"'sf'+item.model\"\n                                            v-if=\"isShow(item.model) && item.formType == 'SubForm' && item.subtype\"\n                                            :is=\"element(`subform/${item.subtype}`)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :form=\"setMeta(item, true)\"\n                                            :formula=\"formula\"\n                                            :relations=\"relations\"\n                                            :editMode=\"editMode\">\n                                        </component>\n                                        <component\n                                            v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                            :do_render=\"do_render\"\n                                            :editMode=\"editMode\"\n                                            :is=\"element(item.formType)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :disabled=\"item.disabled ? item.disabled : false\"\n                                            :label=\"item.label ? item.label : `[${item.model}]`\"\n                                            :rule=\"item.model\"\n                                            :meta=\"setMeta(item)\"\n                                            :identity=\"identity\"\n                                            :getSchemaByModel=\"getSchemaByModel\"\n                                            :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                                            :setSchemaByModel=\"setSchemaByModel\"\n                                            :relation_data=\"getRelation(item)\">\n                                        </component>\n                                        </span>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Col>\n                    <!-- Tab -->\n                    <Tabs :value=\"0\" v-if=\"row.sectionRenderByTab\">\n                        <TabPane :label=\"col.name\" :name=\"col.index\" v-for=\"col in row.children\"\n                                 v-if=\"isVisibleSection(col)\" :key=\"col.index\">\n                            <Row v-for=\"srow in col.children\" :key=\"srow.index\">\n                                <Col v-for=\"scol in srow.children\" :id=\"scol.id\" :key=\"scol.index\" :xs=\"24\"\n                                     :sm=\"24\" :md=\"scol.span.md\" :lg=\"scol.span.lg\">\n                                    <Divider v-if=\"scol.name\" orientation=\"left\" class=\"form-divider\">{{ scol.name }}\n                                    </Divider>\n                                    <span v-for=\"item in scol.children\" :key=\"item.index\">\n                                        <component\n                                            :ref=\"'sf'+item.model\"\n                                            v-if=\"isShow(item.model) && item.formType == 'SubForm' && item.subtype\"\n                                            :is=\"element(`subform/${item.subtype}`)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :form=\"setMeta(item, true)\"\n                                            :formula=\"formula\"\n                                            :relations=\"relations\"\n                                            :editMode=\"editMode\">\n                                        </component>\n                                        <component\n                                            v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                            :do_render=\"do_render\"\n                                            :editMode=\"editMode\"\n                                            :is=\"element(item.formType)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :disabled=\"item.disabled ? item.disabled : false\"\n                                            :label=\"item.label ? item.label : `[${item.model}]`\"\n                                            :rule=\"item.model\"\n                                            :meta=\"setMeta(item)\"\n                                            :identity=\"identity\"\n                                            :getSchemaByModel=\"getSchemaByModel\"\n                                            :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                                            :setSchemaByModel=\"setSchemaByModel\"\n                                            :relation_data=\"getRelation(item)\">\n                                        </component>\n                                        </span>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                    </Tabs>\n\n                    <!-- Standart column -->\n                    <Col v-for=\"col in row.children\" v-if=\"col.type == 'col'\" :key=\"col.index\" :xs=\"col.span.xs\"\n                         :sm=\"col.span.sm\" :md=\"col.span.md\" :lg=\"col.span.lg\">\n                        <Divider v-if=\"col.name\" orientation=\"left\" class=\"form-divider\">{{ col.name }}</Divider>\n                        <span v-for=\"item in col.children\" :key=\"item.index\">\n                            <component\n                                :ref=\"'sf'+item.model\"\n                                v-if=\"isShow(item.model) && item.formType == 'SubForm' && item.subtype\"\n                                :is=\"element(`subform/${item.subtype}`)\"\n                                :label=\"item.label ? item.label : `[${item.model}]`\"\n                                :model=\"{form: model, component: item.model}\"\n                                :form=\"setMeta(item, true)\"\n                                :relations=\"relations\"\n                                :formula=\"formula\"\n                                :schemaID=\"schemaID\"\n                                :editMode=\"editMode\">\n                            </component>\n                            <component\n                                v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                :do_render=\"do_render\"\n                                :editMode=\"editMode\"\n                                :is=\"element(item.formType)\"\n                                :disabled=\"item.disabled ? item.disabled : false\"\n                                :model=\"{form: model, component: item.model}\"\n                                :label=\"item.label ? item.label : `[${item.model}]`\" :rule=\"item.model\"\n                                :meta=\"setMeta(item)\"\n                                :identity=\"identity\"\n                                :getSchemaByModel=\"getSchemaByModel\"\n                                :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                                :setSchemaByModel=\"setSchemaByModel\"\n                                :relation_data=\"getRelation(item)\">\n                            </component>\n                            </span>\n                    </Col>\n                </Row>\n            </div>\n\n            <div class=\"dataform-footer\" v-if=\"!viewMode\">\n                <Button type=\"info\" :loading=\"asyncMode\" @click=\"handleSubmit(meta.model +'-'+ schemaID)\">\n                    <span v-if=\"!asyncMode\">\n                        {{ lang.save }}\n                    </span>\n                    <span v-else>\n                        {{ lang.pleaseWait }}\n                    </span>\n                </Button>\n                <Button @click=\"handleReset(meta.model +'-'+ schemaID)\" v-if=\"!editMode\"\n                        style=\"margin-left: 8px\">\n                    {{ lang.fillInTheNewOne }}\n                </Button>\n            </div>\n        </Form>\n        <Drawer\n            class=\"info-modal\"\n            v-model=\"showInfo\"\n            :title=\"infoTitle\"\n            width=\"860px\"\n        >\n            <iframe :src=\"infoUrl\" frameborder=\"0\"></iframe>\n            <div slot=\"footer\">\n                <Button type=\"primary\" size=\"large\" @click=\"showInfo = false\">\n                    {{ lang.close }}\n                </Button>\n            </div>\n        </Drawer>\n    </div>\n</template>\n\n<script>\nimport {element} from \"./elements\";\nimport {getRule, setModel, setIdentity} from \"./rule\";\nimport {doFormula, doTrigger} from \"./utils/formula_and_trigger.js\";\nimport {evalstr, isValid} from \"./utils/methods.js\";\nimport {getRelationData} from \"./utils/helpers.js\";\n\nexport default {\n    name: \"dataform\",\n    props: [\n        \"projectID\",\n        \"schemaID\",\n        \"editMode\",\n        \"onReady\",\n        \"onSuccess\",\n        \"onError\",\n        \"permissions\",\n        \"user_condition\",\n        \"formCustomData\",\n        \"do_render\",\n        \"isSubForm\",\n        \"url\",\n        \"page_id\",\n        \"public\"\n    ],\n    data() {\n        return {\n            loadConfig: true,\n            viewMode: false,\n            asyncMode: false,\n            save_btn_text: \"\",\n            title: \"\",\n            meta: {\n                model: \"\",\n                option: {}\n            },\n            model: {},\n            schema: [],\n            ui: {},\n            formula: [],\n            rule: {},\n            identity: null,\n            dataID: null,\n            relations: {},\n            showInfo: false,\n            infoUrl: \"\",\n            infoTitle: \"\",\n            showID: window.init.showID,\n        };\n    },\n\n    computed: {\n        baseUrl() {\n            return this.$props.url ? this.$props.url : '';\n        },\n        submitUrl() {\n            return this.editMode\n                ? this.page_id ? `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/update/${this.dataID}?page_id=${this.page_id}` : `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/update/${this.dataID}`\n                : this.page_id ? `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/store?page_id=${this.page_id}` : `${this.baseUrl}/lambda/krud${this.Url}/${this.$props.schemaID}/store`;\n        },\n        Url() {\n            if (this.public === true) {\n                return \"-public\"\n            } else {\n                return \"\"\n            }\n        },\n        lang() {\n            const labels = ['save', 'pleaseWait', 'fillInTheNewOne', 'close', 'pleaseEnterPasswordYouUCurrentlyUsing', 'pleaseReEnterYourPassword',\n                'passwordConfirmError', 'informationIsIncomplete', 'trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder',\n                'successfullySaved', 'errorSaving'\n            ];\n            return labels.reduce((obj, key, i) => {\n                obj[key] = this.$t('dataForm.' + labels[i]);\n                return obj;\n            }, {});\n        },\n\n    },\n\n    created() {\n        window.showInformationModal = this.showInformationModal;\n        if (this.schemaID) {\n            this.initForm();\n        }\n    },\n\n    watch: {\n        src(val, oldValue) {\n            this.initForm();\n        },\n\n        editMode(val) {\n            if (!val) {\n                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n            }\n        },\n\n        do_render(val) {\n            if (!val) {\n                this.viewMode = false;\n                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n            }\n        },\n\n        schemaID(val) {\n            if (val) {\n                this.initForm();\n            }\n        },\n\n        ui(val) {\n            if (val && this.dataID) {\n                this.editModel(this.dataID);\n            }\n        }\n    },\n\n    methods: {\n        isVisibleSection(col) {\n            let showAbleFields = this.showAbleFields(col.children);\n\n            if (col.type == 'section' && showAbleFields) {\n                if (col.visibleUserRoles && showAbleFields) {\n                    if (Array.isArray(col.visibleUserRoles) && showAbleFields) {\n                        if (col.visibleUserRoles.length >= 1 && window.init.user && showAbleFields) {\n                            if (col.visibleUserRoles.findIndex(role => role == window.init.user.role) >= 0 && showAbleFields) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                } else {\n                    return true;\n                }\n            } else {\n                return false;\n            }\n        },\n        showAbleFields(items) {\n\n            for (let item of items) {\n\n\n\n                if (item.type == \"form\" || item.type == \"Form\") {\n\n\n                    if (this.isShow(item.model)) {\n\n                        return true;\n\n                    } else {\n                        return false;\n                    }\n                } else {\n                    if(item.formType == \"SubForm\"){\n                        return true;\n                    } else {\n                        if(item.type == \"row\"){\n                            let showableFieldFound = false;\n                            for (let col of item.children) {\n                                let fieldShowAble = this.showAbleFields(col.children);\n                                if(fieldShowAble){\n                                    showableFieldFound = true;\n                                }\n                            }\n                            return showableFieldFound;\n                        } else {\n                            let showAbleChild = this.showAbleFields(item.children)\n                            if (showAbleChild) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        }\n\n                    }\n\n                }\n            }\n        },\n        element: element,\n        evalstr: evalstr,\n        isValid: isValid,\n\n        isShow(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n\n            if (index >= 0) {\n                if (this.schema[index].hidden) {\n                    return false\n                } else\n                    return true\n            }\n            return true\n        },\n        afterChange(model, val, oldValue) {\n            doTrigger(model, val, this.model, this.schema, this.$refs, this.$Notice, this.editMode);\n            if (this.do_render) {\n\n                if (val != oldValue) {\n                    doFormula(this.formula, model, this.model, this.schema, this.rule, false);\n                }\n\n            }\n        },\n        clearConfig() {\n            this.model = {};\n            this.schema = [];\n            this.ui = {};\n            this.formula = [];\n            this.rule = {};\n            this.dataID = null;\n        },\n        async initFromServerData(userCondition) {\n\n            let configUrl = this.baseUrl + `/lambda/puzzle/schema${this.Url}/form/${this.$props.schemaID}`;\n            if (this.projectID) {\n                configUrl = this.baseUrl + `/lambda/puzzle/project/${this.projectID}/form/${this.$props.schemaID}`;\n            }\n            configUrl += userCondition.length == 0 ? '' : `/${userCondition}`;\n\n            try {\n                let response = await axios.get(configUrl)\n                let data = JSON.parse(response.data.data.schema)\n                data[\"form_id\"] = response.data.data.id;\n                data[\"form_name\"] = response.data.data.name;\n                return data;\n            } catch (e) {\n                console.error(e.message);\n                return undefined;\n            }\n        },\n        async initForm() {\n            // this.clearConfig();\n            let userCondition = [];\n\n            if (this.user_condition) {\n                userCondition = JSON.stringify(this.user_condition);\n            }\n\n            let formSchema = {};\n            if (window.init.formSchemas) {\n                if (window.init.formSchemas[this.$props.schemaID]) {\n                    formSchema = window.init.formSchemas[this.$props.schemaID];\n                } else {\n                    formSchema = await this.initFromServerData(userCondition);\n                }\n            } else {\n                formSchema = await this.initFromServerData(userCondition);\n            }\n\n            this.identity = formSchema.identity;\n            this.schema = formSchema.schema;\n\n            this.ui = formSchema.ui;\n            this.save_btn_text = formSchema.save_btn_text;\n\n            if (formSchema.formula) {\n                this.formula = formSchema.formula;\n            }\n\n\n            this.title = formSchema.form_name;\n\n            this.meta = {\n                model: formSchema.model,\n                option: {\n                    labelPosition: formSchema.labelPosition,\n                    labelWidth: formSchema.labelWidth\n                }\n            };\n\n            this.getOptionsData(formSchema.schema);\n            this.setUiSchemaFormItem(formSchema.ui.schema);\n            this.setHiddenItemModel(formSchema.schema);\n\n            setModel(formSchema.model);\n            if (window.init.formSchemas) {\n                if (window.init.formSchemas[this.$props.schemaID]) {\n                    this.setUserConditionValues(true);\n                }\n            }\n            this.setCustomData();\n            this.loadConfig = false;\n            if (this.$props.onReady) {\n                this.$props.onReady(formSchema, this.schema);\n            }\n        },\n        setHiddenItemModel(schema) {\n            schema.forEach(item => {\n                    if (item.hidden || item.disabled) {\n                        if (this.isValid(item.default)) {\n                            this.setModel(item.model, item.default, item.formType);\n                        }\n\n                        if (item.hasUserId) {\n                            this.setModel(item.model, window.init.user.id * 1, item.formType);\n                        }\n                        if (this.isValid(item.param)) {\n                            if (item.param in this.$route.params) {\n                                let param = this.$route.params[item.param];\n                                if (param != 'null') {\n                                    Vue.set(this.$data.model, item.model, param);\n                                }\n                            }\n                        }\n                    }\n                    item.source_hidden = item.hidden;\n                    item.source_disabled = item.disabled;\n                }\n            )\n\n        },\n        validatePassCheck(model, rule, value, callback) {\n\n            let value_ = value ? value : '';\n            let password_value = this.model[model] ? this.model[model] : '';\n\n            if (value === '' && !this.editMode) {\n                callback(new Error(this.lang.pleaseReEnterYourPassword));\n            } else if (value_ !== password_value) {\n                callback(new Error(this.lang.passwordConfirmError));\n            } else {\n                callback();\n            }\n        },\n\n        setUiSchemaFormItem(items) {\n            items.forEach(item => {\n                if (item.type == \"form\") {\n                    this.setModel(item.model, item.default, item.formType);\n                    this.$watch(\"model.\" + item.model, {\n                        handler: (value, oldValue) => {\n                            this.afterChange(item.model, value, oldValue);\n                        },\n                        deep: true\n                    });\n\n                    if (item.rules) {\n                        this.setRule(item.model, item.rules);\n                    }\n                    if (item.formType == 'Password') {\n                        if (item.passwordOption) {\n                            if (item.passwordOption.confirm) {\n                                this.setModel('password_confirm', '', 'password');\n                                this.$data.rule['password_confirm'] = [{\n                                    validator: (rule, value, callback) => this.validatePassCheck(item.model, rule, value, callback),\n                                    trigger: 'blur'\n                                }];\n\n                            }\n                            if (item.passwordOption.edit_with_old_password) {\n                                this.setModel('current_password', '', 'password');\n                                let rules_for_current_password = [];\n                                let rules_current_password = [{\n                                    type: 'required',\n                                    msg: this.lang.pleaseEnterPasswordYouUCurrentlyUsing\n                                }, {type: 'check_current_password', msg: null}];\n                                rules_current_password.forEach(rule => {\n                                    let r = getRule(rule);\n                                    rules_for_current_password.push(r);\n                                });\n                                this.$data.rule['current_password'] = rules_for_current_password;\n                            }\n                        }\n                    }\n\n                } else if (_.isArray(item.children)) {\n                    this.setUiSchemaFormItem(item.children);\n                }\n            });\n        },\n\n        setModel(name, value, type) {\n            switch (type) {\n                case \"Switch\":\n                    let val = false;\n                    if (value == \"true\" || value == 1) {\n                        val = true;\n                    }\n                    Vue.set(this.$data.model, name, val);\n                    break;\n                case \"Checkbox\":\n                    let val_ = 0;\n                    if (value == \"true\" || value == 1) {\n                        val_ = 1;\n                    }\n                    Vue.set(this.$data.model, name, val_);\n                    break;\n                case \"CK\":\n                    let ck_value = \"\";\n                    if (value != \"\" && value !== null) {\n                        ck_value = value;\n                    }\n                    Vue.set(this.$data.model, name, ck_value);\n                    break;\n                case \"SubForm\":\n                    Vue.set(this.$data.model, name, []);\n                    break;\n                case \"Select\":\n                    if(!isNaN(value)){\n                        Vue.set(this.$data.model, name, value * 1);\n                    } else  {\n                        Vue.set(this.$data.model, name, value);\n                    }\n                    break;\n                case \"Number\":\n                    Vue.set(this.$data.model, name, value * 1);\n                    break;\n                case \"ISelect\":\n                    Vue.set(this.$data.model, name, value);\n                case \"TreeSelect\":\n                    Vue.set(this.$data.model, name, value);\n                    break;\n                default:\n                    Vue.set(this.$data.model, name, value);\n            }\n        },\n\n        setRule(name, rules) {\n            this.$data.rule[name] = [];\n            rules.forEach(item => {\n                let r = getRule(item);\n                this.$data.rule[name].push(r);\n            });\n        },\n\n        setMeta(item, subForm) {\n            let s_index = this.schema.findIndex(schema => schema.model == item.model);\n            let i = s_index >= 0 ? this.schema[s_index] : item;\n            if (!subForm) {\n                delete i[\"table\"];\n                delete i[\"extra\"];\n                i.schemaID = this.$props.schemaID;\n            }\n            return i;\n        },\n\n        getSchemaByModel(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n            if (index >= 0)\n                return this.schema[index]\n            else\n                return null\n        },\n\n        getSchemaRelationByModel(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n            if (index >= 0)\n                return getRelationData(this.schema[index], this.relations)\n            else\n                return null\n        },\n\n        setSchemaByModel(model, prop, value) {\n            if (prop == \"value\") {\n                Vue.set(this.$data.model, model, value);\n            } else if (prop == \"sub-value\") {\n                Vue.set(this.$data.model, model, value);\n                this.subFormFillData(model)\n            } else {\n                let index = this.schema.findIndex(item => item.model == model);\n                if (index >= 0)\n                    Vue.set(this.schema[index], prop, value)\n            }\n\n        },\n\n        getSubFormData(key) {\n            let subFormData = [];\n            this.model[key].forEach(item => {\n                subFormData.push(item.data);\n            });\n        },\n\n        handleSubmit(name) {\n            this.setIdentityManual();\n            if (_.isEmpty(this.$data.rule)) {\n                this.postData();\n            } else {\n                this.$refs[name].validate(valid => {\n                    if (valid) {\n                        this.postData();\n                    } else {\n                        //auh дээр хэрэглэгдэж байгаа шүү\n                        this.$Notice.error({\n                            title: this.lang.informationIsIncomplete,\n                            desc: this.lang.trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder\n                            , duration: 0\n                        });\n                        console.log(this.$data.model);\n                        console.log(\"not passed validation\");\n                    }\n                });\n            }\n        },\n\n        postData() {\n            if (this.isSubForm) {\n                this.$props.onSuccess(this.$data.model);\n            } else {\n                this.asyncMode = true;\n                axios.post(this.submitUrl, this.$data.model)\n                    .then(({data}) => {\n                        //console.log(data);\n                        if (data.status) {\n                            this.$Notice.success({\n                                title: this.lang.successfullySaved\n                            });\n\n                            if (!this.editMode) {\n                                this.$data.model[this.identity] = data[this.identity];\n                                if (this.$props.onSuccess) {\n                                    this.$props.onSuccess(data.data);\n                                }\n                                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n                            } else {\n                                if (this.$props.onSuccess) {\n                                    this.$props.onSuccess(data.data);\n                                }\n                            }\n                        } else {\n                            this.$Notice.error({\n                                title: this.lang.errorSaving\n                            });\n                            if (this.$props.onError) {\n                                this.$props.onError();\n                            }\n                        }\n                        this.asyncMode = false;\n                    })\n                    .catch(e => {\n                        let errorDesc = \"\";\n                        if (e.response.data.hasOwnProperty(\"error\")) {\n                            if (typeof e.response.data.error === 'string' || e.response.data.error instanceof String) {\n                                errorDesc = e.response.data.error;\n                            } else {\n                                if (e.response.data.error instanceof Object) {\n                                    Object.keys(e.response.data.error).forEach(error => {\n                                        let desc = error + \": \" + e.response.data.error[error].map(ed => ed + \" \")\n                                        if (errorDesc != \"\") {\n                                            errorDesc = errorDesc + \"<br/>\" + desc;\n                                        } else {\n                                            errorDesc = desc;\n                                        }\n                                    })\n                                }\n                            }\n\n                        }\n                        this.$Notice.error({\n                            title: this.lang.errorSaving,\n                            duration: 3,\n                            desc: errorDesc\n                        });\n                        this.asyncMode = false;\n                        if (this.$props.onError) {\n                            this.$props.onError();\n                        }\n                    });\n            }\n        },\n\n        handleReset(name) {\n            this.model = {};\n            this.$refs[name].resetFields();\n            setIdentity(this.identity, null);\n            this.schema.forEach(item => {\n                if (item.formType == \"SubForm\" && typeof this.$refs[`sf${item.model}`] != \"undefined\") {\n                    this.$refs[`sf${item.model}`][0].reset();\n                }\n                //if (item.default != null && !this.editMode) {\n                this.setModel(item.model, item.default, item.formType);\n                //}\n\n                item.hidden = item.source_hidden;\n                item.disabled = item.source_disabled;\n            });\n            this.setHiddenItemModel(this.schema);\n            this.setCustomData();\n\n        },\n        setIdentityManual() {\n            setIdentity(this.identity, this.model[this.identity]);\n        },\n\n        setUserConditionValues(setFromUserData) {\n\n            //SET DEFAULT VALUE Disabled item on edit mode\n            if (this.user_condition) {\n                this.user_condition.forEach(user_condition => {\n\n                    let schemaItem = this.getSchemaByModel(user_condition[\"form_field\"]);\n                    if(schemaItem){\n                        if ((schemaItem.default != \"\" && schemaItem.default !== null && schemaItem.default != 0) || setFromUserData) {\n                            if (this.model[schemaItem.model] == \"\" || this.model[schemaItem.model] === null || this.model[schemaItem.model] == 0) {\n                                if(setFromUserData){\n                                    this.model[schemaItem.model] = window.init.user[user_condition[\"user_field\"]];\n                                    schemaItem.default = window.init.user[user_condition[\"user_field\"]];\n                                } else {\n                                    this.model[schemaItem.model] = schemaItem.default;\n                                }\n\n                            }\n                        }\n                    }\n\n\n\n                });\n            }\n\n\n        },\n        setCustomData(){\n            if(this.formCustomData){\n                Object.keys(this.formCustomData).forEach(model=>{\n\n                    let index = this.schema.findIndex(item => item.model == model);\n                    if (index >= 0){\n                        Vue.set(this.schema[index], \"disabled\", true);\n                        Vue.set(this.schema[index], \"default\", this.formCustomData[model]);\n                        Vue.set(this.$data.model, model, this.formCustomData[model]);\n                    }\n\n\n\n\n\n\n                })\n\n            }\n        },\n\n        editModel(id, editData) {\n            if (editData) {\n                this.model = {...this.model, ...editData};\n                if (this.ui && this.ui.hasOwnProperty(\"schema\")) {\n                    this.setEditModel(this.ui.schema);\n                    this.setUserConditionValues(false);\n                    this.setCustomData();\n                }\n\n            } else {\n                this.dataID = id;\n                setIdentity(this.identity, id);\n                axios.post(this.page_id ? `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/edit/${id}?page_id=${this.page_id}` : `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/edit/${id}`)\n                    .then(({data}) => {\n                        if (data.status) {\n                            this.model = {...this.model, ...data.data};\n                            if (this.ui && this.ui.hasOwnProperty(\"schema\")) {\n                                this.setEditModel(this.ui.schema);\n                            }\n                            this.setUserConditionValues(false);\n                            this.setCustomData();\n                        }\n                    });\n            }\n        },\n\n        setHiddenValues(values) {\n            values.map(item => {\n                this.model[item[\"key\"]] = item[\"val\"];\n            });\n        },\n\n        subFormFillData(subModel) {\n            if (this.$refs[`sf${subModel}`]) {\n                this.$refs[`sf${subModel}`][0].fillData();\n            } else {\n                setTimeout(() => {\n                    this.subFormFillData(subModel)\n                }, 100)\n            }\n        },\n\n        setEditModel(items) {\n            items.forEach(item => {\n                if (item.type == \"form\" || item.type == \"Form\" || item.formType == \"SubForm\") {\n\n                    switch (item.formType) {\n                        case \"SubForm\":\n                            this.subFormFillData(item.model);\n                            break;\n                        case \"Switch\":\n                            if (this.model[item.model] == 1 || this.model[item.model] == \"true\") {\n                                this.model[item.model] = true;\n                            } else {\n                                this.model[item.model] = false;\n                            }\n                            break;\n                        // case \"Checkbox\":\n                        //     if (this.model[item.model] == 1 || this.model[item.model] == \"true\") {\n                        //         this.model[item.model] = true;\n                        //     } else {\n                        //         this.model[item.model] = false;\n                        //     }\n                        //     break;\n                        case \"Password\":\n                            this.model[item.model] = '';\n                            delete this.$data.rule[item.model];\n                            break;\n                        case \"PasswordGenerate\":\n                            this.model[item.model] = '';\n                            delete this.$data.rule[item.model];\n                            break;\n                        default:\n                            break;\n                    }\n                } else if (_.isArray(item.children)) {\n                    this.setEditModel(item.children);\n                }\n            });\n        },\n        cloneModel(id) {\n            axios.post(`/lambda/krud/${this.$props.schemaID}/edit/${id}`)\n                .then(({data}) => {\n                    if (data.status) {\n                        this.model = {...this.model, ...data.data};\n                        delete this.model[this.identity];\n                        console.log(this.identity);\n                        console.log(this.model[this.identity]);\n                        this.setEditModel(this.ui.schema);\n                        this.setUserConditionValues(false);\n                        this.setCustomData();\n                    }\n                });\n        },\n\n        getOptionsByRelations(baseUrl, relations) {\n\n            if (Object.keys(relations).length >= 1) {\n                axios.post(`${baseUrl}/lambda/puzzle/get_options${this.Url}`, {relations: relations})\n                    .then(({data}) => {\n                        Object.keys(data).map(relation => {\n                            let r = {...this.relations[relation], data: data[relation]}\n                            Vue.set(this.$data.relations, relation, r);\n                        });\n                    });\n            }\n        },\n        getOptionsData(schema) {\n            this.relations = this.getSelects(schema, undefined);\n            if (window.init.microserviceSettings) {\n                if (window.init.microserviceSettings.length >= 1) {\n\n                    window.init.microserviceSettings.forEach(microserviceSetting => {\n                        let relations = this.getSelects(schema, microserviceSetting.project_id);\n                        this.getOptionsByRelations(microserviceSetting.production_url, relations);\n                    })\n                } else {\n                    this.getOptionsByRelations(\"\", this.relations);\n                }\n            } else {\n                this.getOptionsByRelations(\"\", this.relations);\n            }\n\n        },\n        getSelectItem(item, selects) {\n            if (item.relation.filter == \"\" || typeof item.relation.filter === \"undefined\") {\n                selects[item.relation.table] = item.relation;\n            } else {\n\n                selects[item.model] = item.relation;\n            }\n            return selects;\n        },\n        getSelects(schema, microserviceID) {\n            let selects = {};\n\n            schema.map(item => {\n                if (item.formType == 'Radio' || item.formType == 'Select' || item.formType == 'ISelect' || item.formType == 'TreeSelect') {\n                    if (item.relation.table) {\n                        if (typeof selects[item.relation.table] === \"undefined\") {\n\n                            if (microserviceID !== undefined) {\n                                if (item.relation.microservice_id == microserviceID) {\n                                    selects = this.getSelectItem(item, selects)\n                                }\n                            } else {\n                                selects = this.getSelectItem(item, selects)\n                            }\n\n                        }\n                    }\n                }\n\n                if (item.formType == 'AdminMenu') {\n                    if (item.relation.table)\n                        selects[item.relation.table] = item.relation;\n                }\n\n                if (item.formType == 'SubForm') {\n\n                    if (item.schema) {\n                        let pre_selects = this.getSelects(item.schema, microserviceID);\n                        if (pre_selects) {\n                            selects = {...selects, ...pre_selects}\n                        }\n                    }\n\n                }\n            });\n            return selects;\n        },\n\n        /* countShowableChildren(children){\n             let visible_item_found = false;\n             children.forEach(child=>{\n                 if(child.children){\n                     child.children.forEach(sub_child=>{\n                         if(sub_child.children){\n                             sub_child.children.forEach(form_field=>{\n\n                                 if(!form_field.hidden && form_field.type == 'form'){\n                                     visible_item_found = true;\n                                     console.log(form_field)\n\n                                 }\n\n                             })\n                         }\n                     })\n                 }\n             })\n             return visible_item_found;\n         }*/\n        showInformationModal(url, title) {\n\n\n            this.infoTitle = title;\n            this.infoUrl = url;\n            this.showInfo = true;\n\n        },\n        getRelation(item) {\n            return getRelationData(item, this.relations)\n        }\n    },\n};\n</script>\n\n","import mod from \"-!../../../vue-loader/lib/index.js??vue-loader-options!./Dataform.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../vue-loader/lib/index.js??vue-loader-options!./Dataform.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dataform.vue?vue&type=template&id=68672216&\"\nimport script from \"./Dataform.vue?vue&type=script&lang=js&\"\nexport * from \"./Dataform.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","elementList","element","component","Notfount","CustomElement","type","elIndex","findIndex","el","window","init","data_form_custom_elements","find","custom_element","default","exception_var","requireCustomElement","ruleModel","identityColumn","identity","setModel","model","setIdentity","column","value","rules","msg","unique","rule","callback","axios","post","table","field","val","then","data","status","checkLambdaaccount","englishAlphabet","match","check_current_password","password","getRule","required","message","min","parseInt","validator","trigger","templateRe","fieldTimeout","doFormula","formulas","model_","schema_","rule_","subFormModelName","length","formula_index","formula","template","includes","doFormula2","use_formula","pre_formula","str","replace","key","undefined","calculated","Function","targets","target","schema_index","getSchemaIndex","prop","hasOwnProperty","Vue","set","doTrigger","refs","Message","editMode","model_index","clearTimeout","setTimeout","trigger_url","forEach","setValueProps","schema_sub","schema","field_sub","success","duration","desc","error","info","document","getElementById","innerHTML","html","callFieldTrigger","is_sub","schema_sub_index","props","formType","fillData","item","applyDrag","arr","dragResult","removedIndex","addedIndex","payload","result","itemToAdd","splice","getTableMeta","dbSchema","tableMeta","getRelationData","relations","relation","filter","idGenerator","Math","random","toString","substr","evalstr","eval","isValid","name","_h","this","$createElement","_self","_c","loadConfig","viewMode","asyncMode","save_btn_text","title","meta","option","ui","dataID","showInfo","infoUrl","infoTitle","showID","computed","baseUrl","$props","url","submitUrl","page_id","schemaID","Url","public","lang","labels","reduce","obj","i","$t","created","showInformationModal","initForm","watch","src","oldValue","handleReset","do_render","editModel","methods","isVisibleSection","col","showAbleFields","children","visibleUserRoles","Array","isArray","user","role","items","isShow","showableFieldFound","index","hidden","afterChange","$refs","$Notice","clearConfig","async","userCondition","configUrl","projectID","response","get","JSON","parse","console","user_condition","stringify","formSchema","formSchemas","initFromServerData","form_name","labelPosition","labelWidth","getOptionsData","setUiSchemaFormItem","setHiddenItemModel","setUserConditionValues","setCustomData","onReady","disabled","hasUserId","param","$route","params","$data","source_hidden","source_disabled","validatePassCheck","value_","password_value","passwordConfirmError","pleaseReEnterYourPassword","$watch","handler","deep","setRule","passwordOption","confirm","edit_with_old_password","rules_for_current_password","pleaseEnterPasswordYouUCurrentlyUsing","r","push","_","val_","ck_value","isNaN","setMeta","subForm","s_index","getSchemaByModel","getSchemaRelationByModel","setSchemaByModel","subFormFillData","getSubFormData","subFormData","handleSubmit","setIdentityManual","isEmpty","postData","validate","valid","informationIsIncomplete","trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder","log","isSubForm","onSuccess","successfullySaved","errorSaving","onError","catch","errorDesc","String","ed","resetFields","reset","setFromUserData","schemaItem","formCustomData","editData","setEditModel","setHiddenValues","values","subModel","cloneModel","getOptionsByRelations","getSelects","microserviceSettings","microserviceSetting","project_id","production_url","getSelectItem","selects","microserviceID","microservice_id","pre_selects","getRelation","_vm","class","ref","attrs","staticClass","_v","_s","_e","_l","row","sectionRenderByTab","span","xs","sm","md","lg","srow","scol","subtype","refInFor","tag","form","label","on","$event","pleaseWait","save","staticStyle","fillInTheNewOne","$$v","expression","slot","close","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat"],"sourceRoot":""}