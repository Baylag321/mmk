{"version":3,"file":"assets/lambda/js/chunks/form-field-sub-form-grid.7f8abba4a7974b5a.js","mappings":"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","sources":["webpack:///../../vue/dataform/src/elements/subform/subFormMix.js","webpack:///../../vue/dataform/src/elements/subform/Grid.vue?98aa","webpack:///../../vue/dataform/src/elements/subform/Grid.vue","webpack:///../../vue/dataform/src/elements/subform/Grid.vue?9e62","webpack:///../../vue/dataform/src/elements/subform/Grid.vue?e5c6","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue?59c4","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue?fba5","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue?5f3c"],"sourcesContent":["export default {\n\n    data() {\n        return {\n            preSource:[],\n            modal_grid_show: false,\n            user_condition:null\n        };\n    },\n    mounted() {\n        if(this.form.sourceGridUserCondition !== undefined && this.form.sourceGridUserCondition !== null && this.form.sourceGridUserCondition != \"\"){\n            this.user_condition = JSON.parse(this.form.sourceGridUserCondition)\n        }\n    },\n    methods: {\n        showAddSourceModal() {\n            this.modal_grid_show = true;\n            this.$modal.show(`grid-modal-${this.form.sourceGridID}`);\n        },\n        closeSourceModal() {\n            this.modal_grid_show = false;\n            this.$modal.hide(`grid-modal-${this.form.sourceGridID}`);\n        },\n        addFromPreSource(){\n            if(this.preSource && this.form.sourceGridTargetColumns){\n                this.preSource.forEach(preSource=>{\n                    this.createDataFromSource(preSource)\n                })\n            }\n            this.closeSourceModal();\n        },\n        createDataFromSource(row){\n\n\n            let clonedForm = _.cloneDeep(this.form);\n            let clonedFormModel = {};\n\n\n\n            clonedForm.schema.forEach(item => {\n                if (\n                    clonedForm.identity == item.model ||\n                    item.formType == null\n                ) {\n                    return;\n                }\n\n                if (\n                    clonedForm.timestamp &&\n                    (item.model == \"created_at\" || item.model == \"updated_at\")\n                ) {\n                    return;\n                }\n\n\n            });\n\n            this.form.sourceGridTargetColumns.forEach(source=>{\n                Vue.set(clonedFormModel, source.selfColumn, row[source.sourceColumn]);\n            });\n\n            let listItem = {\n                form: clonedForm,\n                model: clonedFormModel\n            };\n\n\n            if (this.model.form[this.model.component] == undefined) {\n                this.model.form[this.model.component] = [];\n            }\n            if(this.form.sourceUniqueField !== \"\" && this.form.sourceUniqueField !== undefined && this.form.sourceUniqueField !== null){\n\n               let savedIndex = this.model.form[this.model.component].findIndex(row=>row[this.form.sourceUniqueField] === clonedFormModel[this.form.sourceUniqueField]);\n\n               if(savedIndex !== -1){\n                   return\n               }\n            }\n            this.model.form[this.model.component].push(clonedFormModel);\n            this.listData.push(listItem);\n            this.rowLength = this.model.form[this.model.component].length;\n\n        },\n        onRowSelect(rows){\n            this.preSource = rows;\n        },\n        sourceGridUrl(){\n\n            if(window.init.microserviceSettings) {\n                let si = window.init.microserviceSettings.findIndex(set=>set.project_id == this.form.sourceMicroserviceID);\n\n                if(si >= 0){\n                    return  window.init.microserviceSettings[si].production_url;\n                } else {\n                    return \"\"\n                }\n            } else {\n                return \"\"\n            }\n        },\n\n    }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"subform-grid\",style:(_vm.subStyle)},[_c('h3',{staticStyle:{\"display\":\"none\"}},[_vm._v(_vm._s(_vm.rowLength))]),_vm._v(\" \"),(!_vm.form.min_height && !_vm.form.disableCreate)?_c('div',{staticClass:\"subform-header\"},[_vm._v(\"\\n        \"+_vm._s(_vm.form.name)+\"\\n        \"),_c('Button',{staticClass:\"sub-form-add-btn\",attrs:{\"shape\":\"circle\",\"type\":\"success\",\"size\":\"small\",\"icon\":\"md-add\"},on:{\"click\":_vm.add}})],1):_vm._e(),_vm._v(\" \"),_c('table',{attrs:{\"border\":\"1\"}},[_c('thead',[_c('tr',[(_vm.form.showRowNumber)?_c('th',{staticClass:\"row-number\"},[_vm._v(\"ДД\")]):_vm._e(),_vm._v(\" \"),_vm._l((_vm.form.schema),function(item){return (item.label != '' && !item.hidden)?_c('th',{key:item.index,on:{\"click\":function($event){return _vm.sort(item)}}},[_vm._v(\"\\n                \"+_vm._s(item.label)+\" \"),_c('i',{staticClass:\"ti-exchange-vertical\"})]):_vm._e()}),_vm._v(\" \"),(!_vm.form.disableDelete)?_c('th',{staticClass:\"action\"},[_vm._v(\"...\")]):_vm._e()],2)]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.listData),function(item,index){return _c('grid-form',{key:index,attrs:{\"f\":item.form,\"model\":item.model,\"editMode\":_vm.editMode,\"relations\":_vm.relations,\"schema\":_vm.form.schema,\"formula\":_vm.formula}},[(!_vm.form.disableDelete)?_c('template',{slot:\"action\"},[_c('a',{attrs:{\"href\":\"javascript:void(0);\"},on:{\"click\":function($event){return _vm.remove(index)}}},[_c('Icon',{attrs:{\"type\":\"ios-trash\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.form.showRowNumber)?_c('template',{slot:\"rowNumber\"},[_c('span',[_vm._v(_vm._s(index+1))])]):_vm._e()],2)}),1),_vm._v(\" \"),(_vm.hasEq)?_c('tfoot',[_c('tr',[_vm._l((_vm.equationData),function(item,index){return _c('td',{key:index},[(item.preStaticWord!=null && item.preStaticWord!='')?_c('span',[_vm._v(\" \"+_vm._s(item.preStaticWord)+\" \")]):_vm._e(),_vm._v(\" \"),(item.hasEquation)?_c('span',[_vm._v(_vm._s(item.data.toLocaleString()))]):_vm._e(),_vm._v(\" \"),(item.prefix!=null && item.prefix!='')?_c('span',[_vm._v(\" \"+_vm._s(item.prefix))]):_vm._e()])}),_vm._v(\" \"),_c('td')],2)]):_vm._e()]),_vm._v(\" \"),(_vm.form.min_height && !_vm.form.disableCreate)?_c('a',{staticClass:\"sub-grid-add\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.add}},[_c('Icon',{attrs:{\"type\":\"plus\"}}),_vm._v(\"\\n        \"+_vm._s(_vm.lang.add)+\"\\n    \")],1):_vm._e(),_vm._v(\" \"),_c('paper-modal',{staticClass:\"form-modal\",attrs:{\"name\":(\"grid-modal-\" + (_vm.form.sourceGridID)),\"min-width\":200,\"min-height\":100,\"pivot-y\":0.5,\"adaptive\":true,\"reset\":true,\"draggable\":true,\"resizable\":true,\"draggable\":\".form-tool\",\"width\":\"800\",\"height\":\"70%\"}},[_c('section',{staticClass:\"form-modal source-grid\"},[_c('div',{staticClass:\"form-tool \"},[_c('h4',[_vm._v(_vm._s(_vm.form.sourceGridModalTitle))]),_vm._v(\" \"),_c('div',{staticClass:\"form-tool-actions\"},[_c('a',{attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.closeSourceModal}},[_c('i',{staticClass:\"ti-close\"})])])]),_vm._v(\" \"),(_vm.modal_grid_show)?_c('div',{staticClass:\"form-body\"},[(_vm.form.sourceGridTitle && _vm.form.sourceGridDescription)?_c('div',{staticClass:\"source-grid-description\"},[_c('h3',[_vm._v(\"\\n                        \"+_vm._s(_vm.form.sourceGridTitle)+\"\\n                    \")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.form.sourceGridDescription)}})]):_vm._e(),_vm._v(\" \"),_c('datagrid',{attrs:{\"schemaID\":_vm.form.sourceGridID,\"url\":_vm.sourceGridUrl(),\"onRowSelect\":_vm.onRowSelect,\"paginate\":50,\"hasSelection\":true,\"user_condition\":_vm.user_condition,\"permissions\":{\n                      c:false,\n                      r:true,\n                      u:false,\n                      d:false,\n                  }}}),_vm._v(\" \"),_c('div',{staticClass:\"add-from-pre-source\"},[_c('Button',{staticClass:\"sub-form-add-btn\",attrs:{\"shape\":\"circle\",\"type\":\"success\",\"size\":\"small\",\"disabled\":_vm.preSource.length == 0,\"icon\":\"md-add\"},on:{\"click\":_vm.addFromPreSource}},[_vm._v(\"Сонгох\")])],1)],1):_vm._e()])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"subform-grid\" :style=\"subStyle\">\n        <h3 style=\"display: none\">{{rowLength}}</h3>\n        <div class=\"subform-header\" v-if=\"!form.min_height && !form.disableCreate\">\n            {{ form.name }}\n            <Button shape=\"circle\" type=\"success\" size=\"small\" @click=\"add\" icon=\"md-add\"\n                    class=\"sub-form-add-btn\"></Button>\n        </div>\n        <table border=\"1\" >\n            <thead>\n            <tr>\n                <th class=\"row-number\" v-if=\"form.showRowNumber\">ДД</th>\n                <th @click=\"sort(item)\" v-for=\"item in form.schema\" v-if=\"item.label != '' && !item.hidden\"\n                    :key=\"item.index\">\n                    {{ item.label }} <i class=\"ti-exchange-vertical\"/>\n                </th>\n                <th class=\"action\" v-if=\"!form.disableDelete\">...</th>\n            </tr>\n            </thead>\n            <tbody>\n            <grid-form v-for=\"(item, index) in listData\"\n                       :key=\"index\"\n                       :f=\"item.form\"\n                       :model=\"item.model\"\n                       :editMode=\"editMode\"\n                       :relations=\"relations\"\n                       :schema=\"form.schema\"\n                       :formula=\"formula\">\n                <template slot=\"action\" v-if=\"!form.disableDelete\">\n                    <a href=\"javascript:void(0);\" @click=\"remove(index)\">\n                        <Icon type=\"ios-trash\"/>\n                    </a>\n                </template>\n                <template slot=\"rowNumber\" v-if=\"form.showRowNumber\">\n                    <span>{{index+1}}</span>\n                </template>\n            </grid-form>\n            </tbody>\n            <tfoot v-if=\"hasEq\">\n            <tr>\n                <td v-for=\"(item, index) in equationData\" :key=\"index\" >\n                    <span v-if=\"item.preStaticWord!=null && item.preStaticWord!=''\"> {{item.preStaticWord}} </span>\n                    <span v-if=\"item.hasEquation\">{{ item.data.toLocaleString() }}</span>\n                    <span v-if=\"item.prefix!=null && item.prefix!=''\"> {{item.prefix}}</span>\n                </td>\n                <td>\n                </td>\n            </tr>\n            </tfoot>\n        </table>\n        <a class=\"sub-grid-add\" href=\"javascript:void(0)\" @click=\"add\" v-if=\"form.min_height && !form.disableCreate\">\n            <Icon type=\"plus\"></Icon>\n            {{lang.add}}\n        </a>\n\n        <paper-modal\n            :name=\"`grid-modal-${form.sourceGridID}`\"\n            class=\"form-modal\"\n            :min-width=\"200\"\n            :min-height=\"100\"\n            :pivot-y=\"0.5\"\n            :adaptive=\"true\"\n            :reset=\"true\"\n            :draggable=\"true\"\n            :resizable=\"true\"\n            draggable=\".form-tool\"\n            width=\"800\"\n            height=\"70%\"\n        >\n            <section class=\"form-modal source-grid\">\n                <div class=\"form-tool \">\n\n                    <h4>{{ form.sourceGridModalTitle }}</h4>\n                    <div class=\"form-tool-actions\">\n                        <a href=\"javascript:void(0)\" @click=\"closeSourceModal\">\n                            <i class=\"ti-close\"></i>\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"form-body\" v-if=\"modal_grid_show\">\n\n                  <div v-if=\"form.sourceGridTitle && form.sourceGridDescription\" class=\"source-grid-description\">\n                        <h3>\n                            {{form.sourceGridTitle}}\n                        </h3>\n                      <p v-html=\"form.sourceGridDescription\">\n\n                      </p>\n                  </div>\n                  <datagrid\n                      :schemaID=\"form.sourceGridID\"\n                      :url=\"sourceGridUrl()\"\n                      :onRowSelect=\"onRowSelect\"\n                      :paginate=\"50\"\n                      :hasSelection=\"true\"\n                      :user_condition=\"user_condition\"\n                      :permissions=\"{\n                          c:false,\n                          r:true,\n                          u:false,\n                          d:false,\n                      }\"\n                  />\n                    <div class=\"add-from-pre-source\">\n                        <Button shape=\"circle\" type=\"success\" size=\"small\" @click=\"addFromPreSource\" :disabled=\"preSource.length == 0\" icon=\"md-add\"\n                                class=\"sub-form-add-btn\">Сонгох</Button>\n                    </div>\n                </div>\n            </section>\n        </paper-modal>\n    </div>\n</template>\n\n<script>\n    import {element} from \"../index\";\n    import GridForm from \"./GridForm\";\n    import subFormMix from \"./subFormMix\";\n\n    export default {\n        props: [\"form\", \"model\", \"editMode\", \"relations\", \"formula\"],\n        mixins: [subFormMix],\n        components: {\n            \"grid-form\": GridForm\n        },\n        mounted() {\n\n            this.equationRenderer();\n        },\n        computed: {\n                lang() {\n                    const labels = ['pleaseCompleteFirstLine',\n                    ];\n                    return labels.reduce((obj, key, i) => {\n                        obj[key] = this.$t('dataForm.' + labels[i]);\n                        return obj;\n                    }, {});\n                },\n            subStyle() {\n                if (this.form.min_height) {\n                    return {\n                        minHeight: this.form.min_height + 'px',\n                        background: '#f3f4f5'\n                    }\n                } else {\n                    return undefined;\n                }\n            },\n            Lang() {\n                const labels = [ 'add',];\n                return labels.reduce((obj, key, i) => {\n                    obj[key] = this.$t('dataForm.' + labels[i]);\n                    return obj;\n                }, {});\n            },\n        },\n        watch: {\n            listData: {\n                handler: function (curr, old) {\n                    if (this.hasEq) {\n                        this.equationData.map(eq => {\n                            if (eq.hasEquation) {\n                                eq.data = -1;\n                                let count = 0;\n                                switch (eq.equation) {\n                                    case \"SUM\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            eq.data += Number(isNaN(parseInt(it.model[eq.model], 10)) ? 0 : it.model[eq.model]);\n                                        });\n                                        break;\n                                    }\n                                    case \"COUNT\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            eq.data += Number(1);\n                                        });\n                                        break;\n                                    }\n                                    case \"MIN\": {\n                                        curr.map(it => {\n                                            if (eq.data == -1) {\n                                                eq.data = it.model[eq.model];\n                                            } else {\n                                                eq.data = Math.min(eq.data, it.model[eq.model]);\n                                            }\n                                        });\n                                        break;\n                                    }\n                                    case \"MAX\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            eq.data = Math.max(eq.data, it.model[eq.model]);\n                                        });\n                                        break;\n                                    }\n                                    case \"AVG\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            count++;\n                                            eq.data += Number(it.model[eq.model]);\n                                        });\n                                        eq.data = Number(eq.data / count);\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n                    }\n                },\n                deep: true\n            }\n        },\n        data() {\n            return {\n                listData: [],\n                equationData: [],\n                currentSortDir: 'asc',\n                hasEq: false,\n\n                rowLength: 0,\n\n            };\n        },\n        methods: {\n\n            element: element,\n            checkAddable() {\n                return new Promise((resolve, reject) => {\n                    let obj = this.listData[this.listData.length - 1];\n                    if (obj) {\n                        let hasValue = false;\n                        let lastModel = obj.model;\n\n                        for (let key in lastModel) {\n                            if (\n                                typeof lastModel[key] != undefined &&\n                                lastModel[key] != null &&\n                                lastModel[key] != \"\" &&\n                                lastModel[key] != false\n                            ) {\n                                hasValue = true;\n                            }\n                        }\n                        if(hasValue){\n                            resolve(true)\n                        } else {\n                            alert(this.lang.pleaseCompleteFirstLine);\n                            reject(false);\n                        }\n                    } else {\n                        resolve(true);\n                    }\n                });\n            },\n\n            addSubForm() {\n                let clonedForm = _.cloneDeep(this.form);\n                let clonedFormModel = {};\n                clonedForm.schema.forEach(item => {\n                    if (\n                        clonedForm.identity == item.model ||\n                        item.formType == null\n                    ) {\n                        return;\n                    }\n\n                    if (\n                        clonedForm.timestamp &&\n                        (item.model == \"created_at\" || item.model == \"updated_at\")\n                    ) {\n                        return;\n                    }\n\n                    Vue.set(clonedFormModel, item.model, item.default);\n                });\n\n                let listItem = {\n                    form: clonedForm,\n                    model: clonedFormModel\n                };\n\n\n                if (this.model.form[this.model.component] == undefined) {\n                    this.model.form[this.model.component] = [];\n                }\n                this.model.form[this.model.component].push(clonedFormModel);\n\n                this.listData.push(listItem);\n                this.rowLength = this.model.form[this.model.component].length;\n            },\n\n            add() {\n\n                if(this.form.addFromGrid && this.form.sourceGridID){\n                    this.showAddSourceModal();\n                } else {\n                    this.checkAddable()\n                        .then(o => {\n                            setTimeout(() => {\n                                this.addSubForm();\n                            }, 200);\n                        })\n                        .catch(e => {\n                            console.log(e);\n                        });\n                }\n\n            },\n\n            fillData() {\n                this.listData = [];\n                setTimeout(() => {\n                  this.listData = [];\n                    this.model.form[this.model.component].forEach(item => {\n                        let listItem = {\n                            form: _.cloneDeep(this.form),\n                            model: item\n                        };\n                        this.listData.push(listItem);\n                    });\n                }, 100);\n            },\n\n            equationRenderer() {\n                this.equationData = [];\n                this.form.schema.map(item => {\n                    if (item.label != '' && !item.hidden) {\n                        if (item.hasEquation) this.hasEq = true;\n                        this.equationData.push({\n                            hasEquation: item.hasEquation,\n                            equation: item.equations,\n                            prefix: item.prefix,\n                            model: item.model,\n                            preStaticWord: item.preStaticWord,\n                            data: 0\n                        });\n                    }\n                });\n            },\n\n            remove(index) {\n                this.model.form[this.form.model].splice(index, 1);\n                this.listData.splice(index, 1);\n                this.rowLength = this.model.form[this.model.component].length;\n            },\n\n            reset() {\n                this.model.form[this.form.model] = [];\n                this.listData = [];\n            },\n\n            sort(item) {\n                let sortStatus = 1;\n                this.currentSortDir = this.currentSortDir === 'asc' ? 'desc' : 'asc';\n                this.currentSort = this.currentSortDir === 'desc' ? -1 : 1;\n                this.currentSort = item.model;\n                this.listData.sort((a, b) => {\n                    if (this.currentSortDir === 'desc') sortStatus = -1;\n                    if (a.model[this.currentSort] < b.model[this.currentSort]) return -1 * sortStatus;\n                    if (a.model[this.currentSort] > b.model[this.currentSort]) return 1 * sortStatus;\n                    return 0;\n                });\n            },\n        }\n    };\n</script>\n","import mod from \"-!../../../../../starter-apps/starter-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/starter-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Grid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../starter-apps/starter-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/starter-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Grid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Grid.vue?vue&type=template&id=19180aa8&\"\nimport script from \"./Grid.vue?vue&type=script&lang=js&\"\nexport * from \"./Grid.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../starter-apps/starter-go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[(_vm.f.showRowNumber)?_c('td',{staticClass:\"row-number\"},[_vm._t(\"rowNumber\")],2):_vm._e(),_vm._v(\" \"),_vm._l((_vm.f.schema),function(item){return (typeof item.formType !== 'undefined' && item.formType !== null && item.model && _vm.isShowAble(item.model) && item.model!=_vm.f.identity && item.model!=_vm.f.parent && item.model!='updated_at'&& item.model!='created_at')?_c('td',{key:item.index},[(_vm.model)?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"model\":{form: _vm.model, component: item.model},\"size\":\"small\",\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"meta\":_vm.setMeta(item),\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1):_vm._e()}),_vm._v(\" \"),_c('td',{staticClass:\"action\"},[_vm._t(\"action\")],2)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <tr>\n        <td class=\"row-number\" v-if=\"f.showRowNumber\">\n            <slot name=\"rowNumber\"></slot>\n        </td>\n        <td v-for=\"item in f.schema\"\n            v-if=\"typeof item.formType !== 'undefined' && item.formType !== null && item.model && isShowAble(item.model) && item.model!=f.identity && item.model!=f.parent && item.model!='updated_at'&& item.model!='created_at'\"\n            :key=\"item.index\">\n<!--            {{item.hidden}}-->\n            <!--{{item.model}}-->\n            <component :is=\"element(item.formType)\"\n                       :model=\"{form: model, component: item.model}\"\n                       v-if=\"model\"\n                       size=\"small\"\n                       :label=\"item.label ? item.label : `[${item.model}]`\"\n                       :meta=\"setMeta(item)\"\n                       :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                       :relation_data=\"getRelation(item)\">\n            </component>\n        </td>\n        <td class=\"action\" >\n            <slot name=\"action\"></slot>\n        </td>\n    </tr>\n</template>\n\n<script>\n    import {element} from \"../index\";\n    import {getRule} from \"../../rule\";\n    import {doFormula, doTrigger} from \"../../utils/formula_and_trigger.js\";\n    import {getRelationData} from \"../../utils/helpers\";\n\n    export default {\n        props: [\"f\", \"model\", \"editMode\", \"relations\", \"formula\", \"schema\"],\n        created() {\n\n            this.f.data = {};\n            this.f.schema.forEach(item => {\n\n                if (this.f.identity == item.model || item.formType == null) {\n                    return;\n                }\n                if (\n                    this.f.timestamp &&\n                    (item.model == \"created_at\" || item.model == \"updated_at\")\n                ) {\n                    return;\n                }\n                if (this.editMode) {\n                    this.setModel(item.model, this.model[item.model], item.formType);\n                } else {\n                    this.setModel(item.model, item.default, item.formType);\n                }\n\n                this.$watch(\"model.\" + item.model, {\n                    handler: (value, oldValue) => {\n                        this.afterChange(item.model, value, oldValue);\n                    },\n                    deep: true\n                });\n            });\n        },\n\n        methods: {\n            isShowAble(model) {\n                if(this.schema){\n                    let index = this.schema.findIndex(item => item.model == model);\n                    if(index >= 0){\n                        return !this.schema[index].hidden;\n                    }\n                    return false\n                }\n                return true;\n\n\n            },\n            element: element,\n            setModel(name, value, type) {\n                switch (type) {\n                    case \"Switch\":\n                        let val = false;\n                        if (value == \"true\" || value == 1) {\n                            val = true;\n                        }\n                        this.model[name] = val_;\n                        this.f.data[name] = val_;\n                        break;\n                    case \"Checkbox\":\n                        let val_ = 0;\n                        if (value == \"true\" || value == 1) {\n                            val_ = 1;\n                        }\n                        this.model[name] = val_;\n                        this.f.data[name] = val_;\n                        break;\n\n                    default:\n                        this.f.data[name] = value;\n                }\n            },\n\n            setMeta(item) {\n                delete item[\"table\"];\n                delete item[\"rules\"];\n                delete item[\"label\"];\n                delete item[\"span\"];\n                delete item[\"default\"];\n                // item.schemaId = this.$route.params.id;\n                // if (this.$route.params.form) {\n                //     console.log(this.$route.params.form)\n                //     item.schemaID = this.$route.params.form;\n                // }\n                // else {\n                //     console.log(this.$route.params.id)\n                //     item.schemaID = this.$route.params.id;\n                // }\n                return item;\n            },\n\n            getSchemaIndex(model) {\n                return this.f.schema.findIndex(item => item.model == model);\n            },\n\n            afterChange(model, val, oldValue) {\n                doTrigger(model, val, this.model, this.f.schema, this.$refs, this.$Notice);\n                doFormula(this.formula, model, this.model, this.f.schema, this.f.rule, this.f.model);\n            },\n\n            getSchemaRelationByModel(model) {\n                let index = this.f.schema.findIndex(item => item.model == model);\n                if (index >= 0)\n                    return getRelationData(this.f.schema[index], this.relations)\n                else\n                    return null\n            },\n            getRelation(item) {\n                return getRelationData(item, this.relations)\n            }\n        }\n    };\n</script>\n\n","import mod from \"-!../../../../../starter-apps/starter-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/starter-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./GridForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../starter-apps/starter-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/starter-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./GridForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GridForm.vue?vue&type=template&id=0c5a71d6&\"\nimport script from \"./GridForm.vue?vue&type=script&lang=js&\"\nexport * from \"./GridForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../starter-apps/starter-go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["data","preSource","modal_grid_show","user_condition","mounted","undefined","this","form","sourceGridUserCondition","JSON","parse","methods","showAddSourceModal","$modal","show","sourceGridID","closeSourceModal","hide","addFromPreSource","sourceGridTargetColumns","forEach","createDataFromSource","row","clonedForm","_","cloneDeep","clonedFormModel","schema","item","identity","model","formType","timestamp","source","Vue","set","selfColumn","sourceColumn","listItem","component","sourceUniqueField","savedIndex","findIndex","push","listData","rowLength","length","onRowSelect","rows","sourceGridUrl","window","init","microserviceSettings","si","project_id","sourceMicroserviceID","production_url","_vm","_h","$createElement","_c","_self","staticClass","style","staticStyle","_v","_s","min_height","disableCreate","_e","name","attrs","on","add","_l","label","hidden","key","index","$event","sort","disableDelete","editMode","relations","formula","slot","remove","preStaticWord","toLocaleString","prefix","lang","sourceGridModalTitle","sourceGridTitle","sourceGridDescription","domProps","c","r","u","d","f","_t","isShowAble","parent","element","tag","setMeta","getSchemaRelationByModel","getRelation"],"sourceRoot":""}