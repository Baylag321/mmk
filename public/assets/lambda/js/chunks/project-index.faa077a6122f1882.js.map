{"version":3,"file":"assets/lambda/js/chunks/project-index.faa077a6122f1882.js","mappings":"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","sources":["webpack:///../../lambda-builder/src/pages/microservice/Settings.vue","webpack:///../../lambda-builder/src/pages/microservice/Settings.vue?7610","webpack:///../../lambda-builder/src/pages/microservice/Settings.vue?0d5c","webpack:///../../lambda-builder/src/pages/microservice/Settings.vue?f673"],"sourcesContent":["<template>\n    <section class=\"project-page\">\n        <h3 class=\"project-title\"><img src=\"/assets/lambda/images/favicon.png\" alt=\"\">{{ $project.name }}</h3>\n        <div class=\"project-status\">\n            <div class=\"lambda-config\">\n\n                <h3>Microservice түлхүүр</h3>\n                <code>\n                    {{$project.project_key}}\n                    <button @click=\"copyToClipboard(`${$project.project_key}`)\" type=\"button\" >  <i class=\"ti-layers\"></i></button>\n                </code>\n\n                <br>\n                <div class=\"select-platform\">\n                    <div>\n                        <h3><a href=\"https://github.com/lambda-platform/cli\" target=\"_blank\">Lambda CLI</a> {{lang.create_using}} </h3>\n                        <code v-if=\"microservoce.project_type === 'Client'\">\n                            lambda-micro-client -key={{$project.project_key}} create {{ $project.name }}\n                            <button @click=\"copyToClipboard(`lambda-micro-client -key=${$project.project_key} create ${$project.name}`)\" type=\"button\" >  <i class=\"ti-layers\"></i></button>\n                        </code>\n                        <code v-else>\n                            lambda-micro -key={{$project.project_key}} create {{ $project.name }}\n                            <button @click=\"copyToClipboard(`lambda-micro -key=${$project.project_key} create ${$project.name}`)\" type=\"button\" >  <i class=\"ti-layers\"></i></button>\n                        </code>\n                        <br>\n\n                        <h3>{{ lang.download_create_file }}</h3>\n                        <a href=\"https://lambda.cloud.mn/starter.zip\" target=\"_blank\">\n                            <i class=\"ti-cloud-down\"></i>\n                            <span>{{ lang.lambda_example_app }}</span>\n                        </a>\n\n                        <a :href=\"`/console/config/${$project.project_key}`\" target=\"_blank\">\n                            <i class=\"ti-cloud-down\"></i>\n                            <span>{{ lang.lambda_settings }}</span>\n\n\n                        </a>\n                    </div>\n\n                </div>\n\n            </div>\n\n            <Steps :current=\"$project.db_schema_path == `schemas/${$project.project_key}.json` ? 3 : 1\" :status=\"$project.db_schema_path == `schemas/${$project.project_key}.json` ? 'finish' : 'error'\">\n                <Step :title=\"lang.create\" :content=\"`Cloud  ${lang.type}: ${$project.plan}`\"></Step>\n                <Step :title=\"lang.database\" :content=\"lang.database_connect\"></Step>\n\n                <Step :title=\"lang.ready\" :content=\"lang._success\"></Step>\n            </Steps>\n        </div>\n\n        <dataform ref=\"form\" :schemaID=\"46\"\n                  :do_render=\"true\"\n                  :editMode=\"true\"\n                  :onReady=\"onReady\"\n        ></dataform>\n    </section>\n</template>\n\n<script>\n\n\nexport default {\n    name: \"Settings\",\n    methods: {\n        onReady() {\n            this.$refs.form.editModel(this.$projectSettings.id);\n        },\n        copyToClipboard(text) {\n            var node = document.createElement('textarea');\n            var selection = document.getSelection();\n\n            node.textContent = text;\n            document.body.appendChild(node);\n\n            selection.removeAllRanges();\n            node.select();\n            document.execCommand('copy');\n\n            selection.removeAllRanges();\n            document.body.removeChild(node);\n        },\n\n    },\n    data() {\n        return {\n            microservoce:window.init.project\n        };\n    },\n    computed: {\n        lang() {\n            const labels = [\n                'project_key',\n                'server_languege_framework',\n                'create_using',\n                'download_create_file',\n                'lambda_example_app',\n                'lambda_cli',\n                'lambda',\n                'l_key',\n                'create',\n                'lambda_settings',\n                'laravel_framework',\n                'go_framework',\n                'database',\n                'database_connect',\n                '_success',\n                'type',\n                'ready',\n                'lambda_platform',\n                'composer',\n            ];\n            return labels.reduce((obj, key, i) => {\n                obj[key] = this.$t('project.' + labels[i]);\n                return obj;\n            }, {});\n        },\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../starter-apps/go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../starter-apps/go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../starter-apps/go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../starter-apps/go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=7407cd30&scoped=true&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../starter-apps/go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7407cd30\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"project-page\"},[_c('h3',{staticClass:\"project-title\"},[_c('img',{attrs:{\"src\":\"/assets/lambda/images/favicon.png\",\"alt\":\"\"}}),_vm._v(_vm._s(_vm.$project.name))]),_vm._v(\" \"),_c('div',{staticClass:\"project-status\"},[_c('div',{staticClass:\"lambda-config\"},[_c('h3',[_vm._v(\"Microservice түлхүүр\")]),_vm._v(\" \"),_c('code',[_vm._v(\"\\n                \"+_vm._s(_vm.$project.project_key)+\"\\n                \"),_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.copyToClipboard((\"\" + (_vm.$project.project_key)))}}},[_c('i',{staticClass:\"ti-layers\"})])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"select-platform\"},[_c('div',[_c('h3',[_c('a',{attrs:{\"href\":\"https://github.com/lambda-platform/cli\",\"target\":\"_blank\"}},[_vm._v(\"Lambda CLI\")]),_vm._v(\" \"+_vm._s(_vm.lang.create_using)+\" \")]),_vm._v(\" \"),(_vm.microservoce.project_type === 'Client')?_c('code',[_vm._v(\"\\n                        lambda-micro-client -key=\"+_vm._s(_vm.$project.project_key)+\" create \"+_vm._s(_vm.$project.name)+\"\\n                        \"),_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.copyToClipboard((\"lambda-micro-client -key=\" + (_vm.$project.project_key) + \" create \" + (_vm.$project.name)))}}},[_c('i',{staticClass:\"ti-layers\"})])]):_c('code',[_vm._v(\"\\n                        lambda-micro -key=\"+_vm._s(_vm.$project.project_key)+\" create \"+_vm._s(_vm.$project.name)+\"\\n                        \"),_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.copyToClipboard((\"lambda-micro -key=\" + (_vm.$project.project_key) + \" create \" + (_vm.$project.name)))}}},[_c('i',{staticClass:\"ti-layers\"})])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('h3',[_vm._v(_vm._s(_vm.lang.download_create_file))]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://lambda.cloud.mn/starter.zip\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"ti-cloud-down\"}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.lang.lambda_example_app))])]),_vm._v(\" \"),_c('a',{attrs:{\"href\":(\"/console/config/\" + (_vm.$project.project_key)),\"target\":\"_blank\"}},[_c('i',{staticClass:\"ti-cloud-down\"}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.lang.lambda_settings))])])])])]),_vm._v(\" \"),_c('Steps',{attrs:{\"current\":_vm.$project.db_schema_path == (\"schemas/\" + (_vm.$project.project_key) + \".json\") ? 3 : 1,\"status\":_vm.$project.db_schema_path == (\"schemas/\" + (_vm.$project.project_key) + \".json\") ? 'finish' : 'error'}},[_c('Step',{attrs:{\"title\":_vm.lang.create,\"content\":(\"Cloud  \" + (_vm.lang.type) + \": \" + (_vm.$project.plan))}}),_vm._v(\" \"),_c('Step',{attrs:{\"title\":_vm.lang.database,\"content\":_vm.lang.database_connect}}),_vm._v(\" \"),_c('Step',{attrs:{\"title\":_vm.lang.ready,\"content\":_vm.lang._success}})],1)],1),_vm._v(\" \"),_c('dataform',{ref:\"form\",attrs:{\"schemaID\":46,\"do_render\":true,\"editMode\":true,\"onReady\":_vm.onReady}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"names":["_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","$project","name","project_key","on","$event","copyToClipboard","lang","create_using","microservoce","project_type","download_create_file","lambda_example_app","lambda_settings","db_schema_path","create","database","database_connect","ready","_success","ref","onReady"],"sourceRoot":""}