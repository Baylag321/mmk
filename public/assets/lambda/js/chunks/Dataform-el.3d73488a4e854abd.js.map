{"version":3,"file":"assets/lambda/js/chunks/Dataform-el.3d73488a4e854abd.js","mappings":"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","sources":["webpack:////Users/munkh-altai/Workspace/LAMBDA/starter-apps/go-fiber/assets/dataform_custom|sync|/^\\.\\/.*\\.vue$/","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/index.js","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/rule.js","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/utils/formula_and_trigger.js","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/utils/helpers.js","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/utils/methods.js","webpack:///assets/dataform_custom/example.vue","webpack:///./assets/dataform_custom/example.vue?adb4","webpack:///./assets/dataform_custom/example.vue","webpack:///./assets/dataform_custom/example.vue?8df9","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/Dataform.vue?97db","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/utils/formula.js","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/DataformMixin.js","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/Dataform.vue?fbcd","webpack:///node_modules/@lambda-platform/lambda-builder/src/modules/dataform/Dataform.vue","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/Dataform.vue","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"sourcesContent":["var map = {\n\t\"./example.vue\": 90010\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8883;","export const elementList = [\n    {\n        element: \"Text\",\n        component:()=> import(/* webpackChunkName: \"form-field-text\" */'./Text.vue'),\n    },\n    {\n        element: \"Select\",\n        component:()=> import(/* webpackChunkName: \"form-field-Select\" */'./Select.vue'),\n    },\n    {\n        element: \"TreeSelect\",\n        component:()=> import(/* webpackChunkName: \"form-field-TreeSelect\" */'./TreeSelect.vue'),\n    },\n    {\n        element: \"Number\",\n        component:()=> import(/* webpackChunkName: \"form-field-Number\" */'./Number.vue'),\n    },\n    {\n        element: \"Textarea\",\n        component:()=> import(/* webpackChunkName: \"form-field-Textarea\" */'./Textarea.vue'),\n    },\n    {\n        element: \"Date\",\n        component:()=> import(/* webpackChunkName: \"form-field-Date\" */'./Date.vue'),\n    },\n    {\n        element: \"DateTime\",\n        component:()=> import(/* webpackChunkName: \"form-field-DateTime\" */'./DateTime.vue'),\n    },\n    {\n        element: \"Divider\",\n        component:()=> import(/* webpackChunkName: \"form-field-Divider\" */'./Divider.vue'),\n    },\n    {\n        element: \"Image\",\n        component:()=> import(/* webpackChunkName: \"form-field-Image\" */'./Image.vue'),\n    },\n    {\n        element: \"HTML\",\n        component:()=> import(/* webpackChunkName: \"form-field-HTML\" */'./HTML.vue'),\n    },\n    {\n        element: \"ImageSubform\",\n        component:()=> import(/* webpackChunkName: \"form-field-ImageSubform\" */'./ImageSubform.vue'),\n    },\n    {\n        element: \"ImageDrag\",\n        component:()=> import(/* webpackChunkName: \"form-field-ImageDrag\" */'./ImageDrag.vue'),\n    },\n\n    {\n        element: \"Checkbox\",\n        component:()=> import(/* webpackChunkName: \"form-field-Checkbox\" */'./Checkbox.vue'),\n    },\n    {\n        element: \"CK\",\n        component:()=> import(/* webpackChunkName: \"form-field-CK\" */'./CK.vue'),\n    },\n    {\n        element: \"ColorPicker\",\n        component:()=> import(/* webpackChunkName: \"form-field-ColorPicker\" */'./ColorPicker.vue'),\n    },\n    // {\n    //     element: \"DateRange\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-DateRange\" */'./DateRange.vue'),\n    // },\n    {\n        element: \"Email\",\n        component:()=> import(/* webpackChunkName: \"form-field-Email\" */'./Email.vue'),\n    },\n    {\n        element: \"File\",\n        component:()=> import(/* webpackChunkName: \"form-field-File\" */'./File.vue'),\n    },\n    {\n        element: \"Download\",\n        component:()=> import(/* webpackChunkName: \"form-field-Download\" */'./Download.vue'),\n    },\n    {\n        element: \"Geographic\",\n        component:()=> import(/* webpackChunkName: \"form-field-Geographic\" */'./Geographic.vue'),\n    },\n    {\n        element: \"Hidden\",\n        component:()=> import(/* webpackChunkName: \"form-field-Hidden\" */'./Hidden.vue'),\n    },\n    {\n        element: \"Map\",\n        component:()=> import(/* webpackChunkName: \"form-field-Map\" */'./Map.vue'),\n    },\n    {\n        element: \"Money\",\n        component:()=> import(/* webpackChunkName: \"form-field-Money\" */'./Money.vue'),\n    },\n    {\n        element: \"MoneyWithoutCurrency\",\n        component:()=> import(/* webpackChunkName: \"form-field-Money\" */'./MoneyWithoutCurrency.vue'),\n    },\n    {\n        element: \"NumberGenerate\",\n        component:()=> import(/* webpackChunkName: \"form-field-NumberGenerate\" */'./NumberGenerate.vue'),\n    },\n    {\n        element: \"Password\",\n        component:()=> import(/* webpackChunkName: \"form-field-Password\" */'./Password.vue'),\n    },\n    {\n        element: \"PasswordGenerate\",\n        component:()=> import(/* webpackChunkName: \"form-field-PasswordGenerate\" */'./PasswordGenerate.vue'),\n    },\n    {\n        element: \"Radio\",\n        component:()=> import(/* webpackChunkName: \"form-field-Radio\" */'./Radio.vue'),\n    },\n    {\n        element: \"FooterButton\",\n        component:()=> import(/* webpackChunkName: \"form-field-FooterButton\" */'./FooterButton.vue'),\n    },\n    {\n        element: \"RadioWithTextInput\",\n        component:()=> import(/* webpackChunkName: \"form-field-RadioWithTextInput\" */'./RadioWithTextInput.vue'),\n    },\n    {\n        element: \"Register\",\n        component:()=> import(/* webpackChunkName: \"form-field-Register\" */'./Register.vue'),\n    },\n    {\n        element: \"ISelect\",\n        component:()=> import(/* webpackChunkName: \"form-field-ISelect\" */'./ISelect.vue'),\n    },\n    {\n        element: \"Search\",\n        component:()=> import(/* webpackChunkName: \"form-field-Search\" */'./Search.vue'),\n    },\n    // {\n    //     element: \"Slider\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-Slider\" */'./Slider.vue'),\n    // },\n    {\n        element: \"Switch\",\n        component:()=> import(/* webpackChunkName: \"form-field-Switch\" */'./Switch.vue'),\n    },\n    {\n        element: \"Time\",\n        component:()=> import(/* webpackChunkName: \"form-field-Time\" */'./Time.vue'),\n    },\n    // {\n    //     element: \"UniqueGeneration\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-UniqueGeneration\" */'./UniqueGeneration.vue'),\n    // },\n    {\n        element: \"AdminMenu\",\n        component:()=> import(/* webpackChunkName: \"form-field-AdminMenu\" */'./AdminMenu.vue'),\n    },\n    {\n        element: \"GridSelector\",\n        component:()=> import(/* webpackChunkName: \"form-field-GridSelector\" */'./GridSelector.vue'),\n    },\n    {\n        element: \"subform/Grid\",\n        component:()=> import(/* webpackChunkName: \"form-field-sub-form-grid\" */'./subform/Grid.vue'),\n    },\n    {\n        element: \"subform/Form\",\n        component:()=> import(/* webpackChunkName: \"form-field-sub-form\" */'./subform/Form.vue'),\n    },\n];\n\nconst Notfount = ()=> import(/* webpackChunkName: \"form-field-not-fount\" */'./NotFound.vue');\nconst CustomElement = ()=> import(/* webpackChunkName: \"form-field-CustomElement\" */'./CustomElement.vue');\n\nconst requireCustomElement = (type)=>{\n\n    if(window.init.data_form_custom_elements){\n        let custom = window.init.data_form_custom_elements.find(custom_element=>custom_element.element == type);\n        if (custom) {\n\n            try {\n                return require(`dataform_custom/${type}.vue`).default;\n            }\n            catch (exception_var) {\n                return CustomElement;\n            }\n        }else {\n            // throw `${type} element not fount`\n            return Notfount;\n        }\n\n    } else {\n        return Notfount;\n    }\n}\n\nexport const element = (type) => {\n\n    if (type !== null && typeof type !== \"undefined\") {\n        const elIndex = elementList.findIndex(el=>el.element == type);\n\n        if(elIndex >= 0){\n            return elementList[elIndex].component;\n        }\n    }\n\n    return requireCustomElement(type);\n}\n","let ruleModel = null;\nlet identityColumn = null;\nlet identity = null;\n\nconst isValid = (val) => {\n    if (typeof val !== undefined && val != null && val != \"\") {\n        return true;\n    }\n    return false;\n}\n\nexport const setModel = (model) => {\n    ruleModel = model;\n}\n\nexport const setIdentity = (column, value) => {\n    identity = value;\n    identityColumn = column;\n}\n\nexport const rules = [{\n    type: 'required',\n    msg: 'Талбарыг бөглөнө үү!'\n},\n    {\n        type: 'email',\n        msg: 'Имэйл хаягаа зөв оруулна уу!'\n    },\n    {\n        type: 'number',\n        msg: 'Тоон утга оруулна уу!'\n    },\n    {\n        type: 'mongolianMobileNumber',\n        msg: '8 оронтой утасны дугаар оруулна уу!'\n    },\n    {\n        type: 'englishAlphabet',\n        msg: 'Зөвхөн латин үсэг оруулна уу!'\n    },\n    {\n        type: 'mongolianCyrillic',\n        msg: 'Зөвхөн кирилл үсэг оруулна уу!'\n    },\n    {\n        type: 'unique',\n        msg: 'Давхацсан утга оруулсан байна!'\n    },\n    {\n        type: 'lambda-account',\n        msg: 'Давхацсан утга оруулсан байна!'\n    }\n];\n\nconst unique = (rule, value, callback, baseUrl) => {\n    axios.post(`${baseUrl}/lambda/krud/unique`, {\n        table: ruleModel,\n        identityColumn: identityColumn,\n        identity: identity,\n        field: rule.field,\n        val: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n            callback(new Error(o.data.msg));\n        }\n    })\n};\nconst checkLambdaaccount = (rule, value, callback, baseUrl) => {\n    axios.post(`${baseUrl}/lambda/check`, {\n        value: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n            callback(new Error(`'${value} Давхацсан утга оруулсан байна!'`));\n        }\n    })\n};\nconst englishAlphabet = (rule, value, callback) => {\n    var letterNumber = /^[a-zA-Z!@#\\$%\\^\\&*\\s*)\\(+=._-]+$/;\n    if(value.match(letterNumber)){\n        callback();\n    } else {\n        callback(new Error(\"Зөвхөн латин үсэг оруулна уу\"));\n    }\n};\nconst mongolianCyrillic = (rule, value, callback) => {\n    // var letterNumber = /^[\\u0400-\\u04FF\\s*]+$/;\n    var letterNumber = /^[а-яөүёА-ЯӨҮЁ0-9!@#\\$%\\^\\&*\\s*)\\(+=._-]+$/;\n    if(value.match(letterNumber)){\n        callback();\n    } else {\n        callback(new Error(\"Зөвхөн кирилл үсэг оруулна уу!\"));\n    }\n};\nconst mongolianMobileNumber = (rule, value, callback) => {\n\n    var letterNumber = /^[0-9]{8}$/;\n    if(value.toString().match(letterNumber)){\n\n        callback();\n    } else {\n\n        callback(new Error('8 оронтой утасны дугаар оруулна уу!'));\n    }\n};\n\nconst check_current_password = (rule, value, callback, baseUrl) => {\n    axios.post(`${baseUrl}/lambda/krud/check_current_password`, {\n        password: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n\n            callback(new Error(o.data.msg));\n        }\n    })\n};\n\n\nexport const getRule = (rule, baseUrl) => {\n    if(!baseUrl){\n        baseUrl = \"\"\n    }\n    switch (rule.type) {\n        case 'required':\n            return {\n                required: true,\n                message: rule.msg\n            }\n        case 'array':\n            return {\n                type: \"array\",\n                required: rule.required,\n                message: rule.message\n            }\n        case 'min':\n            return {\n                type: 'string',\n                min: parseInt(rule.val, 10),\n                message: rule.msg\n            }\n        case 'max':\n            return {\n                type: 'string',\n                max: parseInt(rule.val, 10),\n                message: rule.msg\n            }\n        case 'email':\n            return {\n                type: 'email',\n                trigger: 'blur',\n                message: rule.msg\n            }\n        case 'number':\n            return {\n                type: 'number',\n                message: rule.msg\n            }\n        case 'mongolianMobileNumber':\n            return {\n                validator: mongolianMobileNumber,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'unique':\n            return {\n                validator: (rule, value, callback)=> unique(rule, value, callback, baseUrl),\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'lambda-account':\n            return {\n                validator: (rule, value, callback)=> checkLambdaaccount(rule, value, callback, baseUrl),\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'englishAlphabet':\n            return {\n                validator: englishAlphabet,\n                trigger: 'blur',\n                message: rule.msg\n            }\n        case 'mongolianCyrillic':\n            return {\n                validator: mongolianCyrillic,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'check_current_password':\n            return {\n                validator: (rule, value, callback)=> check_current_password(rule, value, callback, baseUrl),\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        default:\n            return null;\n\n    }\n}\n","var templateRe = /\\{ *([\\w_-]+) *\\}/g;\nvar fieldTimeout = null;\n\nexport function dataFromTemplate(str, data) {\n    return str.replace(templateRe, function (str, key) {\n        let value = data[key];\n        if (value === undefined) {\n            return '';\n        } else if (typeof value === 'function') {\n            value = value(data);\n        }\n        return value;\n    });\n}\n\nexport function evil(fn) {\n    return new Function('return ' + fn)();\n}\n\nexport function doFormula(formulas, model, model_, schema_, rule_, subFormModelName) {\n\n    //formula\n    if (formulas.length >= 1) {\n        let formula_index = formulas.findIndex(formula => formula.model == model)\n        if (formula_index <= -1) {\n            formulas.map(formula => {\n                if(formula.template.includes(model)){\n                    doFormula2(formula, model, model_, schema_, rule_, subFormModelName)\n                }\n            });\n        } else {\n            doFormula2(formulas[formula_index], model, model_, schema_, rule_, subFormModelName)\n        }\n    }\n}\nfunction doFormula2(formula, model, model_, schema_, rule_, subFormModelName) {\n\n    let use_formula = false;\n    if (formula['form']) {\n        if (formula['form'] == 'main')\n            use_formula = true;\n        else if (subFormModelName) {\n            if (formula['form'] == subFormModelName)\n                use_formula = true\n\n        }\n    } else\n        use_formula = true;\n\n\n    if (use_formula) {\n\n        let pre_formula = dataFromTemplate(formula.template, model_);\n\n\n        if (pre_formula) {\n            let calculated = evil(pre_formula);\n\n            formula.targets.map(target => {\n                let schema_index = getSchemaIndex(schema_, target.field);\n                if (schema_index >= 0) {\n                    if (target.prop == 'value') {\n                        model_[target.field] = calculated;\n                    } else {\n                        if (target.prop == 'hidden') {\n                            if (rule_) {\n                                if (rule_[target.field]) {\n                                    if (rule_[target.field].length > 0 && rule_[target.field][0].hasOwnProperty(\"required\"))\n                                        rule_[target.field][0].required = calculated ? false : true;\n                                }\n                            }\n\n                        }\n                        // schema_[schema_index][target.prop] = calculated;\n                        Vue.set(schema_[schema_index], target.prop, calculated)\n                    }\n                }\n            })\n        }\n    }\n}\n\nexport function doTrigger(model, val, model_, schema_, refs, Message, editMode) {\n\n    if (val) {\n        let model_index = getSchemaIndex(schema_, model);\n        if (model_index >= 0) {\n            if (schema_[model_index]['trigger']) {\n                if (fieldTimeout) {\n                    clearTimeout(fieldTimeout);\n                }\n                 fieldTimeout = setTimeout(() => {\n                    callFieldTrigger(schema_[model_index]['trigger'], model_, schema_, refs, Message, editMode);\n                 }, schema_[model_index]['triggerTimeout'] != undefined && schema_[model_index]['triggerTimeout'] !== null && schema_[model_index]['triggerTimeout'] != ''  ? schema_[model_index]['triggerTimeout'] : 0);\n            }\n        }\n    }\n}\n\nfunction setValueProps(field, model_, schema_, refs, is_sub) {\n\n    if (is_sub) {\n        let schema_sub_index = getSchemaIndex(schema_, is_sub);\n        if (schema_sub_index >= 0) {\n            let schema_index = getSchemaIndex(schema_[schema_sub_index].schema, field.field);\n            if (schema_index >= 0) {\n                Object.keys(field.props).forEach(prop => {\n                    schema_[schema_sub_index].schema[schema_index][prop] = field.props[prop];\n                });\n            }\n        }\n    } else {\n\n        let schema_index = getSchemaIndex(schema_, field.field);\n        if (schema_index >= 0) {\n            if ('value' in field) {\n                //model_[field.field] = field.value;\n                Vue.set(model_, field.field, field.value);\n                let current_schema = schema_[schema_index];\n                if (current_schema.formType == \"SubForm\") {\n                    refs[`sf${field.field}`][0].fillData();\n                }\n            }\n            if (field.props) {\n                Object.keys(field.props).forEach(prop => {\n                    // schema_[schema_index][prop] = field.props[prop];\n                    Vue.set(schema_[schema_index], prop, field.props[prop]);\n                });\n            }\n        }\n    }\n\n\n}\n\nfunction callFieldTrigger(trigger_url, model_, schema_, refs, Message, editMode) {\n    // console.log('axios sent', trigger_url);\n\n    axios.post(trigger_url, {model: {...model_}, editMode: editMode})\n        .then(({data}) => {\n            if (data['schema']) {\n                data['schema'].forEach(field => {\n                    setValueProps(field, model_, schema_, refs)\n                })\n            }\n            if (data['schema_sub']) {\n\n                data['schema_sub'].forEach(schema_sub => {\n                    schema_sub.schema.forEach(field_sub => {\n                        setValueProps(field_sub, model_, schema_, refs, schema_sub.model)\n                    })\n\n                })\n            }\n            if (data['message']) {\n                if (data['message']['type'] == 'success') {\n                    Message.success({\n                        duration: 3,\n                        desc:data['message']['message']\n                    });\n                } else {\n                    Message.error({\n                        duration: 3,\n                        desc:data['message']['message']\n                    });\n                }\n            }\n            if (data['info']) {\n                data['info'].forEach(info => {\n                    document.getElementById(info.target).innerHTML = info.html;\n                })\n            }\n        })\n}\n\nfunction getSchemaIndex(schema_, model) {\n    return schema_.findIndex(item => item.model == model);\n}\n","export const applyDrag = (arr, dragResult) => {\n    const { removedIndex, addedIndex, payload } = dragResult\n    if (removedIndex === null && addedIndex === null) return arr\n\n    const result = [...arr]\n    let itemToAdd = payload\n\n    if (removedIndex !== null) {\n        itemToAdd = result.splice(removedIndex, 1)[0]\n    }\n\n    if (addedIndex !== null) {\n        result.splice(addedIndex, 0, itemToAdd)\n    }\n\n    return result\n}\nexport const generateItems = (count, creator) => {\n    const result = []\n    for (let i = 0; i < count; i++) {\n        result.push(creator(i))\n    }\n    return result\n}\nexport const getTableMeta = (table)=>{\n    if(table) {\n        if (window.init.dbSchema.tableMeta[table]) {\n            return window.init.dbSchema.tableMeta[table]\n        }\n    }\n    return []\n    // let res = await axios.get(`/lambda/puzzle/table-schema/${table}`);\n    // if(!window.init.dbSchema.tableMeta) {\n    //     window.init.dbSchema.tableMeta = {}\n    // }\n    // window.init.dbSchema.tableMeta[table] = res.data\n    //\n    // return res.data\n}\nexport const getRelationData = (item, relations) =>{\n    if (item.relation.filter == '' || typeof item.relation.filter === \"undefined\") {\n        if (relations[item.relation.table])\n            return relations[item.relation.table]['data']\n        else if (item.relation.filterWithUser){\n            if (relations[item.model])\n                return relations[item.model]['data']\n            else\n                return []\n        } else\n            return []\n    } else {\n        if (relations[item.model])\n            return relations[item.model]['data']\n        else\n            return []\n    }\n}\n","export const idGenerator = (type) => {\n    let randomId = Math.random()\n        .toString(36)\n        .substr(3, 9);\n    return `${type}-${randomId}`;\n}\n\n\nexport const evalstr = (str) => {\n    if (typeof str == \"undefined\" || str == null || str == \"\") {\n        return true;\n    }\n    return eval(str.toString());\n}\n\nexport const isValid = (val) => {\n    if (typeof val == \"undefined\" || val == null || val == '') {\n        return false;\n    }\n    return true;\n}\n","<template>\n    <FormItem :prop=rule :label=label>\n        <Input type=\"text\" v-model=\"model.form[model.component]\"\n               :placeholder=\"meta && meta.placeHolder !== null ? meta.placeHolder : label\"\n               :disabled=\"meta && meta.disabled ? meta.disabled : false\"\n        />\n    </FormItem>\n</template>\n\n<script>\nexport default {\n    props: [\"model\", \"rule\", \"label\", \"meta\"],\n\n};\n</script>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./example.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./example.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./example.vue?vue&type=template&id=317c2096&\"\nimport script from \"./example.vue?vue&type=script&lang=js&\"\nexport * from \"./example.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('FormItem',{attrs:{\"prop\":_vm.rule,\"label\":_vm.label}},[_c('Input',{attrs:{\"type\":\"text\",\"placeholder\":_vm.meta && _vm.meta.placeHolder !== null ? _vm.meta.placeHolder : _vm.label,\"disabled\":_vm.meta && _vm.meta.disabled ? _vm.meta.disabled : false},model:{value:(_vm.model.form[_vm.model.component]),callback:function ($$v) {_vm.$set(_vm.model.form, _vm.model.component, $$v)},expression:\"model.form[model.component]\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.viewMode ? 'dataform view-mode' : 'dataform'},[_c('Form',{ref:_vm.meta.model +'-'+ _vm.schemaID,attrs:{\"model\":_vm.model,\"rules\":_vm.rule,\"label-position\":_vm.meta.option.labelPosition,\"label-width\":_vm.meta.option.labelPosition == 'top' ? undefined : _vm.meta.option.labelWidth}},[_c('div',{staticClass:\"dataform-header\"},[_c('h3',[_vm._v(_vm._s(_vm.title ? _vm.title : _vm.formTitle)),(_vm.showID)?_c('b',[(_vm.model[_vm.identity])?_c('span',[_vm._v(\": \"+_vm._s(_vm.model[_vm.identity]))]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),(!_vm.loadConfig)?_c('div',{staticClass:\"dataform-body\"},[(_vm.loadConfig)?_c('Spin',{attrs:{\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.ui.schema),function(row){return _c('Row',{key:row.index},[_vm._l((row.children),function(col){return (_vm.isVisibleSection(col) && !row.sectionRenderByTab)?_c('Col',{key:col.index,attrs:{\"xs\":col.span.xs,\"sm\":col.span.sm,\"md\":col.span.md,\"lg\":col.span.lg}},[_c('div',{class:col.name != '' ? 'fieldset' : ''},[(col.name != '')?_c('legend',[_vm._v(_vm._s(col.name))]):_vm._e(),_vm._v(\" \"),_vm._l((col.children),function(srow){return _c('Row',{key:srow.index},_vm._l((srow.children),function(scol){return _c('Col',{key:scol.index,attrs:{\"id\":scol.id,\"xs\":24,\"sm\":24,\"md\":scol.span.md,\"lg\":scol.span.lg}},[(scol.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(scol.name)+\"\\n                                \")]):_vm._e(),_vm._v(\" \"),_vm._l((scol.children),function(item){return _c('span',{key:item.index},[(_vm.isShow(item.model) && item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"url\":_vm.url,\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"formula\":_vm.formula,\"relations\":_vm.relations,\"asyncMode\":_vm.asyncMode,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"asyncMode\":_vm.asyncMode,\"editMode\":_vm.editMode,\"model\":{form: _vm.model, component: item.model},\"disabled\":item.disabled ? item.disabled : false,\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"url\":_vm.url,\"getSchemaByModel\":_vm.getSchemaByModel,\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1)})],2)}),1)})],2)]):_vm._e()}),_vm._v(\" \"),(row.sectionRenderByTab)?_c('Tabs',{attrs:{\"value\":0}},_vm._l((row.children),function(col){return (_vm.isVisibleSection(col))?_c('TabPane',{key:col.index,attrs:{\"label\":col.name,\"name\":col.index}},_vm._l((col.children),function(srow){return _c('Row',{key:srow.index},_vm._l((srow.children),function(scol){return _c('Col',{key:scol.index,attrs:{\"id\":scol.id,\"xs\":24,\"sm\":24,\"md\":scol.span.md,\"lg\":scol.span.lg}},[(scol.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(scol.name)+\"\\n                                \")]):_vm._e(),_vm._v(\" \"),_vm._l((scol.children),function(item){return _c('span',{key:item.index},[(_vm.isShow(item.model) && item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"formula\":_vm.formula,\"url\":_vm.url,\"relations\":_vm.relations,\"asyncMode\":_vm.asyncMode,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"asyncMode\":_vm.asyncMode,\"editMode\":_vm.editMode,\"model\":{form: _vm.model, component: item.model},\"url\":_vm.url,\"disabled\":item.disabled ? item.disabled : false,\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"getSchemaByModel\":_vm.getSchemaByModel,\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1)})],2)}),1)}),1):_vm._e()}),1):_vm._e(),_vm._v(\" \"),_vm._l((row.children),function(col){return (col.type == 'col')?_c('Col',{key:col.index,attrs:{\"xs\":col.span.xs,\"sm\":col.span.sm,\"md\":col.span.md,\"lg\":col.span.lg}},[(col.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(col.name))]):_vm._e(),_vm._v(\" \"),_vm._l((col.children),function(item){return _c('span',{key:item.index},[(_vm.isShow(item.model) && item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"relations\":_vm.relations,\"asyncMode\":_vm.asyncMode,\"formula\":_vm.formula,\"schemaID\":_vm.schemaID,\"url\":_vm.url,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"editMode\":_vm.editMode,\"disabled\":item.disabled ? item.disabled : false,\"model\":{form: _vm.model, component: item.model},\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"asyncMode\":_vm.asyncMode,\"getSchemaByModel\":_vm.getSchemaByModel,\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1)})],2):_vm._e()})],2)})],2):_vm._e(),_vm._v(\" \"),(!_vm.viewMode)?_c('div',{staticClass:\"dataform-footer\"},[(_vm.withBackButton)?_c('Button',{staticStyle:{\"margin-right\":\"8px\"},on:{\"click\":_vm.close}},[_vm._v(\"\\n                Буцах\\n            \")]):_vm._e(),_vm._v(\" \"),_vm._l((_vm.extraButtons),function(extraButton){return _c('Button',{key:extraButton.index,style:(!_vm.editMode ? \"margin-right: 8px;\" : (\"margin-right: 8px; color:\" + (extraButton.color) + \"; border-color:\" + (extraButton.color))),attrs:{\"disabled\":!_vm.editMode,\"to\":_vm.createWithTemplate(extraButton.url),\"target\":\"_blank\"}},[_c('i',{class:extraButton.icon,style:(!_vm.editMode ? \"\" :(\"color:\" + (extraButton.color)))}),_vm._v(\"\\n                \"+_vm._s(extraButton.title)+\"\\n            \")])}),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"info\",\"loading\":_vm.asyncMode},on:{\"click\":function($event){return _vm.handleSubmit(_vm.meta.model +'-'+ _vm.schemaID)}}},[(!_vm.asyncMode)?_c('span',[_vm._v(\"\\n                    \"+_vm._s(_vm.save_btn_text != 'Хадгалах' && _vm.save_btn_text != \"\" ? _vm.save_btn_text : _vm.lang.save)+\"\\n                \")]):_c('span',[_vm._v(\"\\n                    \"+_vm._s(_vm.lang.pleaseWait)+\"\\n                \")])]),_vm._v(\" \"),(!_vm.editMode && !_vm.disableReset)?_c('Button',{staticStyle:{\"margin-left\":\"8px\"},on:{\"click\":function($event){return _vm.handleReset(_vm.meta.model +'-'+ _vm.schemaID)}}},[_vm._v(\"\\n                \"+_vm._s(_vm.lang.fillInTheNewOne)+\"\\n            \")]):_vm._e(),_vm._v(\" \"),_vm._l((_vm.getFooterButtons()),function(button){return _c('span',{staticClass:\"extra-buttons\"},_vm._l((button.options),function(option){return _c('Button',{key:button.inex,attrs:{\"type\":\"info\",\"loading\":_vm.asyncMode},on:{\"click\":function($event){return _vm.setAndSend(button.model, option.value)}}},[_vm._v(\"\\n                 \"+_vm._s(option.label)+\"\\n                \")])}),1)})],2):_vm._e()]),_vm._v(\" \"),_c('Drawer',{staticClass:\"info-modal\",attrs:{\"title\":_vm.infoTitle,\"width\":\"860px\"},model:{value:(_vm.showInfo),callback:function ($$v) {_vm.showInfo=$$v},expression:\"showInfo\"}},[_c('iframe',{attrs:{\"src\":_vm.infoUrl,\"frameborder\":\"0\"}}),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{attrs:{\"type\":\"primary\",\"size\":\"large\"},on:{\"click\":function($event){_vm.showInfo = false}}},[_vm._v(\"\\n                \"+_vm._s(_vm.lang.close)+\"\\n            \")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var templateRe = /\\{ *([\\w_-]+) *\\}/g;\n\nexport function dataFromTemplate(str, data) {\n    return str.replace(templateRe, function (str, key) {\n        let value = data[key];\n        if (value === undefined) {\n            return '';\n        } else if (typeof value === 'function') {\n            value = value(data);\n        }\n        return value;\n    });\n}\n\nexport function evil(fn) {\n    return new Function('return ' + fn)();\n}\n","import {element} from \"./elements\";\nimport {getRule, setModel, setIdentity} from \"./rule\";\nimport {dataFromTemplate} from \"./utils/formula.js\";\nimport {doFormula, doTrigger} from \"./utils/formula_and_trigger.js\";\nimport {evalstr, isValid} from \"./utils/methods.js\";\nimport {getRelationData} from \"./utils/helpers.js\";\n\nexport default {\n    name: \"dataform\",\n    props: [\n        \"projectID\",\n        \"schemaID\",\n        \"editMode\",\n        \"onReady\",\n        \"onSuccess\",\n        \"onError\",\n        \"permissions\",\n        \"user_condition\",\n        \"formCustomData\",\n        \"do_render\",\n        \"isSubForm\",\n        \"url\",\n        \"page_id\",\n        \"public\",\n        \"title\",\n        \"close\"\n    ],\n    data() {\n        return {\n            formTitle: \"\",\n            loadConfig: true,\n            viewMode: false,\n            asyncMode: false,\n            save_btn_text: \"\",\n            formValidationCustomText: \"\",\n            meta: {\n                model: \"\",\n                option: {}\n            },\n            model: {},\n            schema: [],\n            ui: {},\n            formula: [],\n            rule: {},\n            identity: null,\n            dataID: null,\n            relations: {},\n            showInfo: false,\n            infoUrl: \"\",\n            infoTitle: \"\",\n            showID: window.init ? window.init.showID ? window.init.showID : undefined : undefined,\n            subFormValidations: [],\n            extraButtons: [],\n            disableReset: false,\n            withBackButton: false\n        };\n    },\n\n    computed: {\n        baseUrl() {\n            return this.$props.url ? this.$props.url : '';\n        },\n        submitUrl() {\n            return this.editMode\n                ? this.page_id ? `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/update/${this.dataID}?page_id=${this.page_id}` : `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/update/${this.dataID}`\n                : this.page_id ? `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/store?page_id=${this.page_id}` : `${this.baseUrl}/lambda/krud${this.optionUrl}/${this.$props.schemaID}/store`;\n        },\n        optionUrl() {\n            if (this.public === true) {\n                return \"-public\"\n            } else {\n                return \"\"\n            }\n        },\n        lang() {\n            const labels = ['save', 'pleaseWait', 'fillInTheNewOne', 'close', 'pleaseEnterPasswordYouUCurrentlyUsing', 'pleaseReEnterYourPassword',\n                'passwordConfirmError', 'informationIsIncomplete', 'trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder',\n                'successfullySaved', 'errorSaving'\n            ];\n            return labels.reduce((obj, key, i) => {\n                obj[key] = this.$t('dataForm.' + labels[i]);\n                return obj;\n            }, {});\n        },\n\n    },\n\n    created() {\n        window.showInformationModal = this.showInformationModal;\n        if (this.schemaID) {\n            this.initForm();\n        }\n    },\n\n    watch: {\n        src(val, oldValue) {\n            this.initForm();\n        },\n\n        editMode(val) {\n            if (!val) {\n                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n            }\n        },\n\n        do_render(val) {\n            if (!val) {\n                this.viewMode = false;\n                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n            }\n        },\n\n        schemaID(val) {\n            if (val) {\n                this.initForm();\n            }\n        },\n\n        ui(val) {\n            if (val && this.dataID) {\n                this.editModel(this.dataID);\n            }\n        }\n    },\n\n    methods: {\n        createWithTemplate(template) {\n            return dataFromTemplate(template, this.model);\n        },\n        isVisibleSection(col) {\n            let showAbleFields = this.showAbleFields(col.children);\n\n            if (col.type == 'section' && showAbleFields) {\n                if (col.visibleUserRoles && showAbleFields) {\n                    if (Array.isArray(col.visibleUserRoles) && showAbleFields) {\n                        if (col.visibleUserRoles.length >= 1 && window.init.user && showAbleFields) {\n                            if (col.visibleUserRoles.findIndex(role => role == window.init.user.role) >= 0 && showAbleFields) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                } else {\n                    return true;\n                }\n            } else {\n                return false;\n            }\n        },\n        showAbleFields(items) {\n\n            for (let item of items) {\n\n\n                if (item.type == \"form\" || item.type == \"Form\") {\n\n\n                    if (this.isShow(item.model)) {\n\n                        return true;\n\n                    } else {\n                        return false;\n                    }\n                } else {\n                    if (item.formType == \"SubForm\") {\n                        return true;\n                    } else {\n                        if (item.type == \"row\") {\n                            let showableFieldFound = false;\n                            for (let col of item.children) {\n                                let fieldShowAble = this.showAbleFields(col.children);\n                                if (fieldShowAble) {\n                                    showableFieldFound = true;\n                                }\n                            }\n                            return showableFieldFound;\n                        } else {\n                            if (item.hasOwnProperty(\"children\")) {\n                                let showAbleChild = this.showAbleFields(item.children)\n                                if (showAbleChild) {\n                                    return true;\n                                } else {\n                                    return false;\n                                }\n                            } else {\n\n                                if (this.isShow(item.model)) {\n\n                                    return true;\n\n                                } else {\n                                    return false;\n                                }\n                            }\n\n                        }\n\n                    }\n\n                }\n            }\n        },\n        element: element,\n        evalstr: evalstr,\n        isValid: isValid,\n\n        isShow(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n\n            if (index >= 0) {\n                if (this.schema[index].hidden) {\n                    return false\n                } else\n                    return true\n            }\n            return true\n        },\n        afterChange(model, val, oldValue) {\n            doTrigger(model, val, this.model, this.schema, this.$refs, this.$Notice, this.editMode);\n            if (this.do_render) {\n                if (val != oldValue) {\n                    doFormula(this.formula, model, this.model, this.schema, this.rule, false);\n                }\n\n            }\n        },\n\n        clearConfig() {\n            this.model = {};\n            this.schema = [];\n            this.ui = {};\n            this.formula = [];\n            this.rule = {};\n            this.dataID = null;\n        },\n        async initFromServerData(userCondition) {\n\n            let configUrl = this.baseUrl + `/lambda/puzzle/schema${this.optionUrl}/form/${this.$props.schemaID}`;\n            if (this.projectID) {\n                configUrl = this.baseUrl + `/lambda/puzzle/project/${this.projectID}/form/${this.$props.schemaID}`;\n            }\n            configUrl += userCondition.length == 0 ? '' : `/${userCondition}`;\n\n            try {\n                let response = await axios.get(configUrl)\n                let data = JSON.parse(response.data.data.schema)\n                data[\"form_id\"] = response.data.data.id;\n                data[\"form_name\"] = response.data.data.name;\n                return data;\n            } catch (e) {\n                console.error(e.message);\n                return undefined;\n            }\n        },\n        async initForm() {\n            // this.clearConfig();\n            let userCondition = [];\n\n            if (this.user_condition) {\n                userCondition = JSON.stringify(this.user_condition);\n            }\n\n            let formSchema = {};\n            if (window.init) {\n                if (window.init.formSchemas) {\n                    if (window.init.formSchemas[this.$props.schemaID]) {\n                        formSchema = window.init.formSchemas[this.$props.schemaID];\n                    } else {\n                        formSchema = await this.initFromServerData(userCondition);\n                    }\n                } else {\n                    formSchema = await this.initFromServerData(userCondition);\n                }\n            } else {\n                formSchema = await this.initFromServerData(userCondition);\n            }\n\n\n            this.identity = formSchema.identity;\n            this.schema = formSchema.schema;\n\n            this.ui = formSchema.ui;\n            if (formSchema.save_btn_text) {\n                this.save_btn_text = formSchema.save_btn_text;\n            }\n            if (formSchema.formValidationCustomText) {\n                this.formValidationCustomText = formSchema.formValidationCustomText;\n            }\n\n\n            if (formSchema.formula) {\n                this.formula = formSchema.formula;\n            }\n            if (formSchema.extraButtons) {\n                this.extraButtons = formSchema.extraButtons;\n            }\n            if (formSchema.disableReset) {\n                this.disableReset = formSchema.disableReset;\n            }\n            if (formSchema.withBackButton) {\n                this.withBackButton = formSchema.withBackButton;\n            }\n\n\n            this.formTitle = formSchema.form_name;\n\n            this.meta = {\n                model: formSchema.model,\n                option: {\n                    labelPosition: formSchema.labelPosition,\n                    labelWidth: formSchema.labelWidth\n                }\n            };\n\n            this.getOptionsData(formSchema.schema);\n            this.setUiSchemaFormItem(formSchema.ui.schema);\n            this.setHiddenItemModel(formSchema.schema);\n\n            setModel(formSchema.model);\n            this.setUserConditionValues(true);\n            this.setCustomData();\n            this.loadConfig = false;\n            if (this.$props.onReady) {\n                this.$props.onReady(formSchema, this.schema);\n            }\n        },\n        setHiddenItemModel(schema) {\n            schema.forEach(item => {\n                    if (item.hidden || item.disabled) {\n                        if (this.isValid(item.default)) {\n                            this.setModel(item.model, item.default, item.formType);\n                        }\n\n                        if (item.hasUserId) {\n                            this.setModel(item.model, window.init.user.id * 1, item.formType);\n                        }\n                        if (item.fillByUserField !== null && item.fillByUserField !== \"\" && item.fillByUserField !== undefined) {\n                            this.setModel(item.model, window.init.user[item.fillByUserField], item.formType);\n                        }\n                        if (this.isValid(item.param)) {\n                            if (item.param in this.$route.params) {\n                                let param = this.$route.params[item.param];\n                                if (param != 'null') {\n                                    Vue.set(this.$data.model, item.model, param);\n                                }\n                            }\n                        }\n                    }\n                    item.source_hidden = item.hidden;\n                    item.source_disabled = item.disabled;\n                }\n            )\n\n        },\n        validatePassCheck(model, rule, value, callback) {\n\n            let value_ = value ? value : '';\n            let password_value = this.model[model] ? this.model[model] : '';\n\n            if (value === '' && !this.editMode) {\n                callback(new Error(this.lang.pleaseReEnterYourPassword));\n            } else if (value_ !== password_value) {\n                callback(new Error(this.lang.passwordConfirmError));\n            } else {\n                callback();\n            }\n        },\n\n        setUiSchemaFormItem(items) {\n            items.forEach(item => {\n                if (item.type == \"form\") {\n\n                    this.setModel(item.model, item.default, item.formType);\n                    this.$watch(\"model.\" + item.model, {\n                        handler: (value, oldValue) => {\n                            if(this.do_render){\n                                if(value !== oldValue){\n                                    this.afterChange(item.model, value, oldValue);\n                                }\n                            }\n                        },\n                        deep: true\n                    });\n\n                    if (item.rules) {\n\n                        this.setRule(item.model, item.rules);\n                    }\n                    if (item.formType == 'Password') {\n                        if (item.passwordOption) {\n                            if (item.passwordOption.confirm) {\n                                this.setModel('password_confirm', '', 'password');\n                                this.$data.rule['password_confirm'] = [{\n                                    validator: (rule, value, callback) => this.validatePassCheck(item.model, rule, value, callback),\n                                    trigger: 'blur'\n                                }];\n\n                            }\n                            if (item.passwordOption.edit_with_old_password) {\n                                this.setModel('current_password', '', 'password');\n                                let rules_for_current_password = [];\n                                let rules_current_password = [{\n                                    type: 'required',\n                                    msg: this.lang.pleaseEnterPasswordYouUCurrentlyUsing\n                                }, {type: 'check_current_password', msg: null}];\n                                rules_current_password.forEach(rule => {\n                                    let r = getRule(rule, this.url);\n                                    rules_for_current_password.push(r);\n                                });\n                                this.$data.rule['current_password'] = rules_for_current_password;\n                            }\n                        }\n                    }\n\n                } else if (item.formType == \"SubForm\") {\n                    this.setModel(item.model, [], \"SubForm\");\n                    if (item.checkEmpty) {\n                        this.subFormValidations.push({\n                            model: item.model,\n                            emptyErrorMsg: item.EmptyErrorMsg ? item.EmptyErrorMsg : `${item.name}-д мэдээлэл бүртгэнэ үү`\n                        });\n                    }\n\n                    if(item.trigger != \"\"){\n                        this.$watch(\"model.\" + item.model, {\n                            handler: (value, oldValue) => {\n                                if(this.do_render){\n                                    this.afterChange(item.model, value, oldValue);\n                                }\n                            },\n                            deep: true\n                        });\n                    }\n\n\n                } else if (_.isArray(item.children)) {\n                    this.setUiSchemaFormItem(item.children);\n                }\n            });\n        },\n\n        setModel(name, value, type) {\n\n            switch (type) {\n                case \"Switch\":\n                    let val = false;\n                    if (value == \"true\" || value == 1) {\n                        val = true;\n                    }\n                    Vue.set(this.$data.model, name, val);\n                    break;\n                case \"Checkbox\":\n                    let val_ = 0;\n                    if (value == \"true\" || value == 1) {\n                        val_ = 1;\n                    }\n                    Vue.set(this.$data.model, name, val_);\n                    break;\n                case \"CK\":\n                    let ck_value = \"\";\n                    if (value != \"\" && value !== null) {\n                        ck_value = value;\n                    }\n                    Vue.set(this.$data.model, name, ck_value);\n                    break;\n                case \"SubForm\":\n                    Vue.set(this.$data.model, name, []);\n                    break;\n                case \"Select\":\n                    if (value == \"\" || value === null) {\n                        Vue.set(this.$data.model, name, null);\n                    } else if (!isNaN(value)) {\n                        Vue.set(this.$data.model, name, value * 1);\n                    } else {\n                        Vue.set(this.$data.model, name, value);\n                    }\n                    break;\n                case \"Number\":\n                    if (value !== null) {\n                        Vue.set(this.$data.model, name, value * 1);\n                    }\n                    break;\n                case \"ISelect\":\n                    Vue.set(this.$data.model, name, value);\n                case \"TreeSelect\":\n                    Vue.set(this.$data.model, name, value);\n                    break;\n                default:\n                    Vue.set(this.$data.model, name, value);\n            }\n        },\n\n        setRule(name, rules) {\n            this.$data.rule[name] = [];\n            rules.forEach(item => {\n                let r = getRule(item, this.url);\n                this.$data.rule[name].push(r);\n            });\n        },\n\n        setMeta(item, subForm) {\n            let s_index = this.schema.findIndex(schema => schema.model == item.model);\n            let i = s_index >= 0 ? this.schema[s_index] : item;\n            if (!subForm) {\n                delete i[\"table\"];\n                delete i[\"extra\"];\n                i.schemaID = this.$props.schemaID;\n            }\n            return i;\n        },\n\n        getSchemaByModel(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n            if (index >= 0)\n                return this.schema[index]\n            else\n                return null\n        },\n\n        getSchemaRelationByModel(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n            if (index >= 0)\n                return getRelationData(this.schema[index], this.relations)\n            else\n                return null\n        },\n\n        setSchemaByModel(model, prop, value, subModel) {\n\n            if (prop == \"value\") {\n                Vue.set(this.$data.model, model, value);\n            } else if (prop == \"sub-value\") {\n                Vue.set(this.$data.model, model, value);\n                this.subFormFillData(model)\n            } else {\n                let index = this.schema.findIndex(item => item.model == model);\n\n                if (index >= 0) {\n                    if (subModel !== undefined) {\n                        if (this.schema[index].formType == \"SubForm\") {\n                            let sindex = this.schema[index].schema.findIndex(sitem => sitem.model == subModel);\n                            if (sindex >= 0) {\n                                Vue.set(this.schema[index].schema[sindex], prop, value)\n                            }\n                        }\n\n                    } else {\n                        Vue.set(this.schema[index], prop, value)\n                    }\n                }\n\n            }\n\n        },\n\n        getSubFormData(key) {\n            let subFormData = [];\n            this.model[key].forEach(item => {\n                subFormData.push(item.data);\n            });\n        },\n\n\n        handleSubmit(name) {\n            this.setIdentityManual();\n            if (_.isEmpty(this.$data.rule)) {\n                if (this.subFormValidations.length >= 1) {\n                    this.validateWithSubForm();\n                } else {\n                    this.postData();\n                }\n\n            } else {\n                this.$refs[name].validate(valid => {\n                    if (valid) {\n                        if (this.subFormValidations.length >= 1) {\n                            this.validateWithSubForm();\n                        } else {\n                            this.postData();\n                        }\n                    } else {\n                        //auh дээр хэрэглэгдэж байгаа шүү\n                        this.$Notice.error({\n                            title: this.lang.informationIsIncomplete,\n                            desc: this.formValidationCustomText != \"\" ? this.formValidationCustomText : this.lang.trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder\n                            , duration: 0\n                        });\n\n                    }\n                });\n            }\n        },\n        validateWithSubForm() {\n            let subValid = true;\n            this.subFormValidations.forEach(sbValidation => {\n                let isArray = _.isArray(this.model[sbValidation.model]);\n                if (this.model[sbValidation.model] === undefined || this.model[sbValidation.model] === null || isArray) {\n\n                    if (isArray) {\n                        if (this.model[sbValidation.model].length == 0) {\n                            this.$Notice.error({\n                                title: this.lang.informationIsIncomplete,\n                                desc: sbValidation.emptyErrorMsg, duration: 0\n                            });\n                            subValid = false;\n                        }\n                    } else {\n                        this.$Notice.error({\n                            title: this.lang.informationIsIncomplete,\n                            desc: sbValidation.emptyErrorMsg, duration: 0\n                        });\n                        subValid = false;\n                    }\n                }\n            })\n            if (subValid) {\n                this.postData();\n            }\n        },\n\n        postData() {\n            if (this.isSubForm) {\n                this.$props.onSuccess(this.$data.model);\n            } else {\n                this.asyncMode = true;\n                axios.post(this.submitUrl, this.$data.model)\n                    .then(({data}) => {\n\n                        if (data.status) {\n                            this.$Notice.success({\n                                title: this.lang.successfullySaved\n                            });\n\n                            if (!this.editMode) {\n                                this.$data.model[this.identity] = data[this.identity];\n                                if (this.$props.onSuccess) {\n                                    this.$props.onSuccess(data.data);\n                                }\n                                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n                            } else {\n                                if (this.$props.onSuccess) {\n                                    this.$props.onSuccess(data.data);\n                                }\n                            }\n                        } else {\n                            this.$Notice.error({\n                                title: this.lang.errorSaving\n                            });\n                            if (this.$props.onError) {\n                                this.$props.onError();\n                            }\n                        }\n                        this.asyncMode = false;\n                    })\n                    .catch(e => {\n                        let errorDesc = \"\";\n                        if (e.response) {\n\n                            if (e.response.data.hasOwnProperty(\"error\")) {\n\n                                if (typeof e.response.data.error === 'string' || e.response.data.error instanceof String) {\n                                    errorDesc = e.response.data.error;\n                                } else {\n                                    if (e.response.data.error instanceof Object) {\n                                        Object.keys(e.response.data.error).forEach(error => {\n                                            let desc = error + \": \" + e.response.data.error[error].map(ed => ed + \" \")\n                                            if (errorDesc != \"\") {\n                                                errorDesc = errorDesc + \"<br/>\" + desc;\n                                            } else {\n                                                errorDesc = desc;\n                                            }\n                                        })\n                                    }\n                                }\n\n                            }\n                            this.$Notice.error({\n                                title: this.lang.errorSaving,\n                                duration: 3,\n                                desc: errorDesc\n                            });\n\n                        } else {\n                            this.$Notice.error({\n                                title: this.lang.errorSaving,\n                                duration: 3,\n                                desc: e\n                            });\n\n\n                        }\n\n                        this.asyncMode = false;\n                        if (this.$props.onError) {\n                            this.$props.onError();\n                        }\n\n                    });\n            }\n        },\n\n        handleReset(name) {\n            this.model = {};\n            this.$refs[name].resetFields();\n            setIdentity(this.identity, null);\n            this.schema.forEach(item => {\n                if (item.formType == \"SubForm\" && typeof this.$refs[`sf${item.model}`] != \"undefined\") {\n                    this.$refs[`sf${item.model}`][0].reset();\n                }\n                //if (item.default != null && !this.editMode) {\n                this.setModel(item.model, item.default, item.formType);\n                //}\n\n                item.hidden = item.source_hidden;\n                item.disabled = item.source_disabled;\n            });\n            this.setHiddenItemModel(this.schema);\n            this.setCustomData();\n\n        },\n        setIdentityManual() {\n            setIdentity(this.identity, this.model[this.identity]);\n        },\n\n        setUserConditionValues(setFromUserData) {\n            //SET DEFAULT VALUE Disabled item on edit mode\n            if (this.user_condition) {\n                this.user_condition.forEach(user_condition => {\n\n                    let schemaItem = this.getSchemaByModel(user_condition[\"form_field\"]);\n                    if (schemaItem) {\n                        if ((schemaItem.default != \"\" && schemaItem.default !== null && schemaItem.default != 0) || setFromUserData) {\n                            if (this.model[schemaItem.model] == \"\" || this.model[schemaItem.model] === null || this.model[schemaItem.model] == 0) {\n                                if (setFromUserData) {\n                                    this.model[schemaItem.model] = window.init.user[user_condition[\"user_field\"]];\n                                    schemaItem.default = window.init.user[user_condition[\"user_field\"]];\n                                } else {\n                                    // this.model[schemaItem.model] = schemaItem.default;\n                                    this.setModel(schemaItem.model, schemaItem.default, schemaItem.formType);\n                                }\n\n                            }\n                        }\n                    }\n\n\n                });\n            }\n\n\n        },\n        setCustomData() {\n            if (this.formCustomData) {\n                Object.keys(this.formCustomData).forEach(model => {\n                    let index = this.schema.findIndex(item => item.model == model);\n                    if (index >= 0) {\n                        Vue.set(this.schema[index], \"disabled\", true);\n                        Vue.set(this.schema[index], \"default\", this.formCustomData[model]);\n                        Vue.set(this.$data.model, model, this.formCustomData[model]);\n                    }\n                })\n            }\n        },\n\n        editModel(id, editData) {\n            if (editData) {\n                this.model = {...this.model, ...editData};\n                if (this.ui && this.ui.hasOwnProperty(\"schema\")) {\n                    this.setEditModel(this.ui.schema);\n                    this.setUserConditionValues(false);\n                    this.setCustomData();\n                }\n            } else {\n                this.dataID = id;\n                setIdentity(this.identity, id);\n                axios.post(this.page_id ? `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/edit/${id}?page_id=${this.page_id}` : `${this.baseUrl}/lambda/krud/${this.$props.schemaID}/edit/${id}`)\n                    .then(({data}) => {\n                        if (data.status) {\n                            this.model = {...this.model, ...data.data};\n                            if (this.ui && this.ui.hasOwnProperty(\"schema\")) {\n                                this.setEditModel(this.ui.schema);\n                            }\n                            this.setUserConditionValues(false);\n                            this.setCustomData();\n                        }\n                    });\n            }\n        },\n\n        setHiddenValues(values) {\n            values.map(item => {\n                this.model[item[\"key\"]] = item[\"val\"];\n            });\n        },\n\n        subFormFillData(subModel) {\n            if (this.$refs[`sf${subModel}`]) {\n                if (this.$refs[`sf${subModel}`].length >= 1) {\n                    this.$refs[`sf${subModel}`][0].fillData();\n                } else {\n                    setTimeout(() => {\n                        this.subFormFillData(subModel)\n                    }, 100)\n                }\n            } else {\n                setTimeout(() => {\n                    this.subFormFillData(subModel)\n                }, 100)\n            }\n        },\n\n        setEditModel(items) {\n            items.forEach(item => {\n                if (item.type == \"form\" || item.type == \"Form\" || item.formType == \"SubForm\") {\n                    switch (item.formType) {\n                        case \"SubForm\":\n                            this.subFormFillData(item.model);\n                            break;\n                        case \"Switch\":\n                            if (this.model[item.model] == 1 || this.model[item.model] == \"true\") {\n                                this.model[item.model] = true;\n                            } else {\n                                this.model[item.model] = false;\n                            }\n                            break;\n                        // case \"Checkbox\":\n                        //     if (this.model[item.model] == 1 || this.model[item.model] == \"true\") {\n                        //         this.model[item.model] = true;\n                        //     } else {\n                        //         this.model[item.model] = false;\n                        //     }\n                        //     break;\n                        case \"Password\":\n                            this.model[item.model] = '';\n                            delete this.$data.rule[item.model];\n                            break;\n                        case \"PasswordGenerate\":\n                            this.model[item.model] = '';\n                            delete this.$data.rule[item.model];\n                            break;\n                        default:\n                            break;\n                    }\n                } else if (_.isArray(item.children)) {\n                    this.setEditModel(item.children);\n                }\n            });\n        },\n\n        cloneModel(id) {\n            axios.post(`/lambda/krud/${this.$props.schemaID}/edit/${id}`)\n                .then(({data}) => {\n                    if (data.status) {\n                        this.model = {...this.model, ...data.data};\n                        delete this.model[this.identity];\n                        this.setEditModel(this.ui.schema);\n                        this.setUserConditionValues(false);\n                        this.setCustomData();\n                    }\n                });\n        },\n\n        getOptionsByRelations(baseUrl, relations) {\n            if (Object.keys(relations).length >= 1) {\n                axios.post(`${baseUrl}/lambda/puzzle/get_options${this.optionUrl}`, {relations: relations})\n                    .then(({data}) => {\n                        Object.keys(data).map(relation => {\n                            let r = {...this.relations[relation], data: data[relation]}\n                            Vue.set(this.$data.relations, relation, r);\n                        });\n                    });\n            }\n        },\n\n        getOptionsData(schema) {\n            this.relations = this.getSelects(schema, undefined);\n            if (window.init.microserviceSettings) {\n                if (window.init.microserviceSettings.length >= 1) {\n\n                    window.init.microserviceSettings.forEach(microserviceSetting => {\n                        let relations = this.getSelects(schema, microserviceSetting.project_id);\n                        this.getOptionsByRelations(microserviceSetting.production_url, relations);\n                    })\n                } else {\n                    this.getOptionsByRelations(\"\", this.relations);\n                }\n            } else {\n                this.getOptionsByRelations(\"\", this.relations);\n            }\n\n        },\n        getSelectItem(item, selects) {\n\n            if (item.relation.filterWithUser) {\n                if (!!item.relation.filterWithUser && item.relation.filterWithUser.constructor === Array) {\n                    let userConditions = \"\"\n                    item.relation.filterWithUser.forEach(userFilter => {\n\n                        let condition = `${userFilter[\"tableField\"]} = '${window.init.user[userFilter[\"userField\"]]}'`\n\n                        if (userConditions == \"\") {\n                            userConditions = condition;\n                        } else {\n                            userConditions = userConditions + \" AND \" + condition\n                        }\n                    });\n\n                    if (item.relation.filter == \"\" || typeof item.relation.filter === \"undefined\") {\n                        item.relation.filter = userConditions;\n\n                        console.log(item.relation)\n\n                        this.setSchemaByModel(item.model, \"relation\", item.relation);\n\n                    } else {\n                        item.relation.filter = `(${item.relation.filter}) OR (${userConditions})`\n                    }\n                } else {\n                    let condition = `${item.relation.filterWithUser[\"tableField\"]} = '${window.init.user[item.relation.filterWithUser[\"userField\"]]}'`\n                    if (item.relation.filter == \"\" || typeof item.relation.filter === \"undefined\") {\n                        item.relation.filter = condition;\n                    } else {\n                        item.relation.filter = item.relation.filter + \" AND \" + condition\n                    }\n                }\n\n\n                item.relation.filterWithUser = undefined;\n\n\n            }\n\n            if (item.relation.filter == \"\" || typeof item.relation.filter === \"undefined\") {\n\n                selects[item.relation.table] = item.relation;\n\n            } else {\n\n                selects[item.model] = item.relation;\n            }\n            return selects;\n        },\n        getSelects(schema, microserviceID) {\n            let selects = {};\n\n            schema.map(item => {\n                if (item.formType == 'Radio' || item.formType == 'Select' || item.formType == 'ISelect' || item.formType == 'TreeSelect') {\n                    if (item.relation.table) {\n                        if (typeof selects[item.relation.table] === \"undefined\") {\n\n\n                            if (microserviceID !== undefined) {\n                                if (item.relation.microservice_id == microserviceID) {\n                                    selects = this.getSelectItem(item, selects)\n                                }\n                            } else {\n                                selects = this.getSelectItem(item, selects)\n                            }\n\n                        }\n                    }\n                }\n\n                if (item.formType == 'AdminMenu') {\n                    if (item.relation.table)\n                        selects[item.relation.table] = item.relation;\n                }\n\n                if (item.formType == 'SubForm') {\n\n                    if (item.schema) {\n                        let pre_selects = this.getSelects(item.schema, microserviceID);\n                        if (pre_selects) {\n                            selects = {...selects, ...pre_selects}\n                        }\n                    }\n\n                }\n            });\n            return selects;\n        },\n\n        /* countShowableChildren(children){\n             let visible_item_found = false;\n             children.forEach(child=>{\n                 if(child.children){\n                     child.children.forEach(sub_child=>{\n                         if(sub_child.children){\n                             sub_child.children.forEach(form_field=>{\n\n                                 if(!form_field.hidden && form_field.type == 'form'){\n                                     visible_item_found = true;\n\n\n                                 }\n\n                             })\n                         }\n                     })\n                 }\n             })\n             return visible_item_found;\n         }*/\n        showInformationModal(url, title) {\n\n\n            this.infoTitle = title;\n            this.infoUrl = url;\n            this.showInfo = true;\n\n        },\n        getRelation(item) {\n            let s_index = this.schema.findIndex(schema => schema.model == item.model);\n            let i = s_index >= 0 ? this.schema[s_index] : item;\n            return getRelationData(i, this.relations)\n        },\n        getFooterButtons() {\n            let buttons = [];\n            this.schema.forEach(item => {\n                if (item.formType == \"FooterButton\") {\n                    buttons.push({...item});\n                }\n            });\n            return buttons;\n        },\n        setAndSend(model, value) {\n\n            let name = this.meta.model + '-' + this.schemaID;\n            this.setIdentityManual();\n            if (_.isEmpty(this.$data.rule)) {\n                if (this.subFormValidations.length >= 1) {\n                    this.validateWithSubForm();\n                } else {\n                    this.asyncMode = true;\n                    Vue.set(this.$data.model, model, value);\n                    this.postData();\n                }\n\n            } else {\n                this.$refs[name].validate(valid => {\n                    if (valid) {\n                        if (this.subFormValidations.length >= 1) {\n                            this.validateWithSubForm();\n                        } else {\n                            this.asyncMode = true;\n                            Vue.set(this.$data.model, model, value);\n                            this.postData();\n                        }\n                    } else {\n                        //auh дээр хэрэглэгдэж байгаа шүү\n                        this.$Notice.error({\n                            title: this.lang.informationIsIncomplete,\n                            desc: this.formValidationCustomText != \"\" ? this.formValidationCustomText : this.lang.trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder\n                            , duration: 0\n                        });\n\n                    }\n                });\n            }\n        }\n    },\n\n\n};\n","import mod from \"-!../../../../../vue-loader/lib/index.js??vue-loader-options!./Dataform.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../vue-loader/lib/index.js??vue-loader-options!./Dataform.vue?vue&type=script&lang=js&\"","<template>\n    <div :class=\"viewMode ? 'dataform view-mode' : 'dataform'\">\n        <Form :ref=\"meta.model +'-'+ schemaID\" :model=\"model\" :rules=\"rule\" :label-position=meta.option.labelPosition\n              :label-width=\"meta.option.labelPosition == 'top' ? undefined : meta.option.labelWidth\">\n            <div class=\"dataform-header\">\n                <h3>{{ title ? title : formTitle }}<b v-if=\"showID\"><span v-if=\"model[identity]\">: {{\n                        model[identity]\n                    }}</span></b></h3>\n            </div>\n            <div class=\"dataform-body\" v-if=\"!loadConfig\">\n                <Spin v-if=\"loadConfig\" fix></Spin>\n                <!-- Tab Section -->\n\n                <Row v-for=\"row in ui.schema\" :key=\"row.index\">\n                    <!-- Section -->\n                    <Col v-for=\"col in row.children\" v-if=\"isVisibleSection(col) && !row.sectionRenderByTab\"\n                         :key=\"col.index\" :xs=\"col.span.xs\"\n                         :sm=\"col.span.sm\" :md=\"col.span.md\" :lg=\"col.span.lg\">\n                        <div :class=\"col.name != '' ? 'fieldset' : ''\">\n                            <legend v-if=\"col.name != ''\">{{ col.name }}</legend>\n                            <Row v-for=\"srow in col.children\" :key=\"srow.index\">\n                                <Col v-for=\"scol in srow.children\" :id=\"scol.id\" :key=\"scol.index\" :xs=\"24\"\n                                     :sm=\"24\" :md=\"scol.span.md\" :lg=\"scol.span.lg\">\n                                    <Divider v-if=\"scol.name\" orientation=\"left\" class=\"form-divider\">{{ scol.name }}\n                                    </Divider>\n                                    <span v-for=\"item in scol.children\" :key=\"item.index\">\n                                        <component\n                                            :ref=\"'sf'+item.model\"\n                                            :url=\"url\"\n                                            v-if=\"isShow(item.model) && item.formType == 'SubForm' && item.subtype\"\n                                            :is=\"element(`subform/${item.subtype}`)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :form=\"setMeta(item, true)\"\n                                            :formula=\"formula\"\n                                            :relations=\"relations\"\n                                            :asyncMode=\"asyncMode\"\n                                            :editMode=\"editMode\">\n                                        </component>\n                                        <component\n                                            v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                            :do_render=\"do_render\"\n                                            :asyncMode=\"asyncMode\"\n                                            :editMode=\"editMode\"\n                                            :is=\"element(item.formType)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :disabled=\"item.disabled ? item.disabled : false\"\n                                            :label=\"item.label ? item.label : `[${item.model}]`\"\n                                            :rule=\"item.model\"\n                                            :meta=\"setMeta(item)\"\n                                            :identity=\"identity\"\n                                            :url=\"url\"\n                                            :getSchemaByModel=\"getSchemaByModel\"\n                                            :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                                            :setSchemaByModel=\"setSchemaByModel\"\n                                            :relation_data=\"getRelation(item)\">\n                                        </component>\n                                        </span>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Col>\n\n                    <!-- Tab -->\n                    <Tabs :value=\"0\" v-if=\"row.sectionRenderByTab\">\n                        <TabPane :label=\"col.name\" :name=\"col.index\" v-for=\"col in row.children\"\n                                 v-if=\"isVisibleSection(col)\" :key=\"col.index\">\n                            <Row v-for=\"srow in col.children\" :key=\"srow.index\">\n                                <Col v-for=\"scol in srow.children\" :id=\"scol.id\" :key=\"scol.index\" :xs=\"24\"\n                                     :sm=\"24\" :md=\"scol.span.md\" :lg=\"scol.span.lg\">\n                                    <Divider v-if=\"scol.name\" orientation=\"left\" class=\"form-divider\">{{ scol.name }}\n                                    </Divider>\n                                    <span v-for=\"item in scol.children\" :key=\"item.index\">\n                                        <component\n                                            :ref=\"'sf'+item.model\"\n                                            v-if=\"isShow(item.model) && item.formType == 'SubForm' && item.subtype\"\n                                            :is=\"element(`subform/${item.subtype}`)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :form=\"setMeta(item, true)\"\n                                            :formula=\"formula\"\n                                            :url=\"url\"\n                                            :relations=\"relations\"\n                                            :asyncMode=\"asyncMode\"\n                                            :editMode=\"editMode\">\n                                        </component>\n                                        <component\n                                            v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                            :do_render=\"do_render\"\n                                            :asyncMode=\"asyncMode\"\n                                            :editMode=\"editMode\"\n                                            :is=\"element(item.formType)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :url=\"url\"\n                                            :disabled=\"item.disabled ? item.disabled : false\"\n                                            :label=\"item.label ? item.label : `[${item.model}]`\"\n                                            :rule=\"item.model\"\n                                            :meta=\"setMeta(item)\"\n                                            :identity=\"identity\"\n                                            :getSchemaByModel=\"getSchemaByModel\"\n                                            :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                                            :setSchemaByModel=\"setSchemaByModel\"\n                                            :relation_data=\"getRelation(item)\">\n                                        </component>\n                                        </span>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                    </Tabs>\n\n                    <!-- Standart column -->\n                    <Col v-for=\"col in row.children\" v-if=\"col.type == 'col'\" :key=\"col.index\" :xs=\"col.span.xs\"\n                         :sm=\"col.span.sm\" :md=\"col.span.md\" :lg=\"col.span.lg\">\n                        <Divider v-if=\"col.name\" orientation=\"left\" class=\"form-divider\">{{ col.name }}</Divider>\n                        <span v-for=\"item in col.children\" :key=\"item.index\">\n                            <component\n                                :ref=\"'sf'+item.model\"\n                                v-if=\"isShow(item.model) && item.formType == 'SubForm' && item.subtype\"\n                                :is=\"element(`subform/${item.subtype}`)\"\n                                :label=\"item.label ? item.label : `[${item.model}]`\"\n                                :model=\"{form: model, component: item.model}\"\n                                :form=\"setMeta(item, true)\"\n                                :relations=\"relations\"\n                                :asyncMode=\"asyncMode\"\n                                :formula=\"formula\"\n                                :schemaID=\"schemaID\"\n                                :url=\"url\"\n                                :editMode=\"editMode\">\n                            </component>\n                            <component\n                                v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                :do_render=\"do_render\"\n                                :editMode=\"editMode\"\n                                :is=\"element(item.formType)\"\n                                :disabled=\"item.disabled ? item.disabled : false\"\n                                :model=\"{form: model, component: item.model}\"\n                                :label=\"item.label ? item.label : `[${item.model}]`\" :rule=\"item.model\"\n                                :meta=\"setMeta(item)\"\n                                :identity=\"identity\"\n                                :asyncMode=\"asyncMode\"\n                                :getSchemaByModel=\"getSchemaByModel\"\n                                :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                                :setSchemaByModel=\"setSchemaByModel\"\n                                :relation_data=\"getRelation(item)\">\n                            </component>\n                            </span>\n                    </Col>\n                </Row>\n            </div>\n\n            <div class=\"dataform-footer\" v-if=\"!viewMode\">\n                <Button @click=\"close\" v-if=\"withBackButton\"\n                        style=\"margin-right: 8px\">\n                    Буцах\n                </Button>\n                <Button v-for=\"extraButton in extraButtons\" :key=\"extraButton.index\" :disabled=\"!editMode\"\n                        :to=\"createWithTemplate(extraButton.url)\" target=\"_blank\"\n                        :style=\"!editMode ? `margin-right: 8px;` : `margin-right: 8px; color:${extraButton.color}; border-color:${extraButton.color}`\">\n                    <i :class=\"extraButton.icon\" :style=\"!editMode ? `` :`color:${extraButton.color}`\"></i>\n                    {{ extraButton.title }}\n                </Button>\n                <Button type=\"info\" :loading=\"asyncMode\" @click=\"handleSubmit(meta.model +'-'+ schemaID)\">\n                    <span v-if=\"!asyncMode\">\n                        {{ save_btn_text != 'Хадгалах' && save_btn_text != \"\" ? save_btn_text : lang.save }}\n                    </span>\n                    <span v-else>\n                        {{ lang.pleaseWait }}\n                    </span>\n                </Button>\n\n                <Button @click=\"handleReset(meta.model +'-'+ schemaID)\" v-if=\"!editMode && !disableReset\"\n                        style=\"margin-left: 8px\">\n                    {{ lang.fillInTheNewOne }}\n                </Button>\n\n                <span v-for=\"button in getFooterButtons()\" class=\"extra-buttons\">\n                    <Button type=\"info\" :loading=\"asyncMode\" @click=\"setAndSend(button.model, option.value)\"\n                            v-for=\"option in button.options\" :key=\"button.inex\">\n                     {{ option.label }}\n                    </Button>\n                </span>\n            </div>\n        </Form>\n        <Drawer\n            class=\"info-modal\"\n            v-model=\"showInfo\"\n            :title=\"infoTitle\"\n            width=\"860px\"\n        >\n            <iframe :src=\"infoUrl\" frameborder=\"0\"></iframe>\n            <div slot=\"footer\">\n                <Button type=\"primary\" size=\"large\" @click=\"showInfo = false\">\n                    {{ lang.close }}\n                </Button>\n            </div>\n        </Drawer>\n    </div>\n</template>\n\n<script>\nimport mixins from \"./DataformMixin\";\n\nexport default {\n    mixins: [mixins],\n}\n</script>\n\n","import { render, staticRenderFns } from \"./Dataform.vue?vue&type=template&id=ccfe762a&\"\nimport script from \"./Dataform.vue?vue&type=script&lang=js&\"\nexport * from \"./Dataform.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","elementList","element","component","Notfount","CustomElement","type","elIndex","findIndex","el","window","init","data_form_custom_elements","find","custom_element","default","exception_var","requireCustomElement","ruleModel","identityColumn","identity","setModel","model","setIdentity","column","value","rules","msg","englishAlphabet","rule","callback","match","mongolianCyrillic","mongolianMobileNumber","toString","getRule","baseUrl","required","message","min","parseInt","val","max","trigger","validator","axios","post","table","field","then","data","status","unique","checkLambdaaccount","password","check_current_password","templateRe","fieldTimeout","doFormula","formulas","model_","schema_","rule_","subFormModelName","length","formula_index","formula","template","includes","doFormula2","use_formula","pre_formula","str","replace","key","undefined","calculated","Function","targets","target","schema_index","getSchemaIndex","prop","hasOwnProperty","Vue","set","doTrigger","refs","Message","editMode","model_index","clearTimeout","setTimeout","trigger_url","forEach","setValueProps","schema_sub","schema","field_sub","success","duration","desc","error","info","document","getElementById","innerHTML","html","callFieldTrigger","is_sub","schema_sub_index","props","formType","fillData","item","applyDrag","arr","dragResult","removedIndex","addedIndex","payload","result","itemToAdd","splice","getTableMeta","dbSchema","tableMeta","getRelationData","relations","relation","filter","filterWithUser","idGenerator","Math","random","substr","evalstr","eval","isValid","_vm","this","_h","$createElement","_c","_self","attrs","label","meta","placeHolder","disabled","form","$$v","$set","expression","mixins","name","formTitle","loadConfig","viewMode","asyncMode","save_btn_text","formValidationCustomText","option","ui","dataID","showInfo","infoUrl","infoTitle","showID","subFormValidations","extraButtons","disableReset","withBackButton","computed","$props","url","submitUrl","page_id","schemaID","optionUrl","public","lang","labels","reduce","obj","i","$t","created","showInformationModal","initForm","watch","src","oldValue","handleReset","do_render","editModel","methods","createWithTemplate","isVisibleSection","col","showAbleFields","children","visibleUserRoles","Array","isArray","user","role","items","isShow","showableFieldFound","index","hidden","afterChange","$refs","$Notice","clearConfig","async","userCondition","configUrl","projectID","response","get","JSON","parse","console","user_condition","stringify","formSchema","formSchemas","initFromServerData","form_name","labelPosition","labelWidth","getOptionsData","setUiSchemaFormItem","setHiddenItemModel","setUserConditionValues","setCustomData","onReady","hasUserId","fillByUserField","param","$route","params","$data","source_hidden","source_disabled","validatePassCheck","value_","password_value","passwordConfirmError","pleaseReEnterYourPassword","$watch","handler","deep","setRule","passwordOption","confirm","edit_with_old_password","rules_for_current_password","pleaseEnterPasswordYouUCurrentlyUsing","r","push","checkEmpty","emptyErrorMsg","EmptyErrorMsg","_","val_","ck_value","isNaN","setMeta","subForm","s_index","getSchemaByModel","getSchemaRelationByModel","setSchemaByModel","subModel","subFormFillData","sindex","sitem","getSubFormData","subFormData","handleSubmit","setIdentityManual","isEmpty","validateWithSubForm","postData","validate","valid","title","informationIsIncomplete","trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder","subValid","sbValidation","isSubForm","onSuccess","successfullySaved","errorSaving","onError","catch","errorDesc","String","ed","resetFields","reset","setFromUserData","schemaItem","formCustomData","editData","setEditModel","setHiddenValues","values","cloneModel","getOptionsByRelations","getSelects","microserviceSettings","microserviceSetting","project_id","production_url","getSelectItem","selects","constructor","userConditions","userFilter","condition","log","microserviceID","microservice_id","pre_selects","getRelation","getFooterButtons","buttons","setAndSend","class","ref","staticClass","_v","_s","_e","_l","row","sectionRenderByTab","span","xs","sm","md","lg","srow","scol","subtype","refInFor","tag","staticStyle","on","close","extraButton","style","icon","$event","pleaseWait","save","fillInTheNewOne","button","inex","slot","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat"],"sourceRoot":""}