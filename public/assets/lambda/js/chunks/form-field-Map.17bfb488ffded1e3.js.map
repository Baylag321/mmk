{"version":3,"file":"assets/lambda/js/chunks/form-field-Map.17bfb488ffded1e3.js","mappings":"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","sources":["webpack:///../../lambda-builder/src/modules/dataform/elements/Map.vue","webpack:///../../lambda-builder/src/modules/dataform/elements/Map.vue?86d3","webpack:///../../lambda-builder/src/modules/dataform/elements/Map.vue?0e56","webpack:///../../lambda-builder/src/modules/dataform/elements/Map.vue?87b7"],"sourcesContent":["<template>\n    <div class=\"lambda-map-wrapper\">\n        <FormItem :label=label :prop=rule>\n            <div class=\"lambda-lat-lng\">\n                <Input v-model=\"center.lat\" :placeholder=\"lang.latitude\" @on-blur=\"updateLat\" />\n                <Input v-model=\"center.lng\" :placeholder=\"lang.longitude\" />\n\n            </div>\n            <span>{{lang.fromCityCenter}}: {{fromCityCenter}} км</span>\n            <div class=\"lambda-map\"></div>\n        </FormItem>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  props: [\"model\", \"rule\", \"label\", \"meta\"],\n  data() {\n    return {\n      map: null,\n      center: { lat: 47.9197668, lng: 106.9183483 },\n      zoom: 11,\n      marker: null, fromCityCenter:0\n    };\n  },\n\n  computed: {\n    coordinate() {\n      return this.model.form[this.model.component];\n    },\n      lang() {\n          const labels = ['fromCityCenter', 'latitude', 'longitude'\n          ];\n          return labels.reduce((obj, key, i) => {\n              obj[key] = this.$t('dataGrid.' + labels[i]);\n              return obj;\n          }, {});\n      },\n  },\n\n  watch: {\n    coordinate(value, oldValue) {\n      if ((oldValue && !value) || (value && !oldValue)) {\n        if(value){\n            let center = JSON.parse(value);\n            this.center = {\n                lat: parseFloat(center.lat),\n                lng: parseFloat(center.lng)\n            };\n            this.init();\n        }\n\n      }\n    }\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    init() {\n\n      this.map = new google.maps.Map(\n        this.$el.getElementsByClassName(\"lambda-map\")[0],\n        {\n          zoom: this.zoom,\n          center: this.center\n        }\n      );\n\n      this.marker = new google.maps.Marker({\n        map: this.map,\n        draggable: true,\n        animation: google.maps.Animation.DROP,\n        position: this.center\n      });\n\n      google.maps.event.addListener(this.map, \"click\", e => {\n        this.model.form[this.model.component] = JSON.stringify(e.latLng);\n        this.marker.setPosition(e.latLng);\n      });\n\n\n\n      this.marker.addListener(\"position_changed\", this.moveEvent.bind(this));\n    },\n      calcDistance(lat2, lon2) {\n        let lat1=47.918540;\n        let lon1=106.917658\n          let p = 0.017453292519943295;    // Math.PI / 180\n          let c = Math.cos;\n          let a = 0.5 - c((lat2 - lat1) * p)/2 +\n              c(lat1 * p) * c(lat2 * p) *\n              (1 - c((lon2 - lon1) * p))/2;\n\n          this.fromCityCenter=(12742 * Math.asin(Math.sqrt(a))).toFixed(2); // 2 * R; R = 6371 km\n      },\n\n    moveEvent() {\n      this.center = {\n        lat: this.marker\n          .getPosition()\n          .lat()\n          .toFixed(7),\n        lng: this.marker\n          .getPosition()\n          .lng()\n          .toFixed(7)\n      };\n\n      this.calcDistance(this.center.lat,this.center.lng);\n\n      let latlng = new google.maps.LatLng(this.center.lat, this.center.lng);\n      // this.map.setCenter(latlng);\n\n      this.model.form[this.model.component] = JSON.stringify(this.center);\n    },\n\n    updateLat(e) {\n      this.center.lat = parseFloat(e.target.value).toFixed(7);\n      let latlng = new google.maps.LatLng(this.center.lat, this.center.lng);\n      this.marker.setPosition(latlng);\n    },\n\n    updateLng(e) {\n      this.center.lng = parseFloat(e.target.value).toFixed(7);\n      let latlng = new google.maps.LatLng(this.center.lat, this.center.lng);\n      this.marker.setPosition(latlng);\n    }\n  }\n};\n</script>\n\n\n","import mod from \"-!../../../../../starter-apps/go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../starter-apps/go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=5702b6a4&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../starter-apps/go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lambda-map-wrapper\"},[_c('FormItem',{attrs:{\"label\":_vm.label,\"prop\":_vm.rule}},[_c('div',{staticClass:\"lambda-lat-lng\"},[_c('Input',{attrs:{\"placeholder\":_vm.lang.latitude},on:{\"on-blur\":_vm.updateLat},model:{value:(_vm.center.lat),callback:function ($$v) {_vm.$set(_vm.center, \"lat\", $$v)},expression:\"center.lat\"}}),_vm._v(\" \"),_c('Input',{attrs:{\"placeholder\":_vm.lang.longitude},model:{value:(_vm.center.lng),callback:function ($$v) {_vm.$set(_vm.center, \"lng\", $$v)},expression:\"center.lng\"}})],1),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.lang.fromCityCenter)+\": \"+_vm._s(_vm.fromCityCenter)+\" км\")]),_vm._v(\" \"),_c('div',{staticClass:\"lambda-map\"})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"names":["props","data","map","center","zoom","marker","computed","coordinate","this","model","form","component","watch","mounted","init","methods","google","maps","Map","Marker","draggable","animation","Animation","DROP","position","event","addListener","moveEvent","bind","lat","lng","calcDistance","JSON","stringify","updateLat","parseFloat","e","target","value","toFixed","setPosition","latlng","updateLng","_vm","_h","$createElement","_c","_self","staticClass","attrs","label","rule","lang","latitude","on","callback","$$v","$set","expression","_v","longitude","_s","fromCityCenter"],"sourceRoot":""}