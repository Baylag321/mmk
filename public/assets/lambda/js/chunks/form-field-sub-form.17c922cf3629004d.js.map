{"version":3,"file":"assets/lambda/js/chunks/form-field-sub-form.17c922cf3629004d.js","mappings":"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","sources":["webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/subFormMix.js","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/Form.vue?4464","webpack:///node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/Form.vue","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/Form.vue?d116","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/Form.vue","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/GridForm.vue?90b1","webpack:///node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/GridForm.vue","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/GridForm.vue?0d5e","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/subform/GridForm.vue"],"sourcesContent":["export default {\n\n    data() {\n        return {\n            preSource:[],\n            modal_grid_show: false,\n            user_condition:null\n        };\n    },\n    mounted() {\n        if(this.form.sourceGridUserCondition !== undefined && this.form.sourceGridUserCondition !== null && this.form.sourceGridUserCondition != \"\"){\n            this.user_condition = JSON.parse(this.form.sourceGridUserCondition)\n        }\n    },\n    methods: {\n        showAddSourceModal() {\n            this.modal_grid_show = true;\n            this.$modal.show(`grid-modal-${this.form.sourceGridID}`);\n        },\n        closeSourceModal() {\n            this.modal_grid_show = false;\n            this.$modal.hide(`grid-modal-${this.form.sourceGridID}`);\n        },\n        addFromPreSource(){\n            if(this.preSource && this.form.sourceGridTargetColumns){\n                this.preSource.forEach(preSource=>{\n                    this.createDataFromSource(preSource)\n                })\n            }\n            this.closeSourceModal();\n        },\n        createDataFromSource(row){\n\n\n            let clonedForm = _.cloneDeep(this.form);\n            let clonedFormModel = {};\n\n\n\n            clonedForm.schema.forEach(item => {\n                if (\n                    clonedForm.identity == item.model ||\n                    item.formType == null\n                ) {\n                    return;\n                }\n\n                if (\n                    clonedForm.timestamp &&\n                    (item.model == \"created_at\" || item.model == \"updated_at\")\n                ) {\n                    return;\n                }\n\n\n            });\n\n            this.form.sourceGridTargetColumns.forEach(source=>{\n                Vue.set(clonedFormModel, source.selfColumn, row[source.sourceColumn]);\n            });\n\n            let listItem = {\n                form: clonedForm,\n                model: clonedFormModel\n            };\n\n\n            if (this.model.form[this.model.component] == undefined) {\n                this.model.form[this.model.component] = [];\n            }\n            if(this.form.sourceUniqueField !== \"\" && this.form.sourceUniqueField !== undefined && this.form.sourceUniqueField !== null){\n\n               let savedIndex = this.model.form[this.model.component].findIndex(row=>row[this.form.sourceUniqueField] === clonedFormModel[this.form.sourceUniqueField]);\n\n               if(savedIndex !== -1){\n                   return\n               }\n            }\n            this.model.form[this.model.component].push(clonedFormModel);\n            this.listData.push(listItem);\n            this.rowLength = this.model.form[this.model.component].length;\n\n        },\n        onRowSelect(rows){\n            this.preSource = rows;\n        },\n        sourceGridUrl(){\n\n            if(window.init.microserviceSettings) {\n                let si = window.init.microserviceSettings.findIndex(set=>set.project_id == this.form.sourceMicroserviceID);\n\n                if(si >= 0){\n                    return  window.init.microserviceSettings[si].production_url;\n                } else {\n                    return \"\"\n                }\n            } else {\n                return \"\"\n            }\n        },\n\n    }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"subform-grid sub-modal-form\",style:(_vm.subStyle)},[(!_vm.form.min_height && !_vm.form.disableCreate)?_c('div',{staticClass:\"subform-header\"},[_vm._v(\"\\n            \"+_vm._s(_vm.form.name)+\"\\n            \"),_c('Button',{staticClass:\"sub-form-add-btn\",attrs:{\"shape\":\"circle\",\"type\":\"success\",\"size\":\"small\",\"icon\":\"md-add\"},on:{\"click\":_vm.add}})],1):_vm._e(),_vm._v(\" \"),(_vm.form.min_height ? true: this.listData.length >= 1)?_c('table',{staticClass:\"sub-form-grid\",attrs:{\"border\":\"1\"}},[_c('thead',[_c('tr',[(_vm.form.showRowNumber)?_c('th',{staticClass:\"row-number\"},[_vm._v(\"ДД\")]):_vm._e(),_vm._v(\" \"),_vm._l((_vm.form.schema),function(item){return (item.label != '' && !item.hidden)?_c('th',{key:item.index,on:{\"click\":function($event){return _vm.sort(item)}}},[_vm._v(\"\\n                    \"+_vm._s(item.label)+\" \"),_c('i',{staticClass:\"ti-exchange-vertical\"})]):_vm._e()}),_vm._v(\" \"),_c('th',{staticClass:\"action\"},[_vm._v(\"...\")])],2)]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.listData),function(item,index){return _c('grid-form',{key:index,attrs:{\"f\":item.form,\"model\":item.model,\"editMode\":_vm.editMode,\"relations\":_vm.relations,\"formula\":_vm.formula}},[_c('template',{slot:\"action\"},[(!_vm.form.disableEdit)?_c('a',{staticClass:\"sub-edit\",attrs:{\"href\":\"javscript:void(0)\"},on:{\"click\":function (){ return _vm.edit(index); }}},[_c('Icon',{attrs:{\"type\":\"md-create\"}})],1):_vm._e(),_vm._v(\" \"),(!_vm.form.disableDelete)?_c('a',{attrs:{\"href\":\"javscript:void(0)\"},on:{\"click\":function (){ return _vm.remove(index); }}},[_c('Icon',{attrs:{\"type\":\"ios-trash\"}})],1):_vm._e()]),_vm._v(\" \"),(_vm.form.showRowNumber)?_c('template',{slot:\"rowNumber\"},[_c('span',[_vm._v(_vm._s(index + 1))])]):_vm._e()],2)}),1),_vm._v(\" \"),(_vm.hasEq)?_c('tfoot',[_c('tr',[_vm._l((_vm.equationData),function(item,index){return _c('td',{key:index},[(item.preStaticWord!=null && item.preStaticWord!='')?_c('span',[_vm._v(\" \"+_vm._s(item.preStaticWord)+\" \")]):_vm._e(),_vm._v(\" \"),(item.hasEquation)?_c('span',[_vm._v(_vm._s(item.data.toLocaleString()))]):_vm._e(),_vm._v(\" \"),(item.prefix!=null && item.prefix!='')?_c('span',[_vm._v(\" \"+_vm._s(item.prefix))]):_vm._e()])}),_vm._v(\" \"),_c('td')],2)]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.form.min_height)?_c('a',{staticClass:\"sub-grid-add\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.add}},[_c('Icon',{attrs:{\"type\":\"plus\"}}),_vm._v(\"\\n            \"+_vm._s(_vm.lang.save)+\"\\n        \")],1):_vm._e(),_vm._v(\" \"),_c('Modal',{attrs:{\"min-width\":200,\"min-height\":100,\"draggable\":true,\"footer-hide\":true,\"title\":_vm.form.name,\"width\":\"800\",\"height\":\"70%\"},model:{value:(_vm.modal_show),callback:function ($$v) {_vm.modal_show=$$v},expression:\"modal_show\"}},[_c('section',{staticClass:\"form-modal\"},[_c('div',{staticClass:\"form-body\"},[(_vm.modal_show)?_c('dataform',{ref:\"form\",attrs:{\"schemaID\":_vm.form.formId,\"do_render\":_vm.modal_show,\"editMode\":_vm.editIndex >= 0 ? true : false,\"isSubForm\":true,\"onSuccess\":_vm.onSuccess,\"url\":_vm.url,\"onReady\":_vm.formReady,\"onError\":_vm.onError}}):_vm._e()],1)])]),_vm._v(\" \"),_c('paper-modal',{staticClass:\"form-modal\",attrs:{\"name\":(\"grid-modal-\" + (_vm.form.sourceGridID)),\"min-width\":200,\"min-height\":100,\"pivot-y\":0.5,\"adaptive\":true,\"reset\":true,\"draggable\":true,\"resizable\":true,\"draggable\":\".form-tool\",\"width\":\"800\",\"height\":\"70%\"}},[_c('section',{staticClass:\"form-modal source-grid\"},[_c('div',{staticClass:\"form-tool \"},[_c('h4',[_vm._v(_vm._s(_vm.form.sourceGridModalTitle))]),_vm._v(\" \"),_c('div',{staticClass:\"form-tool-actions\"},[_c('a',{attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.closeSourceModal}},[_c('i',{staticClass:\"ti-close\"})])])]),_vm._v(\" \"),(_vm.modal_grid_show)?_c('div',{staticClass:\"form-body\"},[(_vm.form.sourceGridTitle && _vm.form.sourceGridDescription)?_c('div',{staticClass:\"source-grid-description\"},[_c('h3',[_vm._v(\"\\n                            \"+_vm._s(_vm.form.sourceGridTitle)+\"\\n                        \")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.form.sourceGridDescription)}})]):_vm._e(),_vm._v(\" \"),_c('datagrid',{attrs:{\"schemaID\":_vm.form.sourceGridID,\"url\":_vm.sourceGridUrl(),\"onRowSelect\":_vm.onRowSelect,\"user_condition\":_vm.user_condition,\"paginate\":50,\"hasSelection\":true,\"permissions\":{\n                          c:false,\n                          r:true,\n                          u:false,\n                          d:false,\n                      }}}),_vm._v(\" \"),_c('div',{staticClass:\"add-from-pre-source\"},[_c('Button',{staticClass:\"sub-form-add-btn\",attrs:{\"shape\":\"circle\",\"type\":\"primary\",\"size\":\"small\",\"disabled\":_vm.preSource.length >= 1,\"icon\":\"md-add\"},on:{\"click\":_vm.addByFrom}},[_vm._v(\"Шинээр бүртгэх\")]),_vm._v(\" \"),_c('Button',{staticClass:\"sub-form-add-btn\",attrs:{\"shape\":\"circle\",\"type\":\"success\",\"size\":\"small\",\"disabled\":_vm.preSource.length == 0,\"icon\":\"md-add\"},on:{\"click\":_vm.addFromPreSource}},[_vm._v(\"Сонгох\")])],1)],1):_vm._e()])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"subform-grid sub-modal-form\" :style=\"subStyle\">\n        <div class=\"subform-header\" v-if=\"!form.min_height && !form.disableCreate\">\n            {{ form.name }}\n            <Button shape=\"circle\" type=\"success\" size=\"small\" @click=\"add\" icon=\"md-add\"\n                    class=\"sub-form-add-btn\"></Button>\n        </div>\n        <table class=\"sub-form-grid\" border=\"1\" v-if=\"form.min_height ? true: this.listData.length >= 1\">\n            <thead>\n            <tr>\n                <th class=\"row-number\" v-if=\"form.showRowNumber\">ДД</th>\n                <th @click=\"sort(item)\" v-for=\"item in form.schema\" v-if=\"item.label != '' && !item.hidden\"\n                    :key=\"item.index\">\n                    {{ item.label }} <i class=\"ti-exchange-vertical\"/>\n                </th>\n                <th class=\"action\">...</th>\n            </tr>\n            </thead>\n\n            <tbody>\n\n            <grid-form v-for=\"(item, index) in listData\"\n                       :key=\"index\"\n                       :f=\"item.form\"\n                       :model=\"item.model\"\n                       :editMode=\"editMode\"\n                       :relations=\"relations\"\n                       :formula=\"formula\">\n                <template slot=\"action\">\n                    <a href=\"javscript:void(0)\" @click=\"()=>edit(index)\" class=\"sub-edit\" v-if=\"!form.disableEdit\">\n                        <Icon type=\"md-create\"/>\n                    </a>\n                    <a href=\"javscript:void(0)\" @click=\"()=>remove(index)\" v-if=\"!form.disableDelete\">\n                        <Icon type=\"ios-trash\"/>\n                    </a>\n                </template>\n                <template slot=\"rowNumber\" v-if=\"form.showRowNumber\">\n                    <span>{{ index + 1 }}</span>\n                </template>\n            </grid-form>\n            </tbody>\n            <tfoot v-if=\"hasEq\">\n            <tr>\n                <td v-for=\"(item, index) in equationData\" :key=\"index\">\n                    <span v-if=\"item.preStaticWord!=null && item.preStaticWord!=''\"> {{ item.preStaticWord }} </span>\n                    <span v-if=\"item.hasEquation\">{{ item.data.toLocaleString() }}</span>\n                    <span v-if=\"item.prefix!=null && item.prefix!=''\"> {{ item.prefix }}</span>\n                </td>\n                <td>\n                </td>\n            </tr>\n            </tfoot>\n        </table>\n        <a class=\"sub-grid-add\" href=\"javascript:void(0)\" @click=\"add\" v-if=\"form.min_height\">\n            <Icon type=\"plus\"></Icon>\n            {{ lang.save }}\n        </a>\n\n<!--        <paper-modal-->\n<!--            :name=\"`form-modal-${form.formId}`\"-->\n<!--            class=\"form-modal\"-->\n<!--            :min-width=\"200\"-->\n<!--            :min-height=\"100\"-->\n<!--            :pivot-y=\"0.5\"-->\n<!--            :adaptive=\"true\"-->\n<!--            :reset=\"true\"-->\n<!--            :draggable=\"true\"-->\n<!--            :resizable=\"true\"-->\n<!--            draggable=\".form-tool\"-->\n<!--            width=\"800\"-->\n<!--            height=\"70%\"-->\n<!--        >-->\n        <Modal\n            :min-width=\"200\"\n            :min-height=\"100\"\n\n\n            :draggable=\"true\"\n\n            :footer-hide=\"true\"\n            :title=\"form.name\"\n            width=\"800\"\n            height=\"70%\"\n            v-model=\"modal_show\"\n\n        >\n            <section class=\"form-modal\">\n<!--                <div class=\"form-tool\">-->\n\n<!--                    <h4>{{ form.name }}</h4>-->\n<!--                    <div class=\"form-tool-actions\">-->\n<!--                        <a href=\"javascript:void(0)\" @click=\"closeModal\">-->\n<!--                            <i class=\"ti-close\"></i>-->\n<!--                        </a>-->\n<!--                    </div>-->\n<!--                </div>-->\n\n                <div class=\"form-body\">\n\n                    <dataform ref=\"form\" v-if=\"modal_show\" :schemaID=\"form.formId\"\n                              :do_render=\"modal_show\"\n                              :editMode=\"editIndex >= 0 ? true : false\"\n                              :isSubForm=\"true\"\n                              :onSuccess=\"onSuccess\"\n                              :url=\"url\"\n                              :onReady=\"formReady\"\n                              :onError=\"onError\"></dataform>\n                </div>\n            </section>\n        </Modal>\n<!--        </paper-modal>-->\n\n        <paper-modal\n            :name=\"`grid-modal-${form.sourceGridID}`\"\n            class=\"form-modal\"\n            :min-width=\"200\"\n            :min-height=\"100\"\n            :pivot-y=\"0.5\"\n            :adaptive=\"true\"\n            :reset=\"true\"\n            :draggable=\"true\"\n            :resizable=\"true\"\n            draggable=\".form-tool\"\n            width=\"800\"\n            height=\"70%\"\n        >\n            <section class=\"form-modal source-grid\">\n                <div class=\"form-tool \">\n\n                    <h4>{{ form.sourceGridModalTitle }}</h4>\n                    <div class=\"form-tool-actions\">\n                        <a href=\"javascript:void(0)\" @click=\"closeSourceModal\">\n                            <i class=\"ti-close\"></i>\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"form-body\" v-if=\"modal_grid_show\">\n\n                    <div v-if=\"form.sourceGridTitle && form.sourceGridDescription\" class=\"source-grid-description\">\n                        <h3>\n                            {{form.sourceGridTitle}}\n                        </h3>\n                        <p v-html=\"form.sourceGridDescription\">\n\n                        </p>\n                    </div>\n                    <datagrid\n                        :schemaID=\"form.sourceGridID\"\n                        :url=\"sourceGridUrl()\"\n                        :onRowSelect=\"onRowSelect\"\n                        :user_condition=\"user_condition\"\n                        :paginate=\"50\"\n                        :hasSelection=\"true\"\n                        :permissions=\"{\n                          c:false,\n                          r:true,\n                          u:false,\n                          d:false,\n                      }\"\n                    />\n                    <div class=\"add-from-pre-source\">\n                        <Button shape=\"circle\" type=\"primary\" size=\"small\" @click=\"addByFrom\" :disabled=\"preSource.length >= 1\" icon=\"md-add\"\n                                class=\"sub-form-add-btn\">Шинээр бүртгэх</Button>\n                        <Button shape=\"circle\" type=\"success\" size=\"small\" @click=\"addFromPreSource\" :disabled=\"preSource.length == 0\" icon=\"md-add\"\n                                class=\"sub-form-add-btn\">Сонгох</Button>\n                    </div>\n                </div>\n            </section>\n        </paper-modal>\n    </div>\n</template>\n\n<script>\nimport {element} from \"../index\";\nimport GridForm from \"./GridForm\";\nimport subFormMix from \"./subFormMix\";\nconst DataForm = () => import(/* webpackChunkName: \"Dataform-el\" */'../../Dataform');\nexport default {\n    props: [\"form\", \"model\", \"editMode\", \"relations\", \"formula\", \"url\"],\n    mixins: [subFormMix],\n    components: {\n        \"grid-form\": GridForm,\n        \"dataform\": DataForm\n    },\n    mounted() {\n        this.equationRenderer();\n\n        this.form.schema.forEach(field => {\n            field.disabled = true;\n        })\n\n    },\n    computed: {\n            lang() {\n                const labels = ['pleaseCompleteFirstLine', ];\n                return labels.reduce((obj, key, i) => {\n                    obj[key] = this.$t('dataForm.' + labels[i]);\n                    return obj;\n                }, {});\n            },\n\n        subStyle() {\n            if (this.form.min_height) {\n                return {\n                    minHeight: this.form.min_height + 'px',\n                    background: '#f3f4f5'\n                }\n            } else {\n                return undefined;\n            }\n        },\n        Lang() {\n            const labels = [ 'add',];\n            return labels.reduce((obj, key, i) => {\n                obj[key] = this.$t('dataForm.' + labels[i]);\n                return obj;\n            }, {});\n        },\n    },\n    watch: {\n        listData: {\n            handler: function (curr, old) {\n                if (this.hasEq) {\n                    this.equationData.map(eq => {\n                        if (eq.hasEquation) {\n                            eq.data = -1;\n                            let count = 0;\n                            switch (eq.equation) {\n                                case \"SUM\": {\n                                    eq.data = 0;\n                                    curr.map(it => {\n                                        eq.data += Number(isNaN(parseInt(it.model[eq.model], 10)) ? 0 : it.model[eq.model]);\n                                    });\n                                    break;\n                                }\n                                case \"COUNT\": {\n                                    eq.data = 0;\n                                    curr.map(it => {\n                                        eq.data += Number(1);\n                                    });\n                                    break;\n                                }\n                                case \"MIN\": {\n                                    curr.map(it => {\n                                        if (eq.data == -1) {\n                                            eq.data = it.model[eq.model];\n                                        } else {\n                                            eq.data = Math.min(eq.data, it.model[eq.model]);\n                                        }\n                                    });\n                                    break;\n                                }\n                                case \"MAX\": {\n                                    eq.data = 0;\n                                    curr.map(it => {\n                                        eq.data = Math.max(eq.data, it.model[eq.model]);\n                                    });\n                                    break;\n                                }\n                                case \"AVG\": {\n                                    eq.data = 0;\n                                    curr.map(it => {\n                                        count++;\n                                        eq.data += Number(it.model[eq.model]);\n                                    });\n                                    eq.data = Number(eq.data / count);\n                                    break;\n                                }\n                            }\n                        }\n                    });\n                }\n            },\n            deep: true\n        }\n    },\n    data() {\n        return {\n            listData: [],\n            equationData: [],\n            currentSortDir: 'asc',\n            hasEq: false,\n            modal_show: false,\n            editIndex: -1,\n\n        };\n    },\n    methods: {\n        showAddModal() {\n            this.modal_show = true;\n            // this.$modal.show(`form-modal-${this.form.formId}`);\n        },\n        closeModal() {\n            this.modal_show = false;\n            this.editIndex = -1;\n            // this.$modal.hide(`form-modal-${this.form.formId}`);\n        },\n        formReady(formData, subSchema) {\n\n            let parentFieldIndex = subSchema.findIndex(field => field.model == this.form.parent);\n\n            if (parentFieldIndex > 0) {\n                subSchema[parentFieldIndex].hidden = true;\n            }\n\n            if (this.editIndex >= 0) {\n                this.$nextTick(() => {\n                    this.$refs.form.editModel(this.listData[this.editIndex].model[this.form.identity], {...this.listData[this.editIndex].model});\n                });\n            }\n\n\n        },\n        onError() {\n\n        },\n        onSuccess(data) {\n\n            console.log(data)\n            if (this.editIndex >= 0) {\n\n                Object.keys(data).forEach(itemKey => {\n                    if (\n                        this.listData[this.editIndex].form.identity == itemKey\n                    ) {\n                        return;\n                    }\n\n                    if (\n                        (itemKey == \"created_at\" || itemKey == \"updated_at\")\n                    ) {\n                        return;\n                    }\n\n                    Vue.set(this.listData[this.editIndex].model, itemKey, data[itemKey]);\n\n                });\n\n            } else {\n                let clonedForm = _.cloneDeep(this.form);\n                let clonedFormModel = {};\n                Object.keys(data).forEach(key => {\n                    let schemaIndex = clonedForm.schema.findIndex(schema => schema.model == 'key')\n                    if (schemaIndex >= 0) {\n                        if (\n                            clonedForm.identity == clonedForm.schema[schemaIndex].model ||\n                            clonedForm.schema[schemaIndex].formType == null\n                        ) {\n                            return;\n                        }\n\n                        if (\n                            clonedForm.timestamp &&\n                            (clonedForm.schema[schemaIndex].model == \"created_at\" || clonedForm.schema[schemaIndex].model == \"updated_at\")\n                        ) {\n                            return;\n                        }\n                    }\n\n                    Vue.set(clonedFormModel, key, data[key]);\n                });\n\n                let listItem = {\n                    form: clonedForm,\n                    model: clonedFormModel\n                };\n\n                let subItems = this.model.form[this.model.component];\n\n                if (subItems == undefined) {\n                    subItems = [];\n                }\n                subItems.push(clonedFormModel);\n                Vue.set(this.model.form, this.model.component, subItems);\n\n                this.listData.push(listItem);\n            }\n\n\n            this.closeModal();\n        },\n        element: element,\n        checkAddable() {\n            return new Promise((resolve, reject) => {\n                let obj = this.listData[this.listData.length - 1];\n                if (obj) {\n                    let hasValue = false;\n                    let lastModel = obj.model;\n\n                    for (let key in lastModel) {\n                        if (\n                            typeof lastModel[key] != undefined &&\n                            lastModel[key] != null &&\n                            lastModel[key] != \"\" &&\n                            lastModel[key] != false\n                        ) {\n                            hasValue = true;\n                        }\n                    }\n                    if (hasValue) {\n                        resolve(true)\n                    } else {\n                        alert(this.lang.pleaseCompleteFirstLine);\n                        reject(false);\n                    }\n                } else {\n                    resolve(true);\n                }\n            });\n        },\n        addSubForm() {\n            let clonedForm = _.cloneDeep(this.form);\n            let clonedFormModel = {};\n            clonedForm.schema.forEach(item => {\n                if (\n                    clonedForm.identity == item.model ||\n                    item.formType == null\n                ) {\n                    return;\n                }\n\n                if (\n                    clonedForm.timestamp &&\n                    (item.model == \"created_at\" || item.model == \"updated_at\")\n                ) {\n                    return;\n                }\n\n                Vue.set(clonedFormModel, item.model, item.default);\n            });\n\n            let listItem = {\n                form: clonedForm,\n                model: clonedFormModel\n            };\n\n\n            if (this.model.form[this.model.component] == undefined) {\n                this.model.form[this.model.component] = [];\n            }\n            this.model.form[this.model.component].push(clonedFormModel);\n            this.listData.push(listItem);\n        },\n        add() {\n            if(this.form.addFromGrid && this.form.sourceGridID){\n                this.showAddSourceModal();\n            } else {\n\n                this.addByFrom();\n            }\n        },\n        addByFrom(){\n            this.closeSourceModal();\n            this.editIndex = -1;\n            this.showAddModal()\n        },\n        fillData() {\n            this.listData = [];\n\n            setTimeout(() => {\n\n                this.model.form[this.model.component].forEach(item => {\n                    let listItem = {\n                        form: _.cloneDeep(this.form),\n                        model: item\n                    };\n                    this.listData.push(listItem);\n                });\n\n                // console.log(this.model.form[this.model.component]);\n\n            }, 100);\n        },\n        equationRenderer() {\n            this.equationData = [];\n            this.form.schema.map(item => {\n                if (item.label != '' && !item.hidden) {\n                    if (item.hasEquation) this.hasEq = true;\n                    this.equationData.push({\n                        hasEquation: item.hasEquation,\n                        equation: item.equations,\n                        prefix: item.prefix,\n                        model: item.model,\n                        preStaticWord: item.preStaticWord,\n                        data: 0\n                    });\n                }\n            });\n        },\n        edit(index) {\n            this.model.form[this.form.model][index];\n\n            this.editIndex = index;\n            this.showAddModal();\n\n        },\n        remove(index) {\n            this.model.form[this.form.model].splice(index, 1);\n            this.listData.splice(index, 1);\n        },\n\n        reset() {\n            this.model.form[this.form.model] = [];\n            this.listData = [];\n        },\n\n        sort(item) {\n            let sortStatus = 1;\n            this.currentSortDir = this.currentSortDir === 'asc' ? 'desc' : 'asc';\n            this.currentSort = this.currentSortDir === 'desc' ? -1 : 1;\n            this.currentSort = item.model;\n            this.listData.sort((a, b) => {\n                if (this.currentSortDir === 'desc') sortStatus = -1;\n                if (a.model[this.currentSort] < b.model[this.currentSort]) return -1 * sortStatus;\n                if (a.model[this.currentSort] > b.model[this.currentSort]) return 1 * sortStatus;\n                return 0;\n            });\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=b6c5031c&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[(_vm.f.showRowNumber)?_c('td',{staticClass:\"row-number\"},[_vm._t(\"rowNumber\")],2):_vm._e(),_vm._v(\" \"),_vm._l((_vm.f.schema),function(item){return (typeof item.formType !== 'undefined' && item.formType !== null && item.model && _vm.isShowAble(item.model) && item.model!=_vm.f.identity && item.model!=_vm.f.parent && item.model!='updated_at'&& item.model!='created_at')?_c('td',{key:item.index},[(_vm.model)?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"model\":{form: _vm.model, component: item.model},\"size\":\"small\",\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"meta\":_vm.setMeta(item),\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1):_vm._e()}),_vm._v(\" \"),_c('td',{staticClass:\"action\"},[_vm._t(\"action\")],2)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <tr>\n        <td class=\"row-number\" v-if=\"f.showRowNumber\">\n            <slot name=\"rowNumber\"></slot>\n        </td>\n        <td v-for=\"item in f.schema\"\n            v-if=\"typeof item.formType !== 'undefined' && item.formType !== null && item.model && isShowAble(item.model) && item.model!=f.identity && item.model!=f.parent && item.model!='updated_at'&& item.model!='created_at'\"\n            :key=\"item.index\">\n<!--            {{item.hidden}}-->\n            <!--{{item.model}}-->\n            <component :is=\"element(item.formType)\"\n                       :model=\"{form: model, component: item.model}\"\n                       v-if=\"model\"\n                       size=\"small\"\n                       :label=\"item.label ? item.label : `[${item.model}]`\"\n                       :meta=\"setMeta(item)\"\n                       :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                       :relation_data=\"getRelation(item)\">\n            </component>\n        </td>\n        <td class=\"action\" >\n            <slot name=\"action\"></slot>\n        </td>\n    </tr>\n</template>\n\n<script>\n    import {element} from \"../index\";\n    import {getRule} from \"../../rule\";\n    import {doFormula, doTrigger} from \"../../utils/formula_and_trigger.js\";\n    import {getRelationData} from \"../../utils/helpers\";\n\n    export default {\n        props: [\"f\", \"model\", \"editMode\", \"relations\", \"formula\", \"schema\"],\n        created() {\n\n            this.f.data = {};\n            this.f.schema.forEach(item => {\n\n                if (this.f.identity == item.model || item.formType == null) {\n                    return;\n                }\n                if (\n                    this.f.timestamp &&\n                    (item.model == \"created_at\" || item.model == \"updated_at\")\n                ) {\n                    return;\n                }\n                if (this.editMode) {\n                    this.setModel(item.model, this.model[item.model], item.formType);\n                } else {\n                    this.setModel(item.model, item.default, item.formType);\n                }\n\n                this.$watch(\"model.\" + item.model, {\n                    handler: (value, oldValue) => {\n                        this.afterChange(item.model, value, oldValue);\n                    },\n                    deep: true\n                });\n            });\n        },\n\n        methods: {\n            isShowAble(model) {\n                if(this.schema){\n                    let index = this.schema.findIndex(item => item.model == model);\n                    if(index >= 0){\n                        return !this.schema[index].hidden;\n                    }\n                    return false\n                }\n                return true;\n\n\n            },\n            element: element,\n            setModel(name, value, type) {\n                switch (type) {\n                    case \"Switch\":\n                        let val = false;\n                        if (value == \"true\" || value == 1) {\n                            val = true;\n                        }\n                        this.model[name] = val_;\n                        this.f.data[name] = val_;\n                        break;\n                    case \"Checkbox\":\n                        let val_ = 0;\n                        if (value == \"true\" || value == 1) {\n                            val_ = 1;\n                        }\n                        this.model[name] = val_;\n                        this.f.data[name] = val_;\n                        break;\n\n                    default:\n                        this.f.data[name] = value;\n                }\n            },\n\n            setMeta(item) {\n                delete item[\"table\"];\n                delete item[\"rules\"];\n                delete item[\"label\"];\n                delete item[\"span\"];\n                delete item[\"default\"];\n                // item.schemaId = this.$route.params.id;\n                // if (this.$route.params.form) {\n                //     console.log(this.$route.params.form)\n                //     item.schemaID = this.$route.params.form;\n                // }\n                // else {\n                //     console.log(this.$route.params.id)\n                //     item.schemaID = this.$route.params.id;\n                // }\n                return item;\n            },\n\n            getSchemaIndex(model) {\n                return this.f.schema.findIndex(item => item.model == model);\n            },\n\n            afterChange(model, val, oldValue) {\n                doTrigger(model, val, this.model, this.f.schema, this.$refs, this.$Notice);\n                doFormula(this.formula, model, this.model, this.f.schema, this.f.rule, this.f.model);\n            },\n\n            getSchemaRelationByModel(model) {\n                let index = this.f.schema.findIndex(item => item.model == model);\n                if (index >= 0)\n                    return getRelationData(this.f.schema[index], this.relations)\n                else\n                    return null\n            },\n            getRelation(item) {\n                return getRelationData(item, this.relations)\n            }\n        }\n    };\n</script>\n\n","import mod from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./GridForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./GridForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GridForm.vue?vue&type=template&id=3d944138&\"\nimport script from \"./GridForm.vue?vue&type=script&lang=js&\"\nexport * from \"./GridForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["data","preSource","modal_grid_show","user_condition","mounted","undefined","this","form","sourceGridUserCondition","JSON","parse","methods","showAddSourceModal","$modal","show","sourceGridID","closeSourceModal","hide","addFromPreSource","sourceGridTargetColumns","forEach","createDataFromSource","row","clonedForm","_","cloneDeep","clonedFormModel","schema","item","identity","model","formType","timestamp","source","Vue","set","selfColumn","sourceColumn","listItem","component","sourceUniqueField","savedIndex","findIndex","push","listData","rowLength","length","onRowSelect","rows","sourceGridUrl","window","init","microserviceSettings","si","project_id","sourceMicroserviceID","production_url","props","mixins","components","GridForm","equationRenderer","field","disabled","computed","lang","labels","reduce","obj","key","i","$t","subStyle","min_height","minHeight","background","Lang","watch","handler","curr","old","hasEq","equationData","map","eq","hasEquation","count","equation","it","Number","isNaN","parseInt","Math","min","max","deep","currentSortDir","modal_show","editIndex","showAddModal","closeModal","formReady","formData","subSchema","parentFieldIndex","parent","hidden","$nextTick","$refs","editModel","onError","onSuccess","console","log","Object","keys","itemKey","schemaIndex","subItems","element","checkAddable","Promise","resolve","reject","hasValue","lastModel","alert","pleaseCompleteFirstLine","addSubForm","default","add","addFromGrid","addByFrom","fillData","setTimeout","label","equations","prefix","preStaticWord","edit","index","remove","splice","reset","sort","sortStatus","currentSort","a","b","_vm","_h","$createElement","_c","_self","staticClass","style","disableCreate","_e","_v","_s","name","attrs","on","_l","$event","editMode","relations","formula","slot","disableEdit","disableDelete","toLocaleString","save","value","callback","$$v","expression","ref","formId","url","sourceGridModalTitle","sourceGridTitle","sourceGridDescription","domProps","c","r","u","d","f","_t","isShowAble","tag","setMeta","getSchemaRelationByModel","getRelation"],"sourceRoot":""}