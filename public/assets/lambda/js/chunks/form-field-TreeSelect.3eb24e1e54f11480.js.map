{"version":3,"file":"assets/lambda/js/chunks/form-field-TreeSelect.3eb24e1e54f11480.js","mappings":"iHAAA,ICYA,oBAKE,OAFF,sBAAI,OAAJ,qBAEA,iBAYI,OAXA,EAAJ,wBACA,uBACM,EAAN,WAEA,iCACA,cAEA,cAEI,EAAJ,cAEA,MAGA,MChC2Q,EDgC3Q,CAEE,MAAF,2DAEE,KAJF,WAKI,MAAJ,CACM,SAAN,GACM,SAAN,IAGE,SAAF,CACI,UADJ,WAEM,OAAN,wCAGE,MAAF,CACI,cADJ,WAEM,KAAN,WAEI,UAJJ,WAKM,KAAN,WACM,KAAN,YAIE,QAAF,CACI,QADJ,WACM,IAAN,OACM,GAAN,mBACQ,GAAR,8BACU,IAAV,yCAAY,YAAZ,sBACU,EAAV,iBAYY,OAXA,EAAZ,oEACA,uBACc,EAAd,WAGA,yCACA,cAEA,cAEY,EAAZ,cACA,KAGU,IAAV,6BAIU,YAAV,WACY,EAAZ,aACA,SAGU,KAAV,iBAGQ,KAAR,aAII,SApCJ,SAoCA,GACA,aACA,4DE7EA,SAXgB,E,SAAA,GACd,GHRW,WAAa,IAAIA,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQN,EAAIO,MAAM,KAAOP,EAAIQ,OAAO,CAACJ,EAAG,MAAM,CAACK,YAAY,eAAe,CAAGT,EAAIU,QAAuFV,EAAIW,KAAlFP,EAAG,OAAO,CAACE,MAAM,CAAC,KAAON,EAAIY,UAAUC,GAAG,CAAC,mBAAmBb,EAAIc,aAAsB,OAClR,IGUpB,EACA,KACA,KACA,MAI8B","sources":["webpack:///../../vue/dataform/src/elements/TreeSelect.vue?c45e","webpack:///../../vue/dataform/src/elements/TreeSelect.vue","webpack:///../../vue/dataform/src/elements/TreeSelect.vue?3dd2","webpack:///../../vue/dataform/src/elements/TreeSelect.vue?7e2d"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('FormItem',{attrs:{\"label\":_vm.label,\"prop\":_vm.rule}},[_c('div',{staticClass:\"tree-select\"},[(!_vm.loading)?_c('tree',{attrs:{\"data\":_vm.treeData},on:{\"on-select-change\":_vm.selected}}):_vm._e()],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <FormItem :label=label :prop=rule>\n        <div class=\"tree-select\">\n            <tree :data=\"treeData\" @on-select-change=\"selected\" v-if=\"!loading\"></tree>\n<!--            <Cascader :data=\"treeData\" v-model=\"model.form[model.component]\"></Cascader>-->\n\n<!--            {{treeData}}-->\n        </div>\n    </FormItem>\n</template>\n<script>\n\n   const getChildren = (rows, parentId, selectedValue)=>{\n\n\n        let filtred = rows.filter(row=>row.parent_value == parentId)\n\n        return filtred.map(row=>{\n            row.children = getChildren(rows, row.value, selectedValue);\n            if(row.children.length >= 1){\n                row.expand = true\n            }\n            if(`${row.value}` == `${selectedValue}`)\n                row.selected = true;\n            else\n                row.selected = false;\n\n            row.title = row.label\n\n            return row\n        })\n    };\n    export default {\n\n        props: [\"model\", \"rule\", \"label\", \"meta\", \"disabled\", \"relation_data\"],\n\n        data(){\n          return {\n              treeData:[],\n              loading:false\n          }\n        },\n        computed: {\n            treeValue(){\n                return this.model.form[this.model.component]\n            }\n        },\n        watch:{\n            relation_data(){\n               this.options();\n            },\n            treeValue(){\n                this.loading = true\n               this.options();\n            },\n        },\n\n        methods: {\n            options() {\n                if(this.relation_data){\n                    if (this.relation_data.length >= 1) {\n                        let filtred = this.relation_data.filter(row=>row[\"parent_value\"] === undefined);\n                        filtred.map(row=>{\n                            row.children = getChildren(this.relation_data, row.value, this.model.form[this.model.component]);\n                            if(row.children.length >= 1){\n                                row.expand = true\n                            }\n\n                            if(row.value == this.model.form[this.model.component])\n                                row.selected = true;\n                            else\n                                row.selected = false;\n\n                            row.title = row.label\n                            return row\n                        });\n\n                       Vue.set(this.$data, \"treeData\", filtred);\n\n                        // this.$set(this.$data, 'treeData', filtred);\n\n                        setTimeout(()=>{\n                            this.loading = false\n                        }, 10)\n\n                    } else {\n                        this.treeData = []\n                    }\n                } else {\n                    this.treeData = []\n                }\n\n            },\n            selected(e){\n                if(e.length >= 1)\n                    Vue.set(this.model.form, this.model.component, e[0].value);\n            },\n\n        }\n    };\n</script>\n","import mod from \"-!../../../../starter-apps/starter-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../starter-apps/starter-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../starter-apps/starter-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../starter-apps/starter-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TreeSelect.vue?vue&type=template&id=502a72b2&\"\nimport script from \"./TreeSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./TreeSelect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../starter-apps/starter-go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["_vm","this","_h","$createElement","_c","_self","attrs","label","rule","staticClass","loading","_e","treeData","on","selected"],"sourceRoot":""}