{"version":3,"file":"assets/lambda/js/chunks/form-field-sub-form-grid.49259bbb53a06e88.js","mappings":"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","sources":["webpack:///../../vue/dataform/src/elements/subform/Grid.vue?3047","webpack:///../../vue/dataform/src/elements/subform/Grid.vue","webpack:///../../vue/dataform/src/elements/subform/Grid.vue?9e62","webpack:///../../vue/dataform/src/elements/subform/Grid.vue?e5c6","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue?176c","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue?fba5","webpack:///../../vue/dataform/src/elements/subform/GridForm.vue?5f3c"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"subform-grid\",style:(_vm.subStyle)},[_c('h3',{staticStyle:{\"display\":\"none\"}},[_vm._v(_vm._s(_vm.rowLength))]),_vm._v(\" \"),(!_vm.form.min_height && !_vm.form.disableCreate)?_c('div',{staticClass:\"subform-header\"},[_vm._v(\"\\n        \"+_vm._s(_vm.form.name)+\"\\n        \"),_c('Button',{staticClass:\"sub-form-add-btn\",attrs:{\"shape\":\"circle\",\"type\":\"success\",\"size\":\"small\",\"icon\":\"md-add\"},on:{\"click\":_vm.add}})],1):_vm._e(),_vm._v(\" \"),_c('table',{attrs:{\"border\":\"1\"}},[_c('thead',[_c('tr',[(_vm.form.showRowNumber)?_c('th',{staticClass:\"row-number\"},[_vm._v(\"ДД\")]):_vm._e(),_vm._v(\" \"),_vm._l((_vm.form.schema),function(item){return (item.label != '' && !item.hidden)?_c('th',{key:item.index,on:{\"click\":function($event){return _vm.sort(item)}}},[_vm._v(\"\\n                \"+_vm._s(item.label)+\" \"),_c('i',{staticClass:\"ti-exchange-vertical\"})]):_vm._e()}),_vm._v(\" \"),(!_vm.form.disableDelete)?_c('th',{staticClass:\"action\"},[_vm._v(\"...\")]):_vm._e()],2)]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.listData),function(item,index){return _c('grid-form',{key:index,attrs:{\"f\":item.form,\"model\":item.model,\"editMode\":_vm.editMode,\"relations\":_vm.relations,\"formula\":_vm.formula}},[(!_vm.form.disableDelete)?_c('template',{slot:\"action\"},[_c('a',{attrs:{\"href\":\"javascript:void(0);\"},on:{\"click\":function($event){return _vm.remove(index)}}},[_c('Icon',{attrs:{\"type\":\"ios-trash\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.form.showRowNumber)?_c('template',{slot:\"rowNumber\"},[_c('span',[_vm._v(_vm._s(index+1))])]):_vm._e()],2)}),1),_vm._v(\" \"),(_vm.hasEq)?_c('tfoot',[_c('tr',[_vm._l((_vm.equationData),function(item,index){return _c('td',{key:index},[(item.preStaticWord!=null && item.preStaticWord!='')?_c('span',[_vm._v(\" \"+_vm._s(item.preStaticWord)+\" \")]):_vm._e(),_vm._v(\" \"),(item.hasEquation)?_c('span',[_vm._v(_vm._s(item.data.toLocaleString()))]):_vm._e(),_vm._v(\" \"),(item.prefix!=null && item.prefix!='')?_c('span',[_vm._v(\" \"+_vm._s(item.prefix))]):_vm._e()])}),_vm._v(\" \"),_c('td')],2)]):_vm._e()]),_vm._v(\" \"),(_vm.form.min_height && !_vm.form.disableCreate)?_c('a',{staticClass:\"sub-grid-add\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.add}},[_c('Icon',{attrs:{\"type\":\"plus\"}}),_vm._v(\"\\n        \"+_vm._s(_vm.lang.add)+\"\\n    \")],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"subform-grid\" :style=\"subStyle\">\n        <h3 style=\"display: none\">{{rowLength}}</h3>\n        <div class=\"subform-header\" v-if=\"!form.min_height && !form.disableCreate\">\n            {{ form.name }}\n            <Button shape=\"circle\" type=\"success\" size=\"small\" @click=\"add\" icon=\"md-add\"\n                    class=\"sub-form-add-btn\"></Button>\n        </div>\n        <table border=\"1\" >\n            <thead>\n            <tr>\n                <th class=\"row-number\" v-if=\"form.showRowNumber\">ДД</th>\n                <th @click=\"sort(item)\" v-for=\"item in form.schema\" v-if=\"item.label != '' && !item.hidden\"\n                    :key=\"item.index\">\n                    {{ item.label }} <i class=\"ti-exchange-vertical\"/>\n                </th>\n                <th class=\"action\" v-if=\"!form.disableDelete\">...</th>\n            </tr>\n            </thead>\n            <tbody>\n            <grid-form v-for=\"(item, index) in listData\"\n                       :key=\"index\"\n                       :f=\"item.form\"\n                       :model=\"item.model\"\n                       :editMode=\"editMode\"\n                       :relations=\"relations\"\n                       :formula=\"formula\">\n                <template slot=\"action\" v-if=\"!form.disableDelete\">\n                    <a href=\"javascript:void(0);\" @click=\"remove(index)\">\n                        <Icon type=\"ios-trash\"/>\n                    </a>\n                </template>\n                <template slot=\"rowNumber\" v-if=\"form.showRowNumber\">\n                    <span>{{index+1}}</span>\n                </template>\n            </grid-form>\n            </tbody>\n            <tfoot v-if=\"hasEq\">\n            <tr>\n                <td v-for=\"(item, index) in equationData\" :key=\"index\">\n                    <span v-if=\"item.preStaticWord!=null && item.preStaticWord!=''\"> {{item.preStaticWord}} </span>\n                    <span v-if=\"item.hasEquation\">{{ item.data.toLocaleString() }}</span>\n                    <span v-if=\"item.prefix!=null && item.prefix!=''\"> {{item.prefix}}</span>\n                </td>\n                <td>\n                </td>\n            </tr>\n            </tfoot>\n        </table>\n        <a class=\"sub-grid-add\" href=\"javascript:void(0)\" @click=\"add\" v-if=\"form.min_height && !form.disableCreate\">\n            <Icon type=\"plus\"></Icon>\n            {{lang.add}}\n        </a>\n    </div>\n</template>\n\n<script>\n    import {element} from \"../index\";\n    import GridForm from \"./GridForm\";\n\n    export default {\n        props: [\"form\", \"model\", \"editMode\", \"relations\", \"formula\"],\n        components: {\n            \"grid-form\": GridForm\n        },\n        mounted() {\n            this.equationRenderer();\n        },\n        computed: {\n                lang() {\n                    const labels = ['pleaseCompleteFirstLine',\n                    ];\n                    return labels.reduce((obj, key, i) => {\n                        obj[key] = this.$t('dataForm.' + labels[i]);\n                        return obj;\n                    }, {});\n                },\n            subStyle() {\n                if (this.form.min_height) {\n                    return {\n                        minHeight: this.form.min_height + 'px',\n                        background: '#f3f4f5'\n                    }\n                } else {\n                    return undefined;\n                }\n            },\n            Lang() {\n                const labels = [ 'add',];\n                return labels.reduce((obj, key, i) => {\n                    obj[key] = this.$t('dataForm.' + labels[i]);\n                    return obj;\n                }, {});\n            },\n        },\n        watch: {\n            listData: {\n                handler: function (curr, old) {\n                    if (this.hasEq) {\n                        this.equationData.map(eq => {\n                            if (eq.hasEquation) {\n                                eq.data = -1;\n                                let count = 0;\n                                switch (eq.equation) {\n                                    case \"SUM\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            eq.data += Number(isNaN(parseInt(it.model[eq.model], 10)) ? 0 : it.model[eq.model]);\n                                        });\n                                        break;\n                                    }\n                                    case \"COUNT\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            eq.data += Number(1);\n                                        });\n                                        break;\n                                    }\n                                    case \"MIN\": {\n                                        curr.map(it => {\n                                            if (eq.data == -1) {\n                                                eq.data = it.model[eq.model];\n                                            } else {\n                                                eq.data = Math.min(eq.data, it.model[eq.model]);\n                                            }\n                                        });\n                                        break;\n                                    }\n                                    case \"MAX\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            eq.data = Math.max(eq.data, it.model[eq.model]);\n                                        });\n                                        break;\n                                    }\n                                    case \"AVG\": {\n                                        eq.data = 0;\n                                        curr.map(it => {\n                                            count++;\n                                            eq.data += Number(it.model[eq.model]);\n                                        });\n                                        eq.data = Number(eq.data / count);\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n                    }\n                },\n                deep: true\n            }\n        },\n        data() {\n            return {\n                listData: [],\n                equationData: [],\n                currentSortDir: 'asc',\n                hasEq: false,\n                rowLength: 0\n            };\n        },\n        methods: {\n            element: element,\n            checkAddable() {\n                return new Promise((resolve, reject) => {\n                    let obj = this.listData[this.listData.length - 1];\n                    if (obj) {\n                        let hasValue = false;\n                        let lastModel = obj.model;\n\n                        for (let key in lastModel) {\n                            if (\n                                typeof lastModel[key] != undefined &&\n                                lastModel[key] != null &&\n                                lastModel[key] != \"\" &&\n                                lastModel[key] != false\n                            ) {\n                                hasValue = true;\n                            }\n                        }\n                        if(hasValue){\n                            resolve(true)\n                        } else {\n                            alert(this.lang.pleaseCompleteFirstLine);\n                            reject(false);\n                        }\n                    } else {\n                        resolve(true);\n                    }\n                });\n            },\n\n            addSubForm() {\n                let clonedForm = _.cloneDeep(this.form);\n                let clonedFormModel = {};\n                clonedForm.schema.forEach(item => {\n                    if (\n                        clonedForm.identity == item.model ||\n                        item.formType == null\n                    ) {\n                        return;\n                    }\n\n                    if (\n                        clonedForm.timestamp &&\n                        (item.model == \"created_at\" || item.model == \"updated_at\")\n                    ) {\n                        return;\n                    }\n\n                    Vue.set(clonedFormModel, item.model, item.default);\n                });\n\n                let listItem = {\n                    form: clonedForm,\n                    model: clonedFormModel\n                };\n\n\n                if (this.model.form[this.model.component] == undefined) {\n                    this.model.form[this.model.component] = [];\n                }\n                this.model.form[this.model.component].push(clonedFormModel);\n\n                this.listData.push(listItem);\n                this.rowLength = this.model.form[this.model.component].length;\n            },\n\n            add() {\n                this.checkAddable()\n                    .then(o => {\n                        setTimeout(() => {\n                            this.addSubForm();\n                        }, 200);\n                    })\n                    .catch(e => {\n                        console.log(e);\n                    });\n            },\n\n            fillData() {\n                this.listData = [];\n                setTimeout(() => {\n                  this.listData = [];\n                    this.model.form[this.model.component].forEach(item => {\n                        let listItem = {\n                            form: _.cloneDeep(this.form),\n                            model: item\n                        };\n                        this.listData.push(listItem);\n                    });\n                }, 100);\n            },\n\n            equationRenderer() {\n                this.equationData = [];\n                this.form.schema.map(item => {\n                    if (item.label != '' && !item.hidden) {\n                        if (item.hasEquation) this.hasEq = true;\n                        this.equationData.push({\n                            hasEquation: item.hasEquation,\n                            equation: item.equations,\n                            prefix: item.prefix,\n                            model: item.model,\n                            preStaticWord: item.preStaticWord,\n                            data: 0\n                        });\n                    }\n                });\n            },\n\n            remove(index) {\n                this.model.form[this.form.model].splice(index, 1);\n                this.listData.splice(index, 1);\n                this.rowLength = this.model.form[this.model.component].length;\n            },\n\n            reset() {\n                this.model.form[this.form.model] = [];\n                this.listData = [];\n            },\n\n            sort(item) {\n                let sortStatus = 1;\n                this.currentSortDir = this.currentSortDir === 'asc' ? 'desc' : 'asc';\n                this.currentSort = this.currentSortDir === 'desc' ? -1 : 1;\n                this.currentSort = item.model;\n                this.listData.sort((a, b) => {\n                    if (this.currentSortDir === 'desc') sortStatus = -1;\n                    if (a.model[this.currentSort] < b.model[this.currentSort]) return -1 * sortStatus;\n                    if (a.model[this.currentSort] > b.model[this.currentSort]) return 1 * sortStatus;\n                    return 0;\n                });\n            },\n        }\n    };\n</script>\n","import mod from \"-!../../../../../starter-apps/lambda-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/lambda-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Grid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../starter-apps/lambda-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/lambda-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Grid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Grid.vue?vue&type=template&id=35a6946a&\"\nimport script from \"./Grid.vue?vue&type=script&lang=js&\"\nexport * from \"./Grid.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../starter-apps/lambda-go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[(_vm.f.showRowNumber)?_c('td',{staticClass:\"row-number\"},[_vm._t(\"rowNumber\")],2):_vm._e(),_vm._v(\" \"),_vm._l((_vm.f.schema),function(item){return (typeof item.formType !== 'undefined' && item.formType !== null && item.model && !item.hidden && item.model!=_vm.f.identity && item.model!=_vm.f.parent && item.model!='updated_at'&& item.model!='created_at')?_c('td',{key:item.index},[(_vm.model)?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"model\":{form: _vm.model, component: item.model},\"size\":\"small\",\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"meta\":_vm.setMeta(item),\"getSchemaRelationByModel\":_vm.getSchemaRelationByModel,\"relation_data\":_vm.getRelation(item)}}):_vm._e()],1):_vm._e()}),_vm._v(\" \"),_c('td',{staticClass:\"action\"},[_vm._t(\"action\")],2)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <tr>\n        <td class=\"row-number\" v-if=\"f.showRowNumber\">\n            <slot name=\"rowNumber\"></slot>\n        </td>\n        <td v-for=\"item in f.schema\"\n            v-if=\"typeof item.formType !== 'undefined' && item.formType !== null && item.model && !item.hidden && item.model!=f.identity && item.model!=f.parent && item.model!='updated_at'&& item.model!='created_at'\"\n            :key=\"item.index\">\n            <!--{{item.hidden}}-->\n            <!--{{item.model}}-->\n            <component :is=\"element(item.formType)\"\n                       :model=\"{form: model, component: item.model}\"\n                       v-if=\"model\"\n                       size=\"small\"\n                       :label=\"item.label ? item.label : `[${item.model}]`\"\n                       :meta=\"setMeta(item)\"\n                       :getSchemaRelationByModel=\"getSchemaRelationByModel\"\n                       :relation_data=\"getRelation(item)\">\n            </component>\n        </td>\n        <td class=\"action\" >\n            <slot name=\"action\"></slot>\n        </td>\n    </tr>\n</template>\n\n<script>\n    import {element} from \"../index\";\n    import {getRule} from \"../../rule\";\n    import {doFormula, doTrigger} from \"../../utils/formula_and_trigger.js\";\n    import {getRelationData} from \"../../utils/helpers\";\n\n    export default {\n        props: [\"f\", \"model\", \"editMode\", \"relations\", \"formula\"],\n        created() {\n\n            this.f.data = {};\n            this.f.schema.forEach(item => {\n\n                if (this.f.identity == item.model || item.formType == null) {\n                    return;\n                }\n                if (\n                    this.f.timestamp &&\n                    (item.model == \"created_at\" || item.model == \"updated_at\")\n                ) {\n                    return;\n                }\n                if (this.editMode) {\n                    this.setModel(item.model, this.model[item.model], item.formType);\n                } else {\n                    this.setModel(item.model, item.default, item.formType);\n                }\n\n                this.$watch(\"model.\" + item.model, {\n                    handler: (value, oldValue) => {\n                        this.afterChange(item.model, value, oldValue);\n                    },\n                    deep: true\n                });\n            });\n        },\n\n        methods: {\n            element: element,\n            setModel(name, value, type) {\n                switch (type) {\n                    case \"Switch\":\n                        let val = false;\n                        if (value == \"true\" || value == 1) {\n                            val = true;\n                        }\n                        this.model[name] = val_;\n                        this.f.data[name] = val_;\n                        break;\n                    case \"Checkbox\":\n                        let val_ = 0;\n                        if (value == \"true\" || value == 1) {\n                            val_ = 1;\n                        }\n                        this.model[name] = val_;\n                        this.f.data[name] = val_;\n                        break;\n\n                    default:\n                        this.f.data[name] = value;\n                }\n            },\n\n            setMeta(item) {\n                delete item[\"table\"];\n                delete item[\"rules\"];\n                delete item[\"label\"];\n                delete item[\"span\"];\n                delete item[\"default\"];\n                // item.schemaId = this.$route.params.id;\n                // if (this.$route.params.form) {\n                //     console.log(this.$route.params.form)\n                //     item.schemaID = this.$route.params.form;\n                // }\n                // else {\n                //     console.log(this.$route.params.id)\n                //     item.schemaID = this.$route.params.id;\n                // }\n                return item;\n            },\n\n            getSchemaIndex(model) {\n                return this.f.schema.findIndex(item => item.model == model);\n            },\n\n            afterChange(model, val, oldValue) {\n                doTrigger(model, val, this.model, this.f.schema, this.$refs, this.$Notice);\n                doFormula(this.formula, model, this.model, this.f.schema, this.f.rule, this.f.model);\n            },\n\n            getSchemaRelationByModel(model) {\n                let index = this.f.schema.findIndex(item => item.model == model);\n                if (index >= 0)\n                    return getRelationData(this.f.schema[index], this.relations)\n                else\n                    return null\n            },\n            getRelation(item) {\n                return getRelationData(item, this.relations)\n            }\n        }\n    };\n</script>\n\n","import mod from \"-!../../../../../starter-apps/lambda-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/lambda-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./GridForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../starter-apps/lambda-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../starter-apps/lambda-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./GridForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GridForm.vue?vue&type=template&id=20f26b62&\"\nimport script from \"./GridForm.vue?vue&type=script&lang=js&\"\nexport * from \"./GridForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../starter-apps/lambda-go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["_vm","this","_h","$createElement","_c","_self","staticClass","style","staticStyle","_v","_s","rowLength","form","min_height","disableCreate","_e","name","attrs","on","add","_l","item","label","hidden","key","index","$event","sort","disableDelete","model","editMode","relations","formula","slot","remove","preStaticWord","data","toLocaleString","prefix","lang","f","_t","formType","identity","parent","element","tag","component","setMeta","getSchemaRelationByModel","getRelation"],"sourceRoot":""}