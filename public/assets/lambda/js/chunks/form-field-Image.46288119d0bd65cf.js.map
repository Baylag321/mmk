{"version":3,"file":"assets/lambda/js/chunks/form-field-Image.46288119d0bd65cf.js","mappings":"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","sources":["webpack:///node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/Image.vue","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/Image.vue?f833","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/Image.vue","webpack:///./node_modules/@lambda-platform/lambda-builder/src/modules/dataform/elements/Image.vue?ae6e"],"sourcesContent":["<template>\n    <FormItem :prop=rule>\n        <div class=\"multi-upload\" v-if=\"meta.file && meta.file.isMultiple == true\">\n            <label>{{ label }}</label>\n\n            <div class=\"multi-upload-list\">\n                <div class=\"upload-list\" v-for=\"item in uploadList\" :key=\"item.index\">\n                    <template v-if=\"item.status == 'finished'\">\n                        <img v-if=\"item.response\" :src=\"`${url ? url : ''}${item.response}`\" @click=\"handleView(item.response)\">\n                        <div class=\"upload-control\" @click=\"handleRemove(item)\"\n                             v-show=\"meta && meta.disabled ? false : true\">{{ lang._delete }}\n                        </div>\n                    </template>\n\n                    <template v-else>\n                        <Progress v-if=\"item.showProgress\" :percent=\"item.percentage\" hide-info></Progress>\n                    </template>\n                </div>\n\n                <Upload\n                    ref=\"upload\"\n                    multiple\n                    :with-credentials=\"true\"\n                    :action=\"`${url ? url : ''}/lambda/krud/upload`\"\n                    :show-upload-list=\"false\"\n                    :default-file-list=\"defaultList\"\n                    :on-success=\"success\"\n                    :before-upload=\"beforeUpload\"\n                    :disabled=\"meta && meta.disabled ? meta.disabled : false\"\n                >\n                    <div class=\"upload-handler\">\n                        <i class=\"ti ti-camera\"></i>\n                    </div>\n                </Upload>\n            </div>\n        </div>\n\n        <Upload\n            ref=\"upload\"\n            v-else\n            :with-credentials=\"true\"\n            v-model=\"model.form[model.component]\"\n            :action=\"`${url ? url : ''}/lambda/krud/upload`\"\n            :on-success=\"success\"\n            :disabled=\"meta && meta.disabled ? meta.disabled : false\">\n            <Button type=\"dashed\">\n                <img class=\"preview-img\" v-if=\"this.model.form[this.model.component] != null\"\n\n                     :src=\"`${url ? url : ''}${model.form[model.component]}`\"\n                     alt=\"image\">\n                <div>\n                    <i class=\"ti ti-camera\"></i>\n                    {{ label }}\n                </div>\n            </Button>\n        </Upload>\n\n        <Modal :title=\"lang.viewPhotos\" v-model=\"showImage\" width=\"1000px\">\n            <img\n\n                 :src=\"`${url ? url : ''}${showImageUrl}`\"\n                 v-if=\"showImage\" style=\"width: 100%\">\n        </Modal>\n    </FormItem>\n</template>\n\n<script>\n\nexport default {\n    props: [\"model\", \"label\", \"rule\", \"meta\", \"do_render\", \"url\"],\n    computed: {\n        lang() {\n            const labels = ['viewPhotos', '_delete'\n            ];\n            return labels.reduce((obj, key, i) => {\n                obj[key] = this.$t('dataForm.' + labels[i]);\n                return obj;\n            }, {});\n        },\n    },\n    mounted() {\n        this.uploadList = typeof this.$refs.upload.fileList != 'undefined' ? this.$refs.upload.fileList : [];\n    },\n    data() {\n        return {\n            defaultList: [],\n            uploadList: [],\n            showImage: false,\n            showImageUrl: ''\n        }\n    },\n\n    watch: {\n        'model.form'(val) {\n\n            let itemModel = val[this.model.component];\n            if (typeof this.meta.file.isMultiple !== 'undefined' && this.meta.file.isMultiple) {\n                if (typeof itemModel == 'string' && typeof itemModel != 'undefined' && itemModel != null) {\n\n                    let list = JSON.parse(this.model.form[this.model.component]);\n\n                    if (Array.isArray(list)) {\n                        this.defaultList = list.map(item => {\n                            return {\n                                status: 'finished',\n                                response: item.response,\n                                name: item.name\n                            }\n                        });\n\n                        this.$nextTick(() => {\n                            this.uploadList = this.$refs.upload.fileList;\n                        })\n                    }\n                } else {\n                    this.$refs.upload.fileList = [];\n                    this.uploadList = [];\n                    this.model.form[this.model.component] = null;\n                }\n            }\n        },\n        do_render(value) {\n            if (!value) {\n\n                this.$refs.upload.fileList = [];\n            }\n        }\n\n    },\n\n    methods: {\n\n        handleView(imageUrl) {\n            this.showImage = true;\n            this.showImageUrl = imageUrl;\n        },\n\n        success(val) {\n\n            if (this.meta.file.isMultiple) {\n                this.uploadList = this.$refs.upload.fileList;\n                this.model.form[this.model.component] = JSON.stringify(this.uploadList.map(item => {\n                    return {\n                        name: item.name,\n                        response: item.response\n                    }\n                }));\n            } else {\n                this.model.form[this.model.component] = val;\n            }\n        },\n\n        handleRemove(file) {\n            const fileList = this.$refs.upload.fileList;\n            this.$refs.upload.fileList.splice(fileList.indexOf(file), 1);\n            this.uploadList = this.$refs.upload.fileList;\n            this.model.form[this.model.component] = this.uploadList.map(item => {\n                return {\n                    name: item.name,\n                    response: item.response\n                }\n            })\n        },\n\n        beforeUpload() {\n            // const check = this.uploadList.length < 5;\n            // if (!check) {\n            //     this.$Notice.warning({\n            //         title: 'Up to five pictures can be uploaded.'\n            //     });\n            // }\n            // return check;\n        }\n    }\n};\n</script>\n","import mod from \"-!../../../../../../vue-loader/lib/index.js??vue-loader-options!./Image.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../vue-loader/lib/index.js??vue-loader-options!./Image.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Image.vue?vue&type=template&id=4dbdd534&\"\nimport script from \"./Image.vue?vue&type=script&lang=js&\"\nexport * from \"./Image.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('FormItem',{attrs:{\"prop\":_vm.rule}},[(_vm.meta.file && _vm.meta.file.isMultiple == true)?_c('div',{staticClass:\"multi-upload\"},[_c('label',[_vm._v(_vm._s(_vm.label))]),_vm._v(\" \"),_c('div',{staticClass:\"multi-upload-list\"},[_vm._l((_vm.uploadList),function(item){return _c('div',{key:item.index,staticClass:\"upload-list\"},[(item.status == 'finished')?[(item.response)?_c('img',{attrs:{\"src\":(\"\" + (_vm.url ? _vm.url : '') + (item.response))},on:{\"click\":function($event){return _vm.handleView(item.response)}}}):_vm._e(),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.meta && _vm.meta.disabled ? false : true),expression:\"meta && meta.disabled ? false : true\"}],staticClass:\"upload-control\",on:{\"click\":function($event){return _vm.handleRemove(item)}}},[_vm._v(_vm._s(_vm.lang._delete)+\"\\n                    \")])]:[(item.showProgress)?_c('Progress',{attrs:{\"percent\":item.percentage,\"hide-info\":\"\"}}):_vm._e()]],2)}),_vm._v(\" \"),_c('Upload',{ref:\"upload\",attrs:{\"multiple\":\"\",\"with-credentials\":true,\"action\":((_vm.url ? _vm.url : '') + \"/lambda/krud/upload\"),\"show-upload-list\":false,\"default-file-list\":_vm.defaultList,\"on-success\":_vm.success,\"before-upload\":_vm.beforeUpload,\"disabled\":_vm.meta && _vm.meta.disabled ? _vm.meta.disabled : false}},[_c('div',{staticClass:\"upload-handler\"},[_c('i',{staticClass:\"ti ti-camera\"})])])],2)]):_c('Upload',{ref:\"upload\",attrs:{\"with-credentials\":true,\"action\":((_vm.url ? _vm.url : '') + \"/lambda/krud/upload\"),\"on-success\":_vm.success,\"disabled\":_vm.meta && _vm.meta.disabled ? _vm.meta.disabled : false},model:{value:(_vm.model.form[_vm.model.component]),callback:function ($$v) {_vm.$set(_vm.model.form, _vm.model.component, $$v)},expression:\"model.form[model.component]\"}},[_c('Button',{attrs:{\"type\":\"dashed\"}},[(this.model.form[this.model.component] != null)?_c('img',{staticClass:\"preview-img\",attrs:{\"src\":(\"\" + (_vm.url ? _vm.url : '') + (_vm.model.form[_vm.model.component])),\"alt\":\"image\"}}):_vm._e(),_vm._v(\" \"),_c('div',[_c('i',{staticClass:\"ti ti-camera\"}),_vm._v(\"\\n                \"+_vm._s(_vm.label)+\"\\n            \")])])],1),_vm._v(\" \"),_c('Modal',{attrs:{\"title\":_vm.lang.viewPhotos,\"width\":\"1000px\"},model:{value:(_vm.showImage),callback:function ($$v) {_vm.showImage=$$v},expression:\"showImage\"}},[(_vm.showImage)?_c('img',{staticStyle:{\"width\":\"100%\"},attrs:{\"src\":(\"\" + (_vm.url ? _vm.url : '') + _vm.showImageUrl)}}):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"names":["props","computed","lang","labels","reduce","obj","key","i","this","$t","mounted","uploadList","$refs","upload","fileList","data","defaultList","showImage","showImageUrl","watch","val","itemModel","model","component","meta","file","isMultiple","list","JSON","parse","form","Array","isArray","map","item","status","response","name","$nextTick","do_render","value","methods","handleView","imageUrl","success","stringify","handleRemove","splice","indexOf","beforeUpload","_vm","_h","$createElement","_c","_self","attrs","rule","staticClass","_v","_s","label","_l","index","url","on","$event","_e","directives","rawName","disabled","expression","_delete","percentage","ref","callback","$$v","$set","viewPhotos","staticStyle"],"sourceRoot":""}