{"version":3,"file":"assets/lambda/js/chunks/Dataform-el.b721407769a9bf21.js","mappings":"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","sources":["webpack:////Users/munkh-altai/Workspace/LAMBDA/starter-apps/lambda-go/assets/dataform_custom|sync|/^\\.\\/.*\\.vue$/","webpack:///../../vue/dataform/src/elements/index.js","webpack:///../../vue/dataform/src/rule.js","webpack:///../../vue/dataform/src/utils/formula_and_trigger.js","webpack:///../../vue/dataform/src/utils/methods.js","webpack:///assets/dataform_custom/example.vue","webpack:///./assets/dataform_custom/example.vue?adb4","webpack:///./assets/dataform_custom/example.vue","webpack:///./assets/dataform_custom/example.vue?aada","webpack:///../../vue/dataform/src/Dataform.vue?2ed2","webpack:///../../vue/dataform/src/Dataform.vue","webpack:///../../vue/dataform/src/Dataform.vue?440f","webpack:///../../vue/dataform/src/Dataform.vue?7749","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"sourcesContent":["var map = {\n\t\"./example.vue\": 4743\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8883;","export const elementList = [\n    {\n        element: \"Text\",\n        component:()=> import(/* webpackChunkName: \"form-field-text\" */'./Text.vue'),\n    },\n    {\n        element: \"Select\",\n        component:()=> import(/* webpackChunkName: \"form-field-Select\" */'./Select.vue'),\n    },\n    {\n        element: \"TreeSelect\",\n        component:()=> import(/* webpackChunkName: \"form-field-TreeSelect\" */'./TreeSelect.vue'),\n    },\n    {\n        element: \"Number\",\n        component:()=> import(/* webpackChunkName: \"form-field-Number\" */'./Number.vue'),\n    },\n    {\n        element: \"Textarea\",\n        component:()=> import(/* webpackChunkName: \"form-field-Textarea\" */'./Textarea.vue'),\n    },\n    {\n        element: \"Date\",\n        component:()=> import(/* webpackChunkName: \"form-field-Date\" */'./Date.vue'),\n    },\n    {\n        element: \"DateTime\",\n        component:()=> import(/* webpackChunkName: \"form-field-DateTime\" */'./DateTime.vue'),\n    },\n    {\n        element: \"Divider\",\n        component:()=> import(/* webpackChunkName: \"form-field-Divider\" */'./Divider.vue'),\n    },\n    {\n        element: \"Image\",\n        component:()=> import(/* webpackChunkName: \"form-field-Image\" */'./Image.vue'),\n    },\n    {\n        element: \"HTML\",\n        component:()=> import(/* webpackChunkName: \"form-field-HTML\" */'./HTML.vue'),\n    },\n    {\n        element: \"ImageSubform\",\n        component:()=> import(/* webpackChunkName: \"form-field-ImageSubform\" */'./ImageSubform.vue'),\n    },\n    {\n        element: \"ImageDrag\",\n        component:()=> import(/* webpackChunkName: \"form-field-ImageDrag\" */'./ImageDrag.vue'),\n    },\n\n    {\n        element: \"Checkbox\",\n        component:()=> import(/* webpackChunkName: \"form-field-Checkbox\" */'./Checkbox.vue'),\n    },\n    {\n        element: \"CK\",\n        component:()=> import(/* webpackChunkName: \"form-field-CK\" */'./CK.vue'),\n    },\n    {\n        element: \"ColorPicker\",\n        component:()=> import(/* webpackChunkName: \"form-field-ColorPicker\" */'./ColorPicker.vue'),\n    },\n    // {\n    //     element: \"DateRange\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-DateRange\" */'./DateRange.vue'),\n    // },\n    {\n        element: \"Email\",\n        component:()=> import(/* webpackChunkName: \"form-field-Email\" */'./Email.vue'),\n    },\n    {\n        element: \"File\",\n        component:()=> import(/* webpackChunkName: \"form-field-File\" */'./File.vue'),\n    },\n    {\n        element: \"Download\",\n        component:()=> import(/* webpackChunkName: \"form-field-Download\" */'./Download.vue'),\n    },\n    {\n        element: \"Geographic\",\n        component:()=> import(/* webpackChunkName: \"form-field-Geographic\" */'./Geographic.vue'),\n    },\n    {\n        element: \"Hidden\",\n        component:()=> import(/* webpackChunkName: \"form-field-Hidden\" */'./Hidden.vue'),\n    },\n    {\n        element: \"Map\",\n        component:()=> import(/* webpackChunkName: \"form-field-Map\" */'./Map.vue'),\n    },\n    {\n        element: \"Money\",\n        component:()=> import(/* webpackChunkName: \"form-field-Money\" */'./Money.vue'),\n    },\n    {\n        element: \"NumberGenerate\",\n        component:()=> import(/* webpackChunkName: \"form-field-NumberGenerate\" */'./NumberGenerate.vue'),\n    },\n    {\n        element: \"Password\",\n        component:()=> import(/* webpackChunkName: \"form-field-Password\" */'./Password.vue'),\n    },\n    {\n        element: \"PasswordGenerate\",\n        component:()=> import(/* webpackChunkName: \"form-field-PasswordGenerate\" */'./PasswordGenerate.vue'),\n    },\n    {\n        element: \"Radio\",\n        component:()=> import(/* webpackChunkName: \"form-field-Radio\" */'./Radio.vue'),\n    },\n    {\n        element: \"RadioWithTextInput\",\n        component:()=> import(/* webpackChunkName: \"form-field-RadioWithTextInput\" */'./RadioWithTextInput.vue'),\n    },\n    {\n        element: \"Register\",\n        component:()=> import(/* webpackChunkName: \"form-field-Register\" */'./Register.vue'),\n    },\n    {\n        element: \"ISelect\",\n        component:()=> import(/* webpackChunkName: \"form-field-ISelect\" */'./ISelect.vue'),\n    },\n    {\n        element: \"Search\",\n        component:()=> import(/* webpackChunkName: \"form-field-Search\" */'./Search.vue'),\n    },\n    // {\n    //     element: \"Slider\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-Slider\" */'./Slider.vue'),\n    // },\n    {\n        element: \"Switch\",\n        component:()=> import(/* webpackChunkName: \"form-field-Switch\" */'./Switch.vue'),\n    },\n    {\n        element: \"Time\",\n        component:()=> import(/* webpackChunkName: \"form-field-Time\" */'./Time.vue'),\n    },\n    // {\n    //     element: \"UniqueGeneration\",\n    //     component:()=> import(/* webpackChunkName: \"form-field-UniqueGeneration\" */'./UniqueGeneration.vue'),\n    // },\n    {\n        element: \"AdminMenu\",\n        component:()=> import(/* webpackChunkName: \"form-field-AdminMenu\" */'./AdminMenu.vue'),\n    },\n    {\n        element: \"subform/Grid\",\n        component:()=> import(/* webpackChunkName: \"form-field-sub-form-grid\" */'./subform/Grid.vue'),\n    },\n    {\n        element: \"subform/Form\",\n        component:()=> import(/* webpackChunkName: \"form-field-sub-form\" */'./subform/Form.vue'),\n    },\n];\n\nconst Notfount = ()=> import(/* webpackChunkName: \"form-field-sub-form\" */'./NotFound.vue');\n\nconst requireCustomElement = (type)=>{\n    if(window.init.data_form_custom_elements){\n        let custom = window.init.data_form_custom_elements.find(custom_element=>custom_element.element == type);\n        if (custom) {\n            return require(`dataform_custom/${type}.vue`).default;\n        }else {\n            // throw `${type} element not fount`\n            return Notfount;\n        }\n\n    } else {\n        return Notfount;\n    }\n}\n\nexport const element = (type) => {\n    if (type !== null && typeof type !== \"undefined\") {\n        const elIndex = elementList.findIndex(el=>el.element == type);\n        if(elIndex >= 0){\n            return elementList[elIndex].component;\n        }\n    }\n    return requireCustomElement(type);\n}\n","let ruleModel = null;\nlet identityColumn = null;\nlet identity = null;\n\nconst isValid = (val) => {\n    if (typeof val !== undefined && val != null && val != \"\") {\n        return true;\n    }\n    return false;\n}\n\nexport const setModel = (model) => {\n    ruleModel = model;\n}\n\nexport const setIdentity = (column, value) => {\n    identity = value;\n    identityColumn = column;\n}\n\nexport const rules = [{\n    type: 'required',\n    msg: 'Талбарыг бөглөнө үү!'\n},\n    {\n        type: 'email',\n        msg: 'Имэйл хаягаа зөв оруулна уу!'\n    },\n    {\n        type: 'number',\n        msg: 'Тоон утга оруулна уу!'\n    },\n    {\n        type: 'englishAlphabet',\n        msg: 'Зөвхөн латин үсэг оруулна уу!'\n    },\n    {\n        type: 'unique',\n        msg: 'Давхацсан утга оруулсан байна!'\n    },\n    {\n        type: 'lambda-account',\n        msg: 'Давхацсан утга оруулсан байна!'\n    }\n];\n\nconst unique = (rule, value, callback) => {\n    axios.post(`/lambda/krud/unique`, {\n        table: ruleModel,\n        identityColumn: identityColumn,\n        identity: identity,\n        field: rule.field,\n        val: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n            callback(new Error(o.data.msg));\n        }\n    })\n};\nconst checkLambdaaccount = (rule, value, callback) => {\n    axios.post(`/lambda/check`, {\n        value: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n            callback(new Error(`'${value} Давхацсан утга оруулсан байна!'`));\n        }\n    })\n};\nconst englishAlphabet = (rule, value, callback) => {\n    var letterNumber = /^[0-9a-zA-Z-]+$/;\n    if(value.match(letterNumber)){\n        callback();\n    } else {\n        callback(new Error(\"Зөвхөн латин үсэг оруулна уу!\"));\n    }\n};\nconst check_current_password = (rule, value, callback) => {\n    axios.post(`/lambda/krud/check_current_password`, {\n        password: value\n    }).then(o => {\n        if (o.data.status) {\n            callback();\n        } else {\n\n            callback(new Error(o.data.msg));\n        }\n    })\n};\n\n\nexport const getRule = (rule) => {\n    switch (rule.type) {\n        case 'required':\n            return {\n                required: true,\n                message: rule.msg\n            }\n        case 'min':\n            return {\n                type: 'string',\n                min: parseInt(rule.val, 10),\n                message: rule.msg\n            }\n        case 'max':\n            return {\n                type: 'string',\n                min: parseInt(rule.val, 10),\n                message: rule.msg\n            }\n        case 'email':\n            return {\n                type: 'email',\n                message: rule.msg\n            }\n        case 'number':\n            return {\n                type: 'number',\n                message: rule.msg\n            }\n        case 'unique':\n            return {\n                validator: unique,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'lambda-account':\n            return {\n                validator: checkLambdaaccount,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'englishAlphabet':\n            return {\n                validator: englishAlphabet,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        case 'check_current_password':\n            return {\n                validator: check_current_password,\n                trigger: 'blur',\n                // message: rule.msg\n            }\n        default:\n            return null;\n\n    }\n}\n","var templateRe = /\\{ *([\\w_-]+) *\\}/g;\nvar fieldTimeout = null;\n\nexport function dataFromTemplate(str, data) {\n    return str.replace(templateRe, function (str, key) {\n        let value = data[key];\n        if (value === undefined) {\n            return '';\n        } else if (typeof value === 'function') {\n            value = value(data);\n        }\n        return value;\n    });\n}\n\nexport function evil(fn) {\n    return new Function('return ' + fn)();\n}\n\nexport function doFormula(formulas, model, model_, schema_, rule_, subFormModelName) {\n\n    //formula\n    if (formulas.length >= 1) {\n        let formula_index = formulas.findIndex(formula => formula.model == model)\n        if (formula_index <= -1) {\n            formulas.map(formula => {\n                if(formula.template.includes(model)){\n                    doFormula2(formula, model, model_, schema_, rule_, subFormModelName)\n                }\n            });\n        } else {\n            doFormula2(formulas[formula_index], model, model_, schema_, rule_, subFormModelName)\n        }\n    }\n}\nfunction doFormula2(formula, model, model_, schema_, rule_, subFormModelName) {\n\n    let use_formula = false;\n    if (formula['form']) {\n        if (formula['form'] == 'main')\n            use_formula = true;\n        else if (subFormModelName) {\n            if (formula['form'] == subFormModelName)\n                use_formula = true\n\n        }\n    } else\n        use_formula = true;\n\n\n    if (use_formula) {\n\n        let pre_formula = dataFromTemplate(formula.template, model_);\n\n\n        if (pre_formula) {\n            let calculated = evil(pre_formula);\n\n            formula.targets.map(target => {\n                let schema_index = getSchemaIndex(schema_, target.field);\n                if (schema_index >= 0) {\n                    if (target.prop == 'value') {\n                        model_[target.field] = calculated;\n                    } else {\n                        if (target.prop == 'hidden') {\n                            if (rule_) {\n                                if (rule_[target.field]) {\n                                    if (rule_[target.field].length > 0 && rule_[target.field][0].hasOwnProperty(\"required\"))\n                                        rule_[target.field][0].required = calculated ? false : true;\n                                }\n                            }\n\n                        }\n                        schema_[schema_index][target.prop] = calculated;\n                    }\n                }\n            })\n        }\n    }\n}\n\nexport function doTrigger(model, val, model_, schema_, refs, Message, editMode) {\n    if (val) {\n        let model_index = getSchemaIndex(schema_, model);\n        if (model_index >= 0) {\n            if (schema_[model_index]['trigger']) {\n\n                if (fieldTimeout) {\n                    clearTimeout(fieldTimeout);\n                }\n                 fieldTimeout = setTimeout(() => {\n                    callFieldTrigger(schema_[model_index]['trigger'], model_, schema_, refs, Message, editMode);\n                 }, schema_[model_index]['triggerTimeout'] != undefined && schema_[model_index]['triggerTimeout'] !== null && schema_[model_index]['triggerTimeout'] != ''  ? schema_[model_index]['triggerTimeout'] : 0);\n            }\n        }\n    }\n}\n\nfunction setValueProps(field, model_, schema_, refs, is_sub) {\n\n    if (is_sub) {\n        let schema_sub_index = getSchemaIndex(schema_, is_sub);\n        if (schema_sub_index >= 0) {\n            let schema_index = getSchemaIndex(schema_[schema_sub_index].schema, field.field);\n            if (schema_index >= 0) {\n                Object.keys(field.props).forEach(prop => {\n                    schema_[schema_sub_index].schema[schema_index][prop] = field.props[prop];\n                });\n            }\n        }\n    } else {\n\n        let schema_index = getSchemaIndex(schema_, field.field);\n        if (schema_index >= 0) {\n            if ('value' in field) {\n                model_[field.field] = field.value;\n\n                let current_schema = schema_[schema_index];\n                if (current_schema.formType == \"SubForm\") {\n                    refs[`sf${field.field}`][0].fillData();\n                }\n            }\n            if (field.props) {\n                Object.keys(field.props).forEach(prop => {\n                    schema_[schema_index][prop] = field.props[prop];\n                });\n            }\n        }\n    }\n\n\n}\n\nfunction callFieldTrigger(trigger_url, model_, schema_, refs, Message, editMode) {\n    // console.log('axios sent', trigger_url);\n\n    axios.post(trigger_url, {model: {...model_}, editMode: editMode})\n        .then(({data}) => {\n            if (data['schema']) {\n                data['schema'].forEach(field => {\n                    setValueProps(field, model_, schema_, refs)\n                })\n            }\n            if (data['schema_sub']) {\n\n                data['schema_sub'].forEach(schema_sub => {\n                    schema_sub.schema.forEach(field_sub => {\n                        setValueProps(field_sub, model_, schema_, refs, schema_sub.model)\n                    })\n\n                })\n            }\n            if (data['message']) {\n                if (data['message']['type'] == 'success') {\n                    Message.success({\n                        duration: 3,\n                        desc:data['message']['message']\n\n                    });\n                } else {\n                    Message.error({\n                        duration: 3,\n\n                        desc:data['message']['message']\n                    });\n                }\n            }\n            if (data['info']) {\n                data['info'].forEach(info => {\n                    document.getElementById(info.target).innerHTML = info.html;\n                })\n            }\n        })\n}\n\nfunction getSchemaIndex(schema_, model) {\n    return schema_.findIndex(item => item.model == model);\n}\n","export const idGenerator = (type) => {\n    let randomId = Math.random()\n        .toString(36)\n        .substr(3, 9);\n    return `${type}-${randomId}`;\n}\n\n\nexport const evalstr = (str) => {\n    if (typeof str == \"undefined\" || str == null || str == \"\") {\n        return true;\n    }\n    return eval(str.toString());\n}\n\nexport const isValid = (val) => {\n    if (typeof val == \"undefined\" || val == null || val == '') {\n        return false;\n    }\n    return true;\n}\n","<template>\n\n</template>\n\n<script>\nexport default {\nname: \"example\"\n}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./example.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./example.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./example.vue?vue&type=template&id=41f3b5cc&scoped=true&\"\nimport script from \"./example.vue?vue&type=script&lang=js&\"\nexport * from \"./example.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"41f3b5cc\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\"div\")}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.viewMode ? 'dataform view-mode' : 'dataform'},[_c('Form',{ref:_vm.meta.model +'-'+ _vm.schemaID,attrs:{\"model\":_vm.model,\"rules\":_vm.rule,\"label-position\":_vm.meta.option.labelPosition,\"label-width\":_vm.meta.option.labelWidth}},[_c('div',{staticClass:\"dataform-header\"},[_c('h3',[_vm._v(_vm._s(_vm.title)),(_vm.showID)?_c('b',[(_vm.model[_vm.identity])?_c('span',[_vm._v(\": \"+_vm._s(_vm.model[_vm.identity]))]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"dataform-body\"},[(_vm.loadConfig)?_c('Spin',{attrs:{\"fix\":\"\"}}):_vm._l((_vm.ui.schema),function(row){return _c('Row',{key:row.index},[_vm._l((row.children),function(col){return (_vm.isVisibleSection(col))?_c('Col',{key:col.index,attrs:{\"xs\":col.span.xs,\"sm\":col.span.sm,\"md\":col.span.md,\"lg\":col.span.lg}},[_c('div',{class:col.name != '' ? 'fieldset' : ''},[(col.name != '')?_c('legend',[_vm._v(_vm._s(col.name))]):_vm._e(),_vm._v(\" \"),_vm._l((col.children),function(srow){return _c('Row',{key:srow.index},_vm._l((srow.children),function(scol){return _c('Col',{key:scol.index,attrs:{\"id\":scol.id,\"xs\":24,\"sm\":24,\"md\":scol.span.md,\"lg\":scol.span.lg}},[(scol.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(scol.name)+\"\\n                                \")]):_vm._e(),_vm._v(\" \"),_vm._l((scol.children),function(item){return _c('span',{key:item.index},[(_vm.isShow(item.model) && item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"formula\":_vm.formula,\"relations\":_vm.relations,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"editMode\":_vm.editMode,\"model\":{form: _vm.model, component: item.model},\"disabled\":item.disabled ? item.disabled : false,\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"getSchemaByModel\":_vm.getSchemaByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelationData(item)}}):_vm._e()],1)})],2)}),1)})],2)]):_vm._e()}),_vm._v(\" \"),_vm._l((row.children),function(col){return (col.type == 'col')?_c('Col',{key:col.index,attrs:{\"xs\":col.span.xs,\"sm\":col.span.sm,\"md\":col.span.md,\"lg\":col.span.lg}},[(col.name)?_c('Divider',{staticClass:\"form-divider\",attrs:{\"orientation\":\"left\"}},[_vm._v(_vm._s(col.name))]):_vm._e(),_vm._v(\" \"),_vm._l((col.children),function(item){return _c('span',{key:item.index},[(item.formType == 'SubForm' && item.subtype)?_c(_vm.element((\"subform/\" + (item.subtype))),{ref:'sf'+item.model,refInFor:true,tag:\"component\",attrs:{\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"model\":{form: _vm.model, component: item.model},\"form\":_vm.setMeta(item, true),\"relations\":_vm.relations,\"formula\":_vm.formula,\"schemaID\":_vm.schemaID,\"editMode\":_vm.editMode}}):_vm._e(),_vm._v(\" \"),(_vm.isShow(item.model) && item.formType != 'SubForm')?_c(_vm.element(item.formType),{tag:\"component\",attrs:{\"do_render\":_vm.do_render,\"editMode\":_vm.editMode,\"disabled\":item.disabled ? item.disabled : false,\"model\":{form: _vm.model, component: item.model},\"label\":item.label ? item.label : (\"[\" + (item.model) + \"]\"),\"rule\":item.model,\"meta\":_vm.setMeta(item),\"identity\":_vm.identity,\"getSchemaByModel\":_vm.getSchemaByModel,\"setSchemaByModel\":_vm.setSchemaByModel,\"relation_data\":_vm.getRelationData(item)}}):_vm._e()],1)})],2):_vm._e()})],2)})],2),_vm._v(\" \"),(!_vm.viewMode)?_c('div',{staticClass:\"dataform-footer\"},[_c('Button',{attrs:{\"type\":\"info\",\"loading\":_vm.asyncMode},on:{\"click\":function($event){return _vm.handleSubmit(_vm.meta.model +'-'+ _vm.schemaID)}}},[(!_vm.asyncMode)?_c('span',[_vm._v(\"\\n                    \"+_vm._s(_vm.lang.save)+\"\\n                \")]):_c('span',[_vm._v(\"\\n                    \"+_vm._s(_vm.lang.pleaseWait)+\"\\n                \")])]),_vm._v(\" \"),(!_vm.editMode)?_c('Button',{staticStyle:{\"margin-left\":\"8px\"},on:{\"click\":function($event){return _vm.handleReset(_vm.meta.model +'-'+ _vm.schemaID)}}},[_vm._v(\"\\n                \"+_vm._s(_vm.lang.fillInTheNewOne)+\"\\n            \")]):_vm._e()],1):_vm._e()]),_vm._v(\" \"),_c('Drawer',{staticClass:\"info-modal\",attrs:{\"title\":_vm.infoTitle,\"width\":\"860px\"},model:{value:(_vm.showInfo),callback:function ($$v) {_vm.showInfo=$$v},expression:\"showInfo\"}},[_c('iframe',{attrs:{\"src\":_vm.infoUrl,\"frameborder\":\"0\"}}),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{attrs:{\"type\":\"primary\",\"size\":\"large\"},on:{\"click\":function($event){_vm.showInfo = false}}},[_vm._v(\"\\n                \"+_vm._s(_vm.lang.close)+\"\\n            \")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div :class=\"viewMode ? 'dataform view-mode' : 'dataform'\">\n        <Form :ref=\"meta.model +'-'+ schemaID\" :model=\"model\" :rules=\"rule\" :label-position=meta.option.labelPosition\n              :label-width=meta.option.labelWidth>\n            <div class=\"dataform-header\">\n                <h3>{{ title }}<b v-if=\"showID\"><span v-if=\"model[identity]\">: {{ model[identity] }}</span></b></h3>\n            </div>\n            <div class=\"dataform-body\">\n                <Spin v-if=\"loadConfig\" fix></Spin>\n                <Row v-else v-for=\"row in ui.schema\" :key=\"row.index\">\n                    <!-- Section -->\n                    <Col v-for=\"col in row.children\" v-if=\"isVisibleSection(col)\" :key=\"col.index\" :xs=\"col.span.xs\"\n                         :sm=\"col.span.sm\" :md=\"col.span.md\" :lg=\"col.span.lg\">\n                        <div :class=\"col.name != '' ? 'fieldset' : ''\">\n                            <legend v-if=\"col.name != ''\">{{ col.name }}</legend>\n                            <Row v-for=\"srow in col.children\" :key=\"srow.index\">\n                                <Col v-for=\"scol in srow.children\" :id=\"scol.id\" :key=\"scol.index\" :xs=\"24\"\n                                     :sm=\"24\" :md=\"scol.span.md\" :lg=\"scol.span.lg\">\n                                    <Divider v-if=\"scol.name\" orientation=\"left\" class=\"form-divider\">{{ scol.name }}\n                                    </Divider>\n                                    <span v-for=\"item in scol.children\" :key=\"item.index\">\n                                        <component\n                                            :ref=\"'sf'+item.model\"\n                                            v-if=\"isShow(item.model) && item.formType == 'SubForm' && item.subtype\"\n                                            :is=\"element(`subform/${item.subtype}`)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :form=\"setMeta(item, true)\"\n                                            :formula=\"formula\"\n                                            :relations=\"relations\"\n                                            :editMode=\"editMode\">\n                                        </component>\n                                        <component\n                                            v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                            :do_render=\"do_render\"\n                                            :editMode=\"editMode\"\n                                            :is=\"element(item.formType)\"\n                                            :model=\"{form: model, component: item.model}\"\n                                            :disabled=\"item.disabled ? item.disabled : false\"\n                                            :label=\"item.label ? item.label : `[${item.model}]`\"\n                                            :rule=\"item.model\"\n                                            :meta=\"setMeta(item)\"\n                                            :identity=\"identity\"\n                                            :getSchemaByModel=\"getSchemaByModel\"\n                                            :setSchemaByModel=\"setSchemaByModel\"\n                                            :relation_data=\"getRelationData(item)\">\n                                        </component>\n                                        </span>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Col>\n\n                    <!-- Standart column -->\n                    <Col v-for=\"col in row.children\" v-if=\"col.type == 'col'\" :key=\"col.index\" :xs=\"col.span.xs\"\n                         :sm=\"col.span.sm\" :md=\"col.span.md\" :lg=\"col.span.lg\">\n                        <Divider v-if=\"col.name\" orientation=\"left\" class=\"form-divider\">{{ col.name }}</Divider>\n                        <span v-for=\"item in col.children\" :key=\"item.index\">\n                            <component\n                                :ref=\"'sf'+item.model\" v-if=\"item.formType == 'SubForm' && item.subtype\"\n                                :is=\"element(`subform/${item.subtype}`)\"\n                                :label=\"item.label ? item.label : `[${item.model}]`\"\n                                :model=\"{form: model, component: item.model}\"\n                                :form=\"setMeta(item, true)\"\n                                :relations=\"relations\"\n                                :formula=\"formula\"\n                                :schemaID=\"schemaID\"\n                                :editMode=\"editMode\">\n                            </component>\n                            <component\n                                v-if=\"isShow(item.model) && item.formType != 'SubForm'\"\n                                :do_render=\"do_render\"\n                                :editMode=\"editMode\"\n                                :is=\"element(item.formType)\"\n                                :disabled=\"item.disabled ? item.disabled : false\"\n                                :model=\"{form: model, component: item.model}\"\n                                :label=\"item.label ? item.label : `[${item.model}]`\" :rule=\"item.model\"\n                                :meta=\"setMeta(item)\"\n                                :identity=\"identity\"\n                                :getSchemaByModel=\"getSchemaByModel\"\n                                :setSchemaByModel=\"setSchemaByModel\"\n                                :relation_data=\"getRelationData(item)\">\n                            </component>\n                            </span>\n                    </Col>\n                </Row>\n            </div>\n\n            <div class=\"dataform-footer\" v-if=\"!viewMode\">\n                <Button type=\"info\" :loading=\"asyncMode\" @click=\"handleSubmit(meta.model +'-'+ schemaID)\">\n                    <span v-if=\"!asyncMode\">\n                        {{lang.save}}\n                    </span>\n                    <span v-else>\n                        {{lang.pleaseWait}}\n                    </span>\n                </Button>\n                <Button @click=\"handleReset(meta.model +'-'+ schemaID)\" v-if=\"!editMode\"\n                        style=\"margin-left: 8px\">\n                    {{lang.fillInTheNewOne}}\n                </Button>\n            </div>\n        </Form>\n        <Drawer\n            class=\"info-modal\"\n            v-model=\"showInfo\"\n            :title=\"infoTitle\"\n            width=\"860px\"\n        >\n            <iframe :src=\"infoUrl\" frameborder=\"0\"></iframe>\n            <div slot=\"footer\">\n                <Button type=\"primary\" size=\"large\" @click=\"showInfo = false\">\n                    {{lang.close}}\n                </Button>\n            </div>\n        </Drawer>\n    </div>\n</template>\n\n<script>\nimport {element} from \"./elements\";\nimport {getRule, setModel, setIdentity} from \"./rule\";\nimport {doFormula, doTrigger} from \"./utils/formula_and_trigger.js\";\nimport {evalstr, isValid} from \"./utils/methods.js\";\n\nexport default {\n    name: \"dataform\",\n    props: [\n        \"projectID\",\n        \"schemaID\",\n        \"editMode\",\n        \"onReady\",\n        \"onSuccess\",\n        \"onError\",\n        \"permissions\",\n        \"user_condition\",\n        \"do_render\",\n        \"isSubForm\",\n        \"url\",\n        \"page_id\",\n        \"public\"\n    ],\n    data() {\n        return {\n            loadConfig: true,\n            viewMode: false,\n            asyncMode: false,\n            save_btn_text: \"\",\n            title: \"\",\n            meta: {\n                model: \"\",\n                option: {}\n            },\n            model: {},\n            schema: [],\n            ui: {},\n            formula: [],\n            rule: {},\n            identity: null,\n            dataID: null,\n            relations: {},\n            showInfo: false,\n            infoUrl: \"\",\n            infoTitle: \"\",\n            showID: window.init.showID,\n        };\n    },\n\n    computed: {\n        submitUrl() {\n            return this.editMode\n                ? this.page_id ? `/lambda/krud/${this.$props.schemaID}/update/${this.dataID}?page_id=${this.page_id}` : `/lambda/krud/${this.$props.schemaID}/update/${this.dataID}`\n                : this.page_id ? `/lambda/krud/${this.$props.schemaID}/store?page_id=${this.page_id}` : `/lambda/krud${this.Url}/${this.$props.schemaID}/store`;\n        },\n        Url() {\n            if (this.public === true) {\n                return \"-public\"\n            } else {\n                return \"\"\n            }\n        },\n        lang() {\n            const labels = ['save', 'pleaseWait', 'fillInTheNewOne', 'close', 'pleaseEnterPasswordYouUCurrentlyUsing', 'pleaseReEnterYourPassword',\n                'passwordConfirmError', 'informationIsIncomplete', 'trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder',\n                'successfullySaved', 'errorSaving'\n            ];\n            return labels.reduce((obj, key, i) => {\n                obj[key] = this.$t('dataForm.' + labels[i]);\n                return obj;\n            }, {});\n        },\n\n    },\n\n    created() {\n        window.showInformationModal = this.showInformationModal;\n        if (this.schemaID) {\n            this.initForm();\n        }\n    },\n\n    watch: {\n        src(val, oldValue) {\n            this.initForm();\n        },\n\n        editMode(val) {\n            if (!val) {\n                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n            }\n        },\n\n        do_render(val) {\n            if (!val) {\n                this.viewMode = false;\n                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n            }\n        },\n\n        schemaID(val) {\n            if (val) {\n                this.initForm();\n            }\n        },\n\n        ui(val) {\n            if (val && this.dataID) {\n                this.editModel(this.dataID);\n            }\n        }\n    },\n\n    methods: {\n        isVisibleSection(col) {\n            if (col.type == 'section') {\n                if (col.visibleUserRoles) {\n                    if (Array.isArray(col.visibleUserRoles)) {\n                        if (col.visibleUserRoles.length >= 1 && window.init.user) {\n                            if (col.visibleUserRoles.findIndex(role => role == window.init.user.role) >= 0) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                } else {\n                    return true;\n                }\n            } else {\n                return false;\n            }\n        },\n        element: element,\n        evalstr: evalstr,\n        isValid: isValid,\n        getRelationData(item) {\n            if (item.relation.filter == '' || typeof item.relation.filter === \"undefined\") {\n                if (this.relations[item.relation.table])\n                    return this.relations[item.relation.table]['data']\n                else\n                    return []\n            } else {\n                if (this.relations[item.model])\n                    return this.relations[item.model]['data']\n                else\n                    return []\n            }\n        },\n        isShow(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n            if (index >= 0) {\n                if (this.schema[index].hidden) {\n                    return false\n                } else\n                    return true\n            }\n            return true\n        },\n        afterChange(model, val, oldValue) {\n            doTrigger(model, val, this.model, this.schema, this.$refs, this.$Notice, this.editMode);\n            if (this.do_render) {\n\n                if (val != oldValue) {\n                    doFormula(this.formula, model, this.model, this.schema, this.rule, false);\n                }\n\n            }\n        },\n        clearConfig() {\n            this.model = {};\n            this.schema = [];\n            this.ui = {};\n            this.formula = [];\n            this.rule = {};\n            this.dataID = null;\n        },\n        initForm() {\n            // this.clearConfig();\n            let userCondition = [];\n\n            if (this.user_condition) {\n                userCondition = JSON.stringify(this.user_condition);\n            }\n            let baseUrl = this.$props.url ? this.$props.url : '';\n\n            let configUrl = baseUrl + `/lambda/puzzle/schema${this.Url}/form/${this.$props.schemaID}`;\n            if (this.projectID) {\n                configUrl = baseUrl + `/lambda/puzzle/project/${this.projectID}/form/${this.$props.schemaID}`;\n            }\n            configUrl += userCondition.length == 0 ? '' : `/${userCondition}`;\n\n            axios.get(configUrl).then(({data}) => {\n                let formData = JSON.parse(data.data.schema);\n\n                this.identity = formData.identity;\n                this.schema = formData.schema;\n                this.ui = formData.ui;\n                this.save_btn_text = formData.save_btn_text;\n\n                if (formData.formula) {\n                    this.formula = formData.formula;\n                }\n\n\n                this.title = data.data.name;\n\n                this.meta = {\n                    model: formData.model,\n                    option: {\n                        labelPosition: formData.labelPosition,\n                        labelWidth: formData.labelWidth\n                    }\n                };\n\n                this.getOptionsData(formData.schema);\n                this.setUiSchemaFormItem(formData.ui.schema);\n                this.setHiddenItemModel(formData.schema);\n                if (this.$props.onReady) {\n                    this.$props.onReady(formData, this.schema);\n                }\n                setModel(formData.model);\n                this.loadConfig = false;\n\n\n            });\n        },\n        setHiddenItemModel(schema) {\n            schema.forEach(item => {\n                    if (item.hidden || item.disabled) {\n                        if (this.isValid(item.default)) {\n                            this.setModel(item.model, item.default, item.formType);\n                        }\n\n                        if (item.hasUserId) {\n                            this.setModel(item.model, window.init.user.id * 1, item.formType);\n                        }\n                        if (this.isValid(item.param)) {\n                            if (item.param in this.$route.params) {\n                                let param = this.$route.params[item.param];\n                                if (param != 'null') {\n                                    Vue.set(this.$data.model, item.model, param);\n                                }\n                            }\n                        }\n                    }\n                    item.source_hidden = item.hidden;\n                    item.source_disabled = item.disabled;\n                }\n            )\n\n        },\n        validatePassCheck(model, rule, value, callback) {\n\n            let value_ = value ? value : '';\n            let password_value = this.model[model] ? this.model[model] : '';\n\n            if (value === '' && !this.editMode) {\n                callback(new Error(this.lang.pleaseReEnterYourPassword));\n            } else if (value_ !== password_value) {\n                callback(new Error(this.lang.passwordConfirmError));\n            } else {\n                callback();\n            }\n        },\n\n        setUiSchemaFormItem(items) {\n            items.forEach(item => {\n                if (item.type == \"form\") {\n                    this.setModel(item.model, item.default, item.formType);\n                    this.$watch(\"model.\" + item.model, {\n                        handler: (value, oldValue) => {\n                            this.afterChange(item.model, value, oldValue);\n                        },\n                        deep: true\n                    });\n\n                    if (item.rules) {\n                        this.setRule(item.model, item.rules);\n                    }\n                    if (item.formType == 'Password') {\n                        if (item.passwordOption) {\n                            if (item.passwordOption.confirm) {\n                                this.setModel('password_confirm', '', 'password');\n                                this.$data.rule['password_confirm'] = [{\n                                    validator: (rule, value, callback) => this.validatePassCheck(item.model, rule, value, callback),\n                                    trigger: 'blur'\n                                }];\n\n                            }\n                            if (item.passwordOption.edit_with_old_password) {\n                                this.setModel('current_password', '', 'password');\n                                let rules_for_current_password = [];\n                                let rules_current_password = [{\n                                    type: 'required',\n                                    msg: this.lang.pleaseEnterPasswordYouUCurrentlyUsing\n                                }, {type: 'check_current_password', msg: null}];\n                                rules_current_password.forEach(rule => {\n                                    let r = getRule(rule);\n                                    rules_for_current_password.push(r);\n                                });\n                                this.$data.rule['current_password'] = rules_for_current_password;\n                            }\n                        }\n                    }\n\n                } else if (_.isArray(item.children)) {\n                    this.setUiSchemaFormItem(item.children);\n                }\n            });\n        },\n\n        setModel(name, value, type) {\n            switch (type) {\n                case \"Switch\":\n                    let val = false;\n                    if (value == \"true\" || value == 1) {\n                        val = true;\n                    }\n                    Vue.set(this.$data.model, name, val);\n                    break;\n                case \"Checkbox\":\n                    let val_ = 0;\n                    if (value == \"true\" || value == 1) {\n                        val_ = 1;\n                    }\n                    Vue.set(this.$data.model, name, val_);\n                    break;\n                case \"CK\":\n                    let ck_value = \"\";\n                    if (value != \"\" && value !== null) {\n                        ck_value = value;\n                    }\n                    Vue.set(this.$data.model, name, ck_value);\n                    break;\n                case \"SubForm\":\n                    Vue.set(this.$data.model, name, []);\n                    break;\n                case \"Select\":\n                    Vue.set(this.$data.model, name, value);\n                    break;\n                case \"Number\":\n                    Vue.set(this.$data.model, name, value * 1);\n                    break;\n                case \"ISelect\":\n                    Vue.set(this.$data.model, name, value);\n                case \"TreeSelect\":\n                    Vue.set(this.$data.model, name, value);\n                    break;\n                default:\n                    Vue.set(this.$data.model, name, value);\n            }\n        },\n\n        setRule(name, rules) {\n            this.$data.rule[name] = [];\n            rules.forEach(item => {\n                let r = getRule(item);\n                this.$data.rule[name].push(r);\n            });\n        },\n\n        setMeta(item, subForm) {\n            let s_index = this.schema.findIndex(schema => schema.model == item.model);\n            let i = s_index >= 0 ? this.schema[s_index] : item;\n            if (!subForm) {\n                delete i[\"table\"];\n                delete i[\"extra\"];\n                i.schemaID = this.$props.schemaID;\n            }\n            return i;\n        },\n\n        getSchemaByModel(model) {\n            let index = this.schema.findIndex(item => item.model == model);\n            if (index >= 0)\n                return this.schema[index]\n            else\n                return null\n        },\n\n        setSchemaByModel(model, prop, value) {\n            if (prop == \"value\") {\n                Vue.set(this.$data.model, model, value);\n            } else if (prop == \"sub-value\") {\n                Vue.set(this.$data.model, model, value);\n                this.subFormFillData(model)\n            } else {\n                let index = this.schema.findIndex(item => item.model == model);\n                if (index >= 0)\n                    Vue.set(this.schema[index], prop, value)\n            }\n\n        },\n\n        getSubFormData(key) {\n            let subFormData = [];\n            this.model[key].forEach(item => {\n                subFormData.push(item.data);\n            });\n        },\n\n        handleSubmit(name) {\n            this.setIdentityManual();\n            if (_.isEmpty(this.$data.rule)) {\n                this.postData();\n            } else {\n                this.$refs[name].validate(valid => {\n                    if (valid) {\n                        this.postData();\n                    } else {\n                        //auh дээр хэрэглэгдэж байгаа шүү\n                        this.$Notice.error({\n                            title: this.lang.informationIsIncomplete,\n                            desc: this.lang.trRMandatoryFieldsFillInformationLookFormAFillRequiredFieldsWithRedBorder\n                            , duration: 0\n                        });\n                        console.log(this.$data.model);\n                        console.log(\"not passed validation\");\n                    }\n                });\n            }\n        },\n\n        postData() {\n            if (this.isSubForm) {\n                this.$props.onSuccess(this.$data.model);\n            } else {\n                this.asyncMode = true;\n                axios.post(this.submitUrl, this.$data.model)\n                    .then(({data}) => {\n                        //console.log(data);\n                        if (data.status) {\n                            this.$Notice.success({\n                                title: this.lang.successfullySaved\n                            });\n\n                            if (!this.editMode) {\n                                this.$data.model[this.identity] = data[this.identity];\n                                if (this.$props.onSuccess) {\n                                    this.$props.onSuccess(data.data);\n                                }\n                                this.handleReset(this.meta.model + \"-\" + this.schemaID);\n                            } else {\n                                if (this.$props.onSuccess) {\n                                    this.$props.onSuccess(data.data);\n                                }\n                            }\n                        } else {\n                            this.$Notice.error({\n                                title: this.lang.errorSaving\n                            });\n                            if (this.$props.onError) {\n                                this.$props.onError();\n                            }\n                        }\n                        this.asyncMode = false;\n                    })\n                    .catch(e => {\n                        let errorDesc = \"\";\n                        if (e.response.data.hasOwnProperty(\"error\")) {\n                            if (typeof e.response.data.error === 'string' || e.response.data.error instanceof String) {\n                                errorDesc = e.response.data.error;\n                            } else {\n                                if (e.response.data.error instanceof Object) {\n                                    Object.keys(e.response.data.error).forEach(error => {\n                                        let desc = error + \": \" + e.response.data.error[error].map(ed => ed + \" \")\n                                        if (errorDesc != \"\") {\n                                            errorDesc = errorDesc + \"<br/>\" + desc;\n                                        } else {\n                                            errorDesc = desc;\n                                        }\n                                    })\n                                }\n                            }\n\n                        }\n                        this.$Notice.error({\n                            title: this.lang.errorSaving,\n                            duration: 3,\n                            desc: errorDesc\n                        });\n                        this.asyncMode = false;\n                        if (this.$props.onError) {\n                            this.$props.onError();\n                        }\n                    });\n            }\n        },\n\n        handleReset(name) {\n            this.model = {};\n            this.$refs[name].resetFields();\n            setIdentity(this.identity, null);\n            this.schema.forEach(item => {\n                if (item.formType == \"SubForm\" && typeof this.$refs[`sf${item.model}`] != \"undefined\") {\n                    this.$refs[`sf${item.model}`][0].reset();\n                }\n                //if (item.default != null && !this.editMode) {\n                this.setModel(item.model, item.default, item.formType);\n                //}\n\n                item.hidden = item.source_hidden;\n                item.disabled = item.source_disabled;\n            });\n            this.setHiddenItemModel(this.schema);\n        },\n        setIdentityManual() {\n            setIdentity(this.identity, this.model[this.identity]);\n        },\n\n        setUserConditionValues() {\n\n            //SET DEFAULT VALUE Disabled item on edit mode\n            if (this.user_condition) {\n                this.user_condition.forEach(user_condition => {\n\n                    let schemaItem = this.getSchemaByModel(user_condition[\"form_field\"]);\n\n                    if (schemaItem.default != \"\" && schemaItem.default !== null && schemaItem.default != 0) {\n                        if (this.model[schemaItem.model] == \"\" || this.model[schemaItem.model] === null || this.model[schemaItem.model] == 0) {\n\n                            this.model[schemaItem.model] = schemaItem.default;\n                        }\n                    }\n\n                });\n            }\n\n        },\n\n        editModel(id, editData) {\n            if (editData) {\n                this.model = {...this.model, ...editData};\n                if (this.ui && this.ui.hasOwnProperty(\"schema\")) {\n                    this.setEditModel(this.ui.schema);\n                    this.setUserConditionValues();\n                }\n\n            } else {\n                this.dataID = id;\n                setIdentity(this.identity, id);\n                axios.post(this.page_id ? `/lambda/krud/${this.$props.schemaID}/edit/${id}?page_id=${this.page_id}` : `/lambda/krud/${this.$props.schemaID}/edit/${id}`)\n                    .then(({data}) => {\n                        if (data.status) {\n                            this.model = {...this.model, ...data.data};\n                            if (this.ui && this.ui.hasOwnProperty(\"schema\")) {\n                                this.setEditModel(this.ui.schema);\n                            }\n                            this.setUserConditionValues();\n                        }\n                    });\n            }\n        },\n\n        setHiddenValues(values) {\n            values.map(item => {\n                this.model[item[\"key\"]] = item[\"val\"];\n            });\n        },\n\n        subFormFillData(subModel) {\n            if (this.$refs[`sf${subModel}`]) {\n                this.$refs[`sf${subModel}`][0].fillData();\n            } else {\n                setTimeout(() => {\n                    this.subFormFillData(subModel)\n                }, 100)\n            }\n        },\n\n        setEditModel(items) {\n            items.forEach(item => {\n                if (item.type == \"form\" || item.type == \"Form\" || item.formType == \"SubForm\") {\n\n                    switch (item.formType) {\n                        case \"SubForm\":\n                            this.subFormFillData(item.model);\n                            break;\n                        case \"Switch\":\n                            if (this.model[item.model] == 1 || this.model[item.model] == \"true\") {\n                                this.model[item.model] = true;\n                            } else {\n                                this.model[item.model] = false;\n                            }\n                            break;\n                        // case \"Checkbox\":\n                        //     if (this.model[item.model] == 1 || this.model[item.model] == \"true\") {\n                        //         this.model[item.model] = true;\n                        //     } else {\n                        //         this.model[item.model] = false;\n                        //     }\n                        //     break;\n                        case \"Password\":\n                            this.model[item.model] = '';\n                            delete this.$data.rule[item.model];\n                            break;\n                        case \"PasswordGenerate\":\n                            this.model[item.model] = '';\n                            delete this.$data.rule[item.model];\n                            break;\n                        default:\n                            break;\n                    }\n                } else if (_.isArray(item.children)) {\n                    this.setEditModel(item.children);\n                }\n            });\n        },\n        cloneModel(id) {\n            axios.post(`/lambda/krud/${this.$props.schemaID}/edit/${id}`)\n                .then(({data}) => {\n                    if (data.status) {\n                        this.model = {...this.model, ...data.data};\n                        delete this.model[this.identity];\n                        console.log(this.identity);\n                        console.log(this.model[this.identity]);\n                        this.setEditModel(this.ui.schema);\n                        this.setUserConditionValues();\n                    }\n                });\n        },\n\n        getOptionsData(schema) {\n            this.relations = this.getSelects(schema);\n\n            if (Object.keys(this.relations).length >= 1) {\n                axios.post(`/lambda/puzzle/get_options${this.Url}`, {relations: this.relations})\n                    .then(({data}) => {\n                        Object.keys(data).map(relation => {\n                            let r = {...this.relations[relation], data: data[relation]}\n                            Vue.set(this.$data.relations, relation, r);\n                        });\n\n\n                    });\n            }\n        },\n        getSelects(schema) {\n            let selects = {};\n\n            schema.map(item => {\n                if (item.formType == 'Select' || item.formType == 'ISelect' || item.formType == 'TreeSelect') {\n                    if (item.relation.table) {\n                        if (typeof selects[item.relation.table] === \"undefined\") {\n\n                            if (item.relation.filter == \"\" || typeof item.relation.filter === \"undefined\") {\n                                selects[item.relation.table] = item.relation;\n                            } else {\n\n                                selects[item.model] = item.relation;\n                            }\n                        }\n                    }\n                }\n\n                if (item.formType == 'AdminMenu') {\n                    if (item.relation.table)\n                        selects[item.relation.table] = item.relation;\n                }\n\n                if (item.formType == 'SubForm') {\n\n                    if (item.schema) {\n                        let pre_selects = this.getSelects(item.schema);\n                        if (pre_selects) {\n                            selects = {...selects, ...pre_selects}\n                        }\n                    }\n\n                }\n            });\n            return selects;\n        },\n\n        /* countShowableChildren(children){\n             let visible_item_found = false;\n             children.forEach(child=>{\n                 if(child.children){\n                     child.children.forEach(sub_child=>{\n                         if(sub_child.children){\n                             sub_child.children.forEach(form_field=>{\n\n                                 if(!form_field.hidden && form_field.type == 'form'){\n                                     visible_item_found = true;\n                                     console.log(form_field)\n\n                                 }\n\n                             })\n                         }\n                     })\n                 }\n             })\n             return visible_item_found;\n         }*/\n        showInformationModal(url, title) {\n\n\n            this.infoTitle = title;\n            this.infoUrl = url;\n            this.showInfo = true;\n\n        }\n    },\n};\n</script>\n\n","import mod from \"-!../../../starter-apps/lambda-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../starter-apps/lambda-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Dataform.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../starter-apps/lambda-go/node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../starter-apps/lambda-go/node_modules/vue-loader/lib/index.js??vue-loader-options!./Dataform.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dataform.vue?vue&type=template&id=64c1071a&\"\nimport script from \"./Dataform.vue?vue&type=script&lang=js&\"\nexport * from \"./Dataform.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../starter-apps/lambda-go/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","elementList","element","component","Notfount","type","elIndex","findIndex","el","window","init","data_form_custom_elements","find","custom_element","require","requireCustomElement","ruleModel","identityColumn","identity","setModel","model","setIdentity","column","value","rules","msg","unique","rule","callback","axios","post","table","field","val","then","data","status","checkLambdaaccount","englishAlphabet","match","check_current_password","password","getRule","required","message","min","parseInt","validator","trigger","templateRe","fieldTimeout","doFormula","formulas","model_","schema_","rule_","subFormModelName","length","formula_index","formula","template","includes","doFormula2","str","use_formula","pre_formula","replace","key","undefined","calculated","Function","targets","target","schema_index","getSchemaIndex","prop","hasOwnProperty","doTrigger","refs","Message","editMode","model_index","clearTimeout","setTimeout","trigger_url","forEach","setValueProps","schema_sub","schema","field_sub","success","duration","desc","error","info","document","getElementById","innerHTML","html","callFieldTrigger","is_sub","schema_sub_index","props","formType","fillData","item","idGenerator","randomId","Math","random","toString","substr","evalstr","eval","isValid","name","_h","this","$createElement","_self","_c","_vm","class","viewMode","ref","meta","schemaID","attrs","option","labelPosition","labelWidth","staticClass","_v","_s","title","_e","_l","ui","row","index","col","isVisibleSection","span","xs","sm","md","lg","srow","scol","isShow","subtype","refInFor","tag","form","setMeta","relations","do_render","disabled","label","getSchemaByModel","setSchemaByModel","getRelationData","asyncMode","on","$event","handleSubmit","lang","pleaseWait","save","staticStyle","handleReset","fillInTheNewOne","infoTitle","$$v","showInfo","expression","infoUrl","slot","close","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat"],"sourceRoot":""}